extraction = gigapath, seed = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7210
val 1: loss = 1.2693 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.6562
train 2: loss = 0.3266
val 2: loss = 0.3880 | acc = 0.8333 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8750
train 3: loss = 0.1797
val 3: loss = 0.8875 | acc = 0.8333 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8750
train 4: loss = 0.1004
val 4: loss = 0.7048 | acc = 0.7500 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8750
train 5: loss = 0.0088
val 5: loss = 0.6996 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 6: loss = 0.0054
val 6: loss = 0.6996 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 7: loss = 0.0041
val 7: loss = 0.6855 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 8: loss = 0.0035
val 8: loss = 0.6755 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
train 9: loss = 0.0031
val 9: loss = 0.6742 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
train 10: loss = 0.0029
val 10: loss = 0.6790 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
test: loss = 0.7105 | acc = 0.7826 | precision = 0.7500 | recall = 0.6667 | f1 = 0.7059 | auc = 0.8333

extraction = gigapath, seed = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0566
val 1: loss = 0.6304 | acc = 0.7500 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8438
train 2: loss = 0.3115
val 2: loss = 1.3381 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7188
train 3: loss = 0.2716
val 3: loss = 0.8791 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8750
train 4: loss = 0.0451
val 4: loss = 0.7933 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
train 5: loss = 0.0130
val 5: loss = 0.8238 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.0079
val 6: loss = 0.8942 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 7: loss = 0.0053
val 7: loss = 0.9237 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 8: loss = 0.0044
val 8: loss = 0.9424 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 9: loss = 0.0042
val 9: loss = 0.9538 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 10: loss = 0.0038
val 10: loss = 0.9605 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
test: loss = 0.6839 | acc = 0.7391 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.8492

extraction = gigapath, seed = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7346
val 1: loss = 0.8381 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6562
train 2: loss = 0.1872
val 2: loss = 1.4369 | acc = 0.6667 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.6250
train 3: loss = 0.1413
val 3: loss = 1.4555 | acc = 0.5833 | precision = 0.3333 | recall = 0.2500 | f1 = 0.2857 | auc = 0.7188
train 4: loss = 0.1218
val 4: loss = 1.9600 | acc = 0.5000 | precision = 0.3750 | recall = 0.7500 | f1 = 0.5000 | auc = 0.7188
train 5: loss = 0.0530
val 5: loss = 1.6022 | acc = 0.5833 | precision = 0.3333 | recall = 0.2500 | f1 = 0.2857 | auc = 0.6562
train 6: loss = 0.0069
val 6: loss = 1.5346 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6562
train 7: loss = 0.0022
val 7: loss = 1.5026 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6562
train 8: loss = 0.0019
val 8: loss = 1.4891 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6562
train 9: loss = 0.0018
val 9: loss = 1.4884 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6562
train 10: loss = 0.0015
val 10: loss = 1.4885 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6562
test: loss = 0.5857 | acc = 0.6522 | precision = 0.6429 | recall = 0.7500 | f1 = 0.6923 | auc = 0.8182

extraction = gigapath, seed = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0326
val 1: loss = 0.6409 | acc = 0.7500 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8286
train 2: loss = 0.3255
val 2: loss = 0.8630 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
train 3: loss = 0.2565
val 3: loss = 0.9707 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7714
train 4: loss = 0.1059
val 4: loss = 0.5970 | acc = 0.6667 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7714
train 5: loss = 0.0465
val 5: loss = 0.7169 | acc = 0.5000 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.7143
train 6: loss = 0.0181
val 6: loss = 0.8738 | acc = 0.7500 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.7714
train 7: loss = 0.0069
val 7: loss = 0.7833 | acc = 0.6667 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7714
train 8: loss = 0.0056
val 8: loss = 0.8205 | acc = 0.6667 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8000
train 9: loss = 0.0052
val 9: loss = 0.8217 | acc = 0.6667 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8000
train 10: loss = 0.0047
val 10: loss = 0.8237 | acc = 0.6667 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8000
test: loss = 0.3301 | acc = 0.9130 | precision = 0.9333 | recall = 0.9333 | f1 = 0.9333 | auc = 0.9250

extraction = gigapath, seed = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9358
val 1: loss = 1.0912 | acc = 0.5833 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.6571
train 2: loss = 0.4338
val 2: loss = 1.6766 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.7714
train 3: loss = 0.2154
val 3: loss = 1.8289 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.6571
train 4: loss = 0.0420
val 4: loss = 1.4818 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
train 5: loss = 0.0116
val 5: loss = 1.5887 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
train 6: loss = 0.0068
val 6: loss = 1.6822 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
train 7: loss = 0.0047
val 7: loss = 1.6965 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
train 8: loss = 0.0038
val 8: loss = 1.7203 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
train 9: loss = 0.0036
val 9: loss = 1.7287 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
train 10: loss = 0.0032
val 10: loss = 1.7345 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7143
test: loss = 0.8008 | acc = 0.6957 | precision = 0.6000 | recall = 0.6667 | f1 = 0.6316 | auc = 0.8175

extraction = uni, seed = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6810
val 1: loss = 0.4148 | acc = 0.8333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9062
train 2: loss = 0.2719
val 2: loss = 0.4400 | acc = 0.8333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8750
train 3: loss = 0.1466
val 3: loss = 0.9019 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9062
train 4: loss = 0.0631
val 4: loss = 1.2359 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8125
train 5: loss = 0.0160
val 5: loss = 1.1644 | acc = 0.7500 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8438
train 6: loss = 0.0074
val 6: loss = 0.9726 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 7: loss = 0.0055
val 7: loss = 0.9883 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 8: loss = 0.0043
val 8: loss = 1.0125 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 9: loss = 0.0038
val 9: loss = 1.0354 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 10: loss = 0.0036
val 10: loss = 1.0370 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
test: loss = 0.6239 | acc = 0.7391 | precision = 0.6154 | recall = 0.8889 | f1 = 0.7273 | auc = 0.8333

extraction = uni, seed = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.5951
val 1: loss = 0.5050 | acc = 0.8333 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9062
train 2: loss = 0.3378
val 2: loss = 0.6597 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8750
train 3: loss = 0.1413
val 3: loss = 0.5592 | acc = 0.7500 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.9062
train 4: loss = 0.1353
val 4: loss = 0.7180 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9062
train 5: loss = 0.0718
val 5: loss = 0.8037 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8750
train 6: loss = 0.0124
val 6: loss = 0.8693 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9062
train 7: loss = 0.0079
val 7: loss = 0.8520 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9062
train 8: loss = 0.0058
val 8: loss = 0.8616 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9062
train 9: loss = 0.0051
val 9: loss = 0.8621 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9062
train 10: loss = 0.0048
val 10: loss = 0.8639 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9062
test: loss = 0.3995 | acc = 0.8696 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.9524

extraction = uni, seed = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7658
val 1: loss = 1.2146 | acc = 0.6667 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6562
train 2: loss = 0.3023
val 2: loss = 1.0603 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6875
train 3: loss = 0.1166
val 3: loss = 1.2222 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7500
train 4: loss = 0.0312
val 4: loss = 1.2971 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7188
train 5: loss = 0.0113
val 5: loss = 1.4223 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.7188
train 6: loss = 0.0072
val 6: loss = 1.6212 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7188
train 7: loss = 0.0053
val 7: loss = 1.6138 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7188
train 8: loss = 0.0044
val 8: loss = 1.6346 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7188
train 9: loss = 0.0039
val 9: loss = 1.6489 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7188
train 10: loss = 0.0038
val 10: loss = 1.6529 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7188
test: loss = 0.6493 | acc = 0.7391 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8561

extraction = uni, seed = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8758
val 1: loss = 0.3471 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 2: loss = 0.3478
val 2: loss = 0.3223 | acc = 0.8333 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9143
train 3: loss = 0.1584
val 3: loss = 0.2105 | acc = 0.9167 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 1.0000
train 4: loss = 0.0372
val 4: loss = 0.1384 | acc = 0.9167 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 1.0000
train 5: loss = 0.0137
val 5: loss = 0.2785 | acc = 0.7500 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 1.0000
train 6: loss = 0.0093
val 6: loss = 0.2009 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 1.0000
train 7: loss = 0.0068
val 7: loss = 0.2140 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 1.0000
train 8: loss = 0.0058
val 8: loss = 0.2413 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 1.0000
train 9: loss = 0.0052
val 9: loss = 0.2530 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 1.0000
train 10: loss = 0.0049
val 10: loss = 0.2396 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 1.0000
test: loss = 0.3887 | acc = 0.7826 | precision = 0.8125 | recall = 0.8667 | f1 = 0.8387 | auc = 0.9167

extraction = uni, seed = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7144
val 1: loss = 0.6437 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7714
train 2: loss = 0.3892
val 2: loss = 0.7782 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.7714
train 3: loss = 0.1270
val 3: loss = 0.8731 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7429
train 4: loss = 0.0850
val 4: loss = 0.7765 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.9143
train 5: loss = 0.0156
val 5: loss = 0.9340 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8571
train 6: loss = 0.0070
val 6: loss = 0.9231 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8286
train 7: loss = 0.0051
val 7: loss = 0.9841 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8286
train 8: loss = 0.0045
val 8: loss = 1.0447 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8286
train 9: loss = 0.0039
val 9: loss = 1.0456 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8286
train 10: loss = 0.0036
val 10: loss = 1.0495 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8286
test: loss = 0.5706 | acc = 0.7391 | precision = 0.6154 | recall = 0.8889 | f1 = 0.7273 | auc = 0.8651

extraction = resnet50, seed = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.1081
val 1: loss = 0.8532 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5625
train 2: loss = 0.7853
val 2: loss = 0.6253 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
train 3: loss = 0.9395
val 3: loss = 0.5959 | acc = 0.7500 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.6875
train 4: loss = 0.6113
val 4: loss = 0.6038 | acc = 0.7500 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6875
train 5: loss = 0.5523
val 5: loss = 0.6843 | acc = 0.5000 | precision = 0.3333 | recall = 0.5000 | f1 = 0.4000 | auc = 0.7500
train 6: loss = 0.5342
val 6: loss = 1.1034 | acc = 0.4167 | precision = 0.3636 | recall = 1.0000 | f1 = 0.5333 | auc = 0.6875
train 7: loss = 0.4185
val 7: loss = 1.8415 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 8: loss = 0.4672
val 8: loss = 0.8238 | acc = 0.5000 | precision = 0.3333 | recall = 0.5000 | f1 = 0.4000 | auc = 0.7500
train 9: loss = 0.3815
val 9: loss = 0.6985 | acc = 0.5000 | precision = 0.3333 | recall = 0.5000 | f1 = 0.4000 | auc = 0.7500
train 10: loss = 0.3407
val 10: loss = 0.8263 | acc = 0.5000 | precision = 0.3333 | recall = 0.5000 | f1 = 0.4000 | auc = 0.7500
test: loss = 0.6603 | acc = 0.5217 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6349

extraction = resnet50, seed = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9263
val 1: loss = 0.7138 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7812
train 2: loss = 0.7693
val 2: loss = 0.9187 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.8125
train 3: loss = 0.7814
val 3: loss = 0.5688 | acc = 0.7500 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.8125
train 4: loss = 0.6885
val 4: loss = 0.8937 | acc = 0.4167 | precision = 0.3636 | recall = 1.0000 | f1 = 0.5333 | auc = 0.8438
train 5: loss = 0.5601
val 5: loss = 0.4385 | acc = 0.8333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8750
train 6: loss = 0.4617
val 6: loss = 0.4754 | acc = 0.8333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8125
train 7: loss = 0.4962
val 7: loss = 0.5701 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 8: loss = 0.2818
val 8: loss = 0.9198 | acc = 0.5833 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.8750
train 9: loss = 0.2867
val 9: loss = 0.5224 | acc = 0.8333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8438
train 10: loss = 0.2015
val 10: loss = 0.6910 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
test: loss = 0.5307 | acc = 0.7391 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.8095

extraction = resnet50, seed = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.2590
val 1: loss = 1.3134 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.6875
train 2: loss = 0.9248
val 2: loss = 0.6495 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 3: loss = 0.7021
val 3: loss = 0.8595 | acc = 0.4167 | precision = 0.3636 | recall = 1.0000 | f1 = 0.5333 | auc = 0.6250
train 4: loss = 0.7001
val 4: loss = 0.6324 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 5: loss = 0.6503
val 5: loss = 1.2487 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.6250
train 6: loss = 0.5831
val 6: loss = 0.5652 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6875
train 7: loss = 0.4302
val 7: loss = 0.7408 | acc = 0.5000 | precision = 0.3750 | recall = 0.7500 | f1 = 0.5000 | auc = 0.6875
train 8: loss = 0.3855
val 8: loss = 0.8130 | acc = 0.5000 | precision = 0.3750 | recall = 0.7500 | f1 = 0.5000 | auc = 0.7188
train 9: loss = 0.3275
val 9: loss = 0.7428 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.6875
train 10: loss = 0.2734
val 10: loss = 0.7871 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.6875
test: loss = 0.6126 | acc = 0.6087 | precision = 0.7143 | recall = 0.4167 | f1 = 0.5263 | auc = 0.7424

extraction = resnet50, seed = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.5707
val 1: loss = 0.7940 | acc = 0.5833 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.6286
train 2: loss = 0.8817
val 2: loss = 0.7197 | acc = 0.5833 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.6857
train 3: loss = 0.7865
val 3: loss = 0.6154 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.6857
train 4: loss = 0.7617
val 4: loss = 1.0901 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 5: loss = 0.6343
val 5: loss = 0.6849 | acc = 0.5833 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.6571
train 6: loss = 0.5750
val 6: loss = 0.6752 | acc = 0.5000 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.6857
train 7: loss = 0.5442
val 7: loss = 0.6352 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.7143
train 8: loss = 0.4690
val 8: loss = 0.6005 | acc = 0.6667 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.6857
train 9: loss = 0.4437
val 9: loss = 0.6208 | acc = 0.6667 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.6857
train 10: loss = 0.4426
val 10: loss = 0.6510 | acc = 0.5833 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6571
test: loss = 0.3616 | acc = 0.9565 | precision = 0.9375 | recall = 1.0000 | f1 = 0.9677 | auc = 0.9833

extraction = resnet50, seed = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.3605
val 1: loss = 0.6524 | acc = 0.5833 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.6571
train 2: loss = 0.8702
val 2: loss = 0.9289 | acc = 0.5833 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.6857
train 3: loss = 0.7499
val 3: loss = 0.7778 | acc = 0.5000 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.6000
train 4: loss = 0.6498
val 4: loss = 0.6779 | acc = 0.5833 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.6286
train 5: loss = 0.6525
val 5: loss = 0.9847 | acc = 0.5833 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.6571
train 6: loss = 0.6270
val 6: loss = 0.7413 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.6857
train 7: loss = 0.5036
val 7: loss = 0.9040 | acc = 0.5833 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.6857
train 8: loss = 0.4184
val 8: loss = 0.7007 | acc = 0.5000 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.6571
train 9: loss = 0.3631
val 9: loss = 0.7657 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.6857
train 10: loss = 0.3199
val 10: loss = 0.8164 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.6857
test: loss = 0.6524 | acc = 0.6087 | precision = 0.5000 | recall = 0.8889 | f1 = 0.6400 | auc = 0.8651

seed = 2024
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0498
val 1: loss = 0.7901 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8163
train 2: loss = 0.4312
val 2: loss = 0.6431 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7959
train 3: loss = 0.2895
val 3: loss = 1.8021 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.7551
train 4: loss = 0.1386
val 4: loss = 0.9405 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7347
train 5: loss = 0.0304
val 5: loss = 1.0971 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7755
train 6: loss = 0.0114
val 6: loss = 1.2403 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7551
train 7: loss = 0.0075
val 7: loss = 1.2316 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7551
train 8: loss = 0.0059
val 8: loss = 1.2577 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7551
train 9: loss = 0.0054
val 9: loss = 1.2770 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7551
train 10: loss = 0.0050
val 10: loss = 1.2944 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7551
test: loss = 1.2312 | acc = 0.6429 | precision = 0.5882 | recall = 0.7692 | f1 = 0.6667 | auc = 0.6974

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.1907
val 1: loss = 0.9922 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7347
train 2: loss = 0.4510
val 2: loss = 0.6089 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 3: loss = 0.1695
val 3: loss = 0.7388 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 4: loss = 0.1656
val 4: loss = 0.8584 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 5: loss = 0.0375
val 5: loss = 0.9231 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7755
train 6: loss = 0.0122
val 6: loss = 1.2058 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7755
train 7: loss = 0.0081
val 7: loss = 1.3691 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7755
train 8: loss = 0.0061
val 8: loss = 1.3707 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7755
train 9: loss = 0.0059
val 9: loss = 1.3566 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7755
train 10: loss = 0.0051
val 10: loss = 1.3567 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7755
test: loss = 0.7203 | acc = 0.6786 | precision = 0.6111 | recall = 0.8462 | f1 = 0.7097 | auc = 0.7641

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.2034
val 1: loss = 0.8837 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 2: loss = 0.4399
val 2: loss = 0.6230 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7347
train 3: loss = 0.3108
val 3: loss = 1.0399 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
train 4: loss = 0.2513
val 4: loss = 0.6192 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8367
train 5: loss = 0.0480
val 5: loss = 0.8951 | acc = 0.5000 | precision = 0.5000 | recall = 0.4286 | f1 = 0.4615 | auc = 0.6939
train 6: loss = 0.0191
val 6: loss = 0.8651 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7959
train 7: loss = 0.0127
val 7: loss = 0.9182 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7959
train 8: loss = 0.0101
val 8: loss = 0.9194 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7959
train 9: loss = 0.0087
val 9: loss = 0.9243 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7959
train 10: loss = 0.0082
val 10: loss = 0.9315 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7959
test: loss = 0.3794 | acc = 0.8929 | precision = 0.8750 | recall = 0.9333 | f1 = 0.9032 | auc = 0.9282

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9968
val 1: loss = 0.5677 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 2: loss = 0.3394
val 2: loss = 0.5896 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
train 3: loss = 0.1402
val 3: loss = 0.9222 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 4: loss = 0.0968
val 4: loss = 0.8050 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 5: loss = 0.0295
val 5: loss = 1.2993 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7755
train 6: loss = 0.0104
val 6: loss = 1.0916 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 7: loss = 0.0047
val 7: loss = 1.0898 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 8: loss = 0.0037
val 8: loss = 1.0895 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 9: loss = 0.0033
val 9: loss = 1.0894 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 10: loss = 0.0032
val 10: loss = 1.0980 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
test: loss = 0.9861 | acc = 0.6071 | precision = 0.5556 | recall = 0.7692 | f1 = 0.6452 | auc = 0.7231

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9762
val 1: loss = 0.8629 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.7556
train 2: loss = 0.4097
val 2: loss = 0.7836 | acc = 0.6429 | precision = 0.7500 | recall = 0.6667 | f1 = 0.7059 | auc = 0.7333
train 3: loss = 0.2077
val 3: loss = 1.2546 | acc = 0.4286 | precision = 0.5556 | recall = 0.5556 | f1 = 0.5556 | auc = 0.5778
train 4: loss = 0.0999
val 4: loss = 1.1422 | acc = 0.6429 | precision = 0.8333 | recall = 0.5556 | f1 = 0.6667 | auc = 0.7111
train 5: loss = 0.0272
val 5: loss = 1.2137 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.7111
train 6: loss = 0.0082
val 6: loss = 1.4255 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
train 7: loss = 0.0057
val 7: loss = 1.4641 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
train 8: loss = 0.0050
val 8: loss = 1.4745 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
train 9: loss = 0.0043
val 9: loss = 1.4900 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
train 10: loss = 0.0038
val 10: loss = 1.4992 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
test: loss = 0.5211 | acc = 0.7778 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8667

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9573
val 1: loss = 2.6959 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8571
train 2: loss = 0.4444
val 2: loss = 0.3981 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9592
train 3: loss = 0.2095
val 3: loss = 1.3355 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8367
train 4: loss = 0.0981
val 4: loss = 0.5390 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 5: loss = 0.0326
val 5: loss = 1.0869 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8571
train 6: loss = 0.0134
val 6: loss = 1.1621 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
train 7: loss = 0.0097
val 7: loss = 1.1363 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
train 8: loss = 0.0078
val 8: loss = 1.1321 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
train 9: loss = 0.0064
val 9: loss = 1.1861 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
train 10: loss = 0.0062
val 10: loss = 1.1830 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
test: loss = 0.8116 | acc = 0.6786 | precision = 0.6250 | recall = 0.7692 | f1 = 0.6897 | auc = 0.7333

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8514
val 1: loss = 2.3893 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7551
train 2: loss = 0.4563
val 2: loss = 0.6938 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8980
train 3: loss = 0.2564
val 3: loss = 1.3244 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8367
train 4: loss = 0.1152
val 4: loss = 1.2103 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 5: loss = 0.0461
val 5: loss = 1.7608 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7755
train 6: loss = 0.0160
val 6: loss = 1.6654 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7755
train 7: loss = 0.0086
val 7: loss = 1.5639 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 8: loss = 0.0067
val 8: loss = 1.7058 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 9: loss = 0.0058
val 9: loss = 1.7636 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 10: loss = 0.0056
val 10: loss = 1.7705 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
test: loss = 0.6797 | acc = 0.7857 | precision = 0.7333 | recall = 0.8462 | f1 = 0.7857 | auc = 0.8308

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8324
val 1: loss = 1.6268 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.8163
train 2: loss = 0.5617
val 2: loss = 0.5388 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8571
train 3: loss = 0.2393
val 3: loss = 1.0255 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 4: loss = 0.1167
val 4: loss = 1.2003 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7755
train 5: loss = 0.0496
val 5: loss = 1.9689 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7755
train 6: loss = 0.0217
val 6: loss = 1.7711 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 7: loss = 0.0135
val 7: loss = 1.7587 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 8: loss = 0.0098
val 8: loss = 1.7885 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 9: loss = 0.0086
val 9: loss = 1.8299 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 10: loss = 0.0082
val 10: loss = 1.8358 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
test: loss = 0.4661 | acc = 0.7143 | precision = 0.7333 | recall = 0.7333 | f1 = 0.7333 | auc = 0.8769

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8777
val 1: loss = 0.8461 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 2: loss = 0.5597
val 2: loss = 0.5945 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 3: loss = 0.2590
val 3: loss = 0.8977 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.9184
train 4: loss = 0.0986
val 4: loss = 0.9502 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 5: loss = 0.0433
val 5: loss = 1.1182 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 6: loss = 0.0217
val 6: loss = 1.1352 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 7: loss = 0.0139
val 7: loss = 1.1074 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 8: loss = 0.0113
val 8: loss = 1.1861 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 9: loss = 0.0096
val 9: loss = 1.1748 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 10: loss = 0.0087
val 10: loss = 1.1820 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
test: loss = 0.7209 | acc = 0.7143 | precision = 0.6316 | recall = 0.9231 | f1 = 0.7500 | auc = 0.8103

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9963
val 1: loss = 1.0041 | acc = 0.6429 | precision = 0.8333 | recall = 0.5556 | f1 = 0.6667 | auc = 0.7778
train 2: loss = 0.5725
val 2: loss = 0.8857 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6667
train 3: loss = 0.3199
val 3: loss = 0.6661 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.7778
train 4: loss = 0.2205
val 4: loss = 0.8383 | acc = 0.7857 | precision = 0.8000 | recall = 0.8889 | f1 = 0.8421 | auc = 0.6444
train 5: loss = 0.0834
val 5: loss = 0.9105 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.6667
train 6: loss = 0.0462
val 6: loss = 1.0317 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6889
train 7: loss = 0.0226
val 7: loss = 1.0454 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
train 8: loss = 0.0164
val 8: loss = 1.1402 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6889
train 9: loss = 0.0135
val 9: loss = 1.1845 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
train 10: loss = 0.0131
val 10: loss = 1.1903 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6889
test: loss = 0.6349 | acc = 0.7778 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8222

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.2308
val 1: loss = 1.1751 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7551
train 2: loss = 0.9132
val 2: loss = 0.8328 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7959
train 3: loss = 0.7233
val 3: loss = 0.6454 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.8367
train 4: loss = 0.6651
val 4: loss = 0.6306 | acc = 0.5714 | precision = 0.5385 | recall = 1.0000 | f1 = 0.7000 | auc = 0.7959
train 5: loss = 0.7954
val 5: loss = 0.5899 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 6: loss = 0.6044
val 6: loss = 0.6137 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7755
train 7: loss = 0.5635
val 7: loss = 1.4420 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7755
train 8: loss = 0.5091
val 8: loss = 0.6377 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 9: loss = 0.3934
val 9: loss = 0.6338 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8163
train 10: loss = 0.3581
val 10: loss = 0.5887 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8163
test: loss = 0.5045 | acc = 0.8214 | precision = 0.7857 | recall = 0.8462 | f1 = 0.8148 | auc = 0.8410

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0407
val 1: loss = 1.2219 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7755
train 2: loss = 0.8921
val 2: loss = 0.5948 | acc = 0.7857 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8163
train 3: loss = 0.6581
val 3: loss = 0.6428 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.7755
train 4: loss = 0.7097
val 4: loss = 0.5615 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7755
train 5: loss = 0.7342
val 5: loss = 0.9148 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7551
train 6: loss = 0.6548
val 6: loss = 0.5713 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7755
train 7: loss = 0.5696
val 7: loss = 1.5865 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7959
train 8: loss = 0.5789
val 8: loss = 1.2027 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7347
train 9: loss = 0.5327
val 9: loss = 0.7999 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7143
train 10: loss = 0.4564
val 10: loss = 0.7532 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7551
test: loss = 0.7310 | acc = 0.4643 | precision = 0.4375 | recall = 0.5385 | f1 = 0.4828 | auc = 0.5436

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.1617
val 1: loss = 0.8545 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7959
train 2: loss = 0.8361
val 2: loss = 0.9189 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7959
train 3: loss = 0.6968
val 3: loss = 0.6239 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7959
train 4: loss = 0.6908
val 4: loss = 0.7397 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8571
train 5: loss = 0.6233
val 5: loss = 1.0162 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8367
train 6: loss = 0.5979
val 6: loss = 0.6492 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7755
train 7: loss = 0.4596
val 7: loss = 0.9401 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8163
train 8: loss = 0.3980
val 8: loss = 1.1113 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8367
train 9: loss = 0.3694
val 9: loss = 0.5271 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 10: loss = 0.3096
val 10: loss = 0.5485 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
test: loss = 0.7022 | acc = 0.5714 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7385

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.3049
val 1: loss = 0.7563 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7959
train 2: loss = 0.8088
val 2: loss = 0.6306 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 3: loss = 0.8219
val 3: loss = 0.6110 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8163
train 4: loss = 0.6723
val 4: loss = 0.7623 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8163
train 5: loss = 0.6199
val 5: loss = 0.9542 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8163
train 6: loss = 0.5016
val 6: loss = 0.5446 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 7: loss = 0.4733
val 7: loss = 0.7663 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8163
train 8: loss = 0.3497
val 8: loss = 0.7741 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8163
train 9: loss = 0.3253
val 9: loss = 0.5102 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8163
train 10: loss = 0.2997
val 10: loss = 0.5340 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.7959
test: loss = 0.8664 | acc = 0.5714 | precision = 0.5294 | recall = 0.6923 | f1 = 0.6000 | auc = 0.6821

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.6810
val 1: loss = 1.8632 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 2: loss = 0.7948
val 2: loss = 0.6263 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.7556
train 3: loss = 0.8597
val 3: loss = 0.6358 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.8222
train 4: loss = 0.7323
val 4: loss = 0.7698 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8444
train 5: loss = 0.7572
val 5: loss = 1.1851 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8000
train 6: loss = 0.6678
val 6: loss = 0.5911 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.8222
train 7: loss = 0.6511
val 7: loss = 0.5976 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.8000
train 8: loss = 0.5810
val 8: loss = 0.6577 | acc = 0.6429 | precision = 0.8333 | recall = 0.5556 | f1 = 0.6667 | auc = 0.7556
train 9: loss = 0.5533
val 9: loss = 0.5753 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.7556
train 10: loss = 0.5145
val 10: loss = 0.5840 | acc = 0.6429 | precision = 0.6667 | recall = 0.8889 | f1 = 0.7619 | auc = 0.6889
test: loss = 0.5367 | acc = 0.8148 | precision = 0.7333 | recall = 0.9167 | f1 = 0.8148 | auc = 0.8556

seed = 2048
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0476
val 1: loss = 0.6806 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
train 2: loss = 0.4633
val 2: loss = 1.6371 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 3: loss = 0.2473
val 3: loss = 0.9222 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7708
train 4: loss = 0.0898
val 4: loss = 1.3155 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7500
train 5: loss = 0.0340
val 5: loss = 0.9665 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 6: loss = 0.0095
val 6: loss = 0.9878 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 7: loss = 0.0066
val 7: loss = 1.0610 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 8: loss = 0.0055
val 8: loss = 1.0918 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 9: loss = 0.0048
val 9: loss = 1.0828 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 10: loss = 0.0044
val 10: loss = 1.0927 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
test: loss = 0.6625 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7135

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9898
val 1: loss = 1.4946 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.6667
train 2: loss = 0.5517
val 2: loss = 1.1616 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.7083
train 3: loss = 0.3733
val 3: loss = 1.0614 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 4: loss = 0.0717
val 4: loss = 0.9383 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7292
train 5: loss = 0.0191
val 5: loss = 0.9979 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 6: loss = 0.0101
val 6: loss = 1.0185 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 7: loss = 0.0077
val 7: loss = 1.0554 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 8: loss = 0.0061
val 8: loss = 1.0812 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 9: loss = 0.0055
val 9: loss = 1.0936 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 10: loss = 0.0050
val 10: loss = 1.0989 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
test: loss = 0.7056 | acc = 0.7500 | precision = 0.7857 | recall = 0.7333 | f1 = 0.7586 | auc = 0.8000

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.1224
val 1: loss = 0.9532 | acc = 0.6429 | precision = 0.6667 | recall = 0.3333 | f1 = 0.4444 | auc = 0.6458
train 2: loss = 0.4869
val 2: loss = 0.9543 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.7500
train 3: loss = 0.4078
val 3: loss = 1.1975 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6458
train 4: loss = 0.1652
val 4: loss = 1.5119 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.6875
train 5: loss = 0.0556
val 5: loss = 1.2186 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.6667
train 6: loss = 0.0179
val 6: loss = 1.2696 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.6875
train 7: loss = 0.0105
val 7: loss = 1.3187 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
train 8: loss = 0.0083
val 8: loss = 1.3599 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
train 9: loss = 0.0075
val 9: loss = 1.3975 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
train 10: loss = 0.0068
val 10: loss = 1.4139 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
test: loss = 0.8696 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.7604

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0363
val 1: loss = 1.2534 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.5333
train 2: loss = 0.2755
val 2: loss = 1.3555 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.5333
train 3: loss = 0.2883
val 3: loss = 2.0091 | acc = 0.3571 | precision = 0.2500 | recall = 0.4000 | f1 = 0.3077 | auc = 0.4222
train 4: loss = 0.0925
val 4: loss = 1.7258 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.6000
train 5: loss = 0.0636
val 5: loss = 1.5164 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6222
train 6: loss = 0.0097
val 6: loss = 1.7095 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.6000
train 7: loss = 0.0056
val 7: loss = 1.7867 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6000
train 8: loss = 0.0042
val 8: loss = 1.8511 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6000
train 9: loss = 0.0038
val 9: loss = 1.8695 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6000
train 10: loss = 0.0034
val 10: loss = 1.8831 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.5778
test: loss = 0.9019 | acc = 0.6786 | precision = 0.6250 | recall = 0.4545 | f1 = 0.5263 | auc = 0.7059

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0647
val 1: loss = 1.1236 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.5778
train 2: loss = 0.4032
val 2: loss = 0.6369 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.7333
train 3: loss = 0.1945
val 3: loss = 0.8914 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7111
train 4: loss = 0.0804
val 4: loss = 0.9106 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.6889
train 5: loss = 0.0629
val 5: loss = 0.9893 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.7333
train 6: loss = 0.0113
val 6: loss = 1.0931 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7333
train 7: loss = 0.0061
val 7: loss = 1.1552 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7333
train 8: loss = 0.0044
val 8: loss = 1.1917 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7333
train 9: loss = 0.0038
val 9: loss = 1.2049 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7333
train 10: loss = 0.0035
val 10: loss = 1.2133 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7333
test: loss = 0.4911 | acc = 0.7407 | precision = 0.8571 | recall = 0.5000 | f1 = 0.6316 | auc = 0.8722

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7076
val 1: loss = 1.1911 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.9792
train 2: loss = 0.3882
val 2: loss = 0.5975 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9375
train 3: loss = 0.2224
val 3: loss = 0.4075 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.9375
train 4: loss = 0.1295
val 4: loss = 0.6383 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 5: loss = 0.0917
val 5: loss = 0.3212 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.9167
train 6: loss = 0.0494
val 6: loss = 0.4089 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9583
train 7: loss = 0.0098
val 7: loss = 0.4990 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9583
train 8: loss = 0.0074
val 8: loss = 0.4607 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9583
train 9: loss = 0.0061
val 9: loss = 0.4805 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9583
train 10: loss = 0.0059
val 10: loss = 0.4767 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9583
test: loss = 2.2776 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.6615

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8178
val 1: loss = 0.7848 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6667
train 2: loss = 0.4077
val 2: loss = 1.3345 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.7292
train 3: loss = 0.3809
val 3: loss = 0.8840 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7083
train 4: loss = 0.1313
val 4: loss = 0.9660 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6667
train 5: loss = 0.0353
val 5: loss = 1.0091 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
train 6: loss = 0.0188
val 6: loss = 1.0857 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6875
train 7: loss = 0.0104
val 7: loss = 1.1484 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6875
train 8: loss = 0.0082
val 8: loss = 1.1819 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6875
train 9: loss = 0.0072
val 9: loss = 1.1916 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6667
train 10: loss = 0.0067
val 10: loss = 1.1983 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6667
test: loss = 0.4734 | acc = 0.8214 | precision = 0.7778 | recall = 0.9333 | f1 = 0.8485 | auc = 0.8564

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7698
val 1: loss = 1.0995 | acc = 0.6429 | precision = 0.6667 | recall = 0.3333 | f1 = 0.4444 | auc = 0.5833
train 2: loss = 0.4667
val 2: loss = 1.1813 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.8333
train 3: loss = 0.2265
val 3: loss = 0.9944 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
train 4: loss = 0.1871
val 4: loss = 0.8051 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7292
train 5: loss = 0.0582
val 5: loss = 0.9728 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7292
train 6: loss = 0.0249
val 6: loss = 0.9739 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
train 7: loss = 0.0124
val 7: loss = 1.1123 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7083
train 8: loss = 0.0087
val 8: loss = 1.1362 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7083
train 9: loss = 0.0077
val 9: loss = 1.1485 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7083
train 10: loss = 0.0070
val 10: loss = 1.1570 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7083
test: loss = 1.0795 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7917

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8481
val 1: loss = 1.0660 | acc = 0.6429 | precision = 0.5000 | recall = 0.2000 | f1 = 0.2857 | auc = 0.5556
train 2: loss = 0.3338
val 2: loss = 0.9891 | acc = 0.5000 | precision = 0.3750 | recall = 0.6000 | f1 = 0.4615 | auc = 0.6444
train 3: loss = 0.2706
val 3: loss = 1.2359 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.6889
train 4: loss = 0.1415
val 4: loss = 1.2996 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7333
train 5: loss = 0.0597
val 5: loss = 1.2862 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.6889
train 6: loss = 0.0202
val 6: loss = 1.1604 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7333
train 7: loss = 0.0115
val 7: loss = 1.4037 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 8: loss = 0.0080
val 8: loss = 1.3740 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 9: loss = 0.0062
val 9: loss = 1.3766 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 10: loss = 0.0060
val 10: loss = 1.3825 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
test: loss = 0.9137 | acc = 0.6429 | precision = 0.5333 | recall = 0.7273 | f1 = 0.6154 | auc = 0.7059

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7615
val 1: loss = 1.3076 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.6667
train 2: loss = 0.4409
val 2: loss = 0.8125 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7111
train 3: loss = 0.1986
val 3: loss = 1.0971 | acc = 0.7143 | precision = 1.0000 | recall = 0.2000 | f1 = 0.3333 | auc = 0.6889
train 4: loss = 0.1568
val 4: loss = 1.3314 | acc = 0.5714 | precision = 0.4444 | recall = 0.8000 | f1 = 0.5714 | auc = 0.6444
train 5: loss = 0.0553
val 5: loss = 1.1213 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 6: loss = 0.0197
val 6: loss = 1.0682 | acc = 0.5000 | precision = 0.3333 | recall = 0.4000 | f1 = 0.3636 | auc = 0.7111
train 7: loss = 0.0110
val 7: loss = 1.1908 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 8: loss = 0.0083
val 8: loss = 1.2198 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 9: loss = 0.0068
val 9: loss = 1.2387 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
train 10: loss = 0.0066
val 10: loss = 1.2511 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.7111
test: loss = 0.8699 | acc = 0.7037 | precision = 0.7000 | recall = 0.5833 | f1 = 0.6364 | auc = 0.7667

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.1346
val 1: loss = 0.6139 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.7917
train 2: loss = 0.6664
val 2: loss = 0.5441 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.8958
train 3: loss = 0.7310
val 3: loss = 1.1520 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 4: loss = 0.7226
val 4: loss = 0.6427 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8333
train 5: loss = 0.7203
val 5: loss = 0.6064 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.9167
train 6: loss = 0.5959
val 6: loss = 0.5812 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.9167
train 7: loss = 0.4650
val 7: loss = 0.5213 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8958
train 8: loss = 0.3875
val 8: loss = 0.5866 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8958
train 9: loss = 0.3136
val 9: loss = 0.4426 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8750
train 10: loss = 0.2850
val 10: loss = 0.5642 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8333
test: loss = 0.7894 | acc = 0.6071 | precision = 0.7273 | recall = 0.5000 | f1 = 0.5926 | auc = 0.7188

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.2425
val 1: loss = 0.6531 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 2: loss = 0.7429
val 2: loss = 1.3861 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 3: loss = 0.7619
val 3: loss = 0.8210 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 4: loss = 0.6696
val 4: loss = 0.6291 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.7500
train 5: loss = 0.5997
val 5: loss = 0.6347 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.7500
train 6: loss = 0.6508
val 6: loss = 0.6366 | acc = 0.5000 | precision = 0.3333 | recall = 0.1667 | f1 = 0.2222 | auc = 0.7708
train 7: loss = 0.5214
val 7: loss = 0.6329 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.7500
train 8: loss = 0.4162
val 8: loss = 0.6683 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.7500
train 9: loss = 0.3982
val 9: loss = 0.6162 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7292
train 10: loss = 0.3340
val 10: loss = 0.8073 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.7500
test: loss = 0.6961 | acc = 0.6071 | precision = 0.7500 | recall = 0.4000 | f1 = 0.5217 | auc = 0.7538

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.1946
val 1: loss = 0.7546 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 2: loss = 0.7710
val 2: loss = 1.0483 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 3: loss = 0.7035
val 3: loss = 0.6387 | acc = 0.6429 | precision = 0.6667 | recall = 0.3333 | f1 = 0.4444 | auc = 0.6458
train 4: loss = 0.7370
val 4: loss = 0.7288 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.5417
train 5: loss = 0.6230
val 5: loss = 0.7116 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.6875
train 6: loss = 0.6312
val 6: loss = 0.7534 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5625
train 7: loss = 0.4778
val 7: loss = 0.8122 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6667
train 8: loss = 0.4475
val 8: loss = 0.6925 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6250
train 9: loss = 0.3933
val 9: loss = 0.6535 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6250
train 10: loss = 0.3310
val 10: loss = 0.8664 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.7083
test: loss = 0.6879 | acc = 0.6071 | precision = 0.6000 | recall = 0.2500 | f1 = 0.3529 | auc = 0.6042

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.4187
val 1: loss = 0.6430 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 2: loss = 0.7797
val 2: loss = 0.8804 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 3: loss = 0.7208
val 3: loss = 0.8770 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7333
train 4: loss = 0.7608
val 4: loss = 0.8583 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 5: loss = 0.6666
val 5: loss = 0.8835 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7111
train 6: loss = 0.6463
val 6: loss = 0.6348 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6889
train 7: loss = 0.5238
val 7: loss = 0.6680 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6222
train 8: loss = 0.4862
val 8: loss = 0.6832 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 9: loss = 0.4637
val 9: loss = 0.6458 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.6000
train 10: loss = 0.3970
val 10: loss = 0.7463 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.6444
test: loss = 0.5819 | acc = 0.6786 | precision = 1.0000 | recall = 0.1818 | f1 = 0.3077 | auc = 0.8342

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9796
val 1: loss = 0.6374 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6889
train 2: loss = 0.8574
val 2: loss = 0.6020 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7556
train 3: loss = 0.8632
val 3: loss = 0.6557 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7111
train 4: loss = 0.6744
val 4: loss = 0.5894 | acc = 0.6429 | precision = 0.5000 | recall = 0.2000 | f1 = 0.2857 | auc = 0.7333
train 5: loss = 0.7222
val 5: loss = 0.6308 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7556
train 6: loss = 0.5557
val 6: loss = 0.6696 | acc = 0.5714 | precision = 0.4444 | recall = 0.8000 | f1 = 0.5714 | auc = 0.7778
train 7: loss = 0.4740
val 7: loss = 0.6241 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7778
train 8: loss = 0.4186
val 8: loss = 0.5437 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.8000
train 9: loss = 0.3740
val 9: loss = 0.5485 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7778
train 10: loss = 0.3155
val 10: loss = 0.6133 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.8000
test: loss = 0.6588 | acc = 0.7407 | precision = 0.8571 | recall = 0.5000 | f1 = 0.6316 | auc = 0.7722

extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9494
val 1: loss = 1.9297 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.9167
train 2: loss = 0.4697
val 2: loss = 0.9798 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
train 3: loss = 0.2744
val 3: loss = 0.8398 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 4: loss = 0.1233
val 4: loss = 1.0588 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6458
train 5: loss = 0.0529
val 5: loss = 1.0374 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6875
train 6: loss = 0.0206
val 6: loss = 0.9559 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6875
train 7: loss = 0.0140
val 7: loss = 0.9905 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7083
train 8: loss = 0.0114
val 8: loss = 1.0027 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7083
test: loss = 0.7098 | acc = 0.6429 | precision = 0.7273 | recall = 0.5333 | f1 = 0.6154 | auc = 0.8359

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8542
val 1: loss = 1.2348 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.9592
train 2: loss = 0.3851
val 2: loss = 0.6496 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.9184
train 3: loss = 0.2696
val 3: loss = 0.2469 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.9388
train 4: loss = 0.1942
val 4: loss = 0.4243 | acc = 0.7857 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.9592
train 5: loss = 0.0570
val 5: loss = 0.3473 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.9592
train 6: loss = 0.0216
val 6: loss = 0.2855 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.9592
train 7: loss = 0.0142
val 7: loss = 0.2962 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9592
train 8: loss = 0.0107
val 8: loss = 0.3035 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9592
test: loss = 1.1722 | acc = 0.6429 | precision = 0.5294 | recall = 0.8182 | f1 = 0.6429 | auc = 0.7273

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0535
val 1: loss = 1.1203 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8750
train 2: loss = 0.3767
val 2: loss = 0.7814 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 3: loss = 0.2603
val 3: loss = 0.9678 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8125
train 4: loss = 0.1537
val 4: loss = 1.1456 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8125
train 5: loss = 0.0547
val 5: loss = 1.2431 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8542
train 6: loss = 0.0158
val 6: loss = 1.2189 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
train 7: loss = 0.0108
val 7: loss = 1.2181 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
train 8: loss = 0.0089
val 8: loss = 1.2332 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
test: loss = 0.8714 | acc = 0.7143 | precision = 0.6875 | recall = 0.7857 | f1 = 0.7333 | auc = 0.7143

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9153
val 1: loss = 0.8600 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.7917
train 2: loss = 0.3461
val 2: loss = 0.7046 | acc = 0.7143 | precision = 0.7000 | recall = 0.8750 | f1 = 0.7778 | auc = 0.8333
train 3: loss = 0.2307
val 3: loss = 0.6646 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.7917
train 4: loss = 0.0434
val 4: loss = 0.7822 | acc = 0.7857 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8125
train 5: loss = 0.0218
val 5: loss = 0.7698 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 6: loss = 0.0078
val 6: loss = 0.8439 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 7: loss = 0.0056
val 7: loss = 0.8418 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 8: loss = 0.0047
val 8: loss = 0.8401 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
test: loss = 1.0908 | acc = 0.7143 | precision = 0.7333 | recall = 0.7333 | f1 = 0.7333 | auc = 0.7282

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0536
val 1: loss = 1.1407 | acc = 0.5714 | precision = 0.6250 | recall = 0.6250 | f1 = 0.6250 | auc = 0.5833
train 2: loss = 0.5251
val 2: loss = 0.4465 | acc = 0.8571 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9167
train 3: loss = 0.2848
val 3: loss = 1.2549 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.6667
train 4: loss = 0.1260
val 4: loss = 1.1340 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7500
train 5: loss = 0.0407
val 5: loss = 1.2462 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7083
train 6: loss = 0.0174
val 6: loss = 1.2728 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7083
train 7: loss = 0.0135
val 7: loss = 1.3058 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7500
train 8: loss = 0.0111
val 8: loss = 1.3293 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7500
test: loss = 0.8258 | acc = 0.5926 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8580

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7661
val 1: loss = 0.3999 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8750
train 2: loss = 0.5070
val 2: loss = 0.7634 | acc = 0.5000 | precision = 0.4545 | recall = 0.8333 | f1 = 0.5882 | auc = 0.8542
train 3: loss = 0.2846
val 3: loss = 0.5129 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8750
train 4: loss = 0.1291
val 4: loss = 0.9953 | acc = 0.5000 | precision = 0.4545 | recall = 0.8333 | f1 = 0.5882 | auc = 0.8333
train 5: loss = 0.0651
val 5: loss = 0.6034 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 6: loss = 0.0245
val 6: loss = 0.9551 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.8750
train 7: loss = 0.0183
val 7: loss = 0.7372 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 8: loss = 0.0156
val 8: loss = 0.8105 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8542
test: loss = 0.7576 | acc = 0.7500 | precision = 0.9000 | recall = 0.6000 | f1 = 0.7200 | auc = 0.8308

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6696
val 1: loss = 0.8609 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8367
train 2: loss = 0.4925
val 2: loss = 0.9151 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 3: loss = 0.1671
val 3: loss = 0.9586 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7755
train 4: loss = 0.0588
val 4: loss = 0.9546 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 5: loss = 0.0229
val 5: loss = 1.3205 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8367
train 6: loss = 0.0111
val 6: loss = 1.4716 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
train 7: loss = 0.0076
val 7: loss = 1.4804 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
train 8: loss = 0.0069
val 8: loss = 1.5042 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
test: loss = 0.9400 | acc = 0.7143 | precision = 0.6667 | recall = 0.5455 | f1 = 0.6000 | auc = 0.6631

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7707
val 1: loss = 0.7791 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8333
train 2: loss = 0.4833
val 2: loss = 0.6645 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 3: loss = 0.2433
val 3: loss = 0.8023 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8125
train 4: loss = 0.1672
val 4: loss = 1.0859 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 5: loss = 0.0566
val 5: loss = 1.3672 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.0280
val 6: loss = 1.3390 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
train 7: loss = 0.0195
val 7: loss = 1.3204 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
train 8: loss = 0.0164
val 8: loss = 1.3300 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
test: loss = 0.6209 | acc = 0.7857 | precision = 0.7222 | recall = 0.9286 | f1 = 0.8125 | auc = 0.7959

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8351
val 1: loss = 1.9419 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 2: loss = 0.4500
val 2: loss = 0.7575 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8750
train 3: loss = 0.1426
val 3: loss = 1.0382 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7917
train 4: loss = 0.0676
val 4: loss = 1.0415 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 5: loss = 0.0231
val 5: loss = 1.1728 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 6: loss = 0.0121
val 6: loss = 1.2052 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 7: loss = 0.0091
val 7: loss = 1.1999 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 8: loss = 0.0080
val 8: loss = 1.2140 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
test: loss = 0.9229 | acc = 0.6429 | precision = 0.8571 | recall = 0.4000 | f1 = 0.5455 | auc = 0.7897

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8279
val 1: loss = 0.7361 | acc = 0.6429 | precision = 0.6364 | recall = 0.8750 | f1 = 0.7368 | auc = 0.6875
train 2: loss = 0.4727
val 2: loss = 0.8003 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6250
train 3: loss = 0.2865
val 3: loss = 0.9689 | acc = 0.6429 | precision = 0.6667 | recall = 0.7500 | f1 = 0.7059 | auc = 0.7083
train 4: loss = 0.1406
val 4: loss = 1.2626 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 5: loss = 0.0517
val 5: loss = 1.2951 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7292
train 6: loss = 0.0295
val 6: loss = 1.3130 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7292
train 7: loss = 0.0188
val 7: loss = 1.3533 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7292
train 8: loss = 0.0154
val 8: loss = 1.3681 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7292
test: loss = 0.8304 | acc = 0.5556 | precision = 0.4783 | recall = 1.0000 | f1 = 0.6471 | auc = 0.9148

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.2080
val 1: loss = 0.6973 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 2: loss = 0.8278
val 2: loss = 0.7486 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 3: loss = 0.7400
val 3: loss = 0.7407 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.7292
train 4: loss = 0.7722
val 4: loss = 1.1099 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 5: loss = 0.7280
val 5: loss = 0.6386 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 6: loss = 0.5917
val 6: loss = 0.6167 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 7: loss = 0.6064
val 7: loss = 0.6069 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.7500
train 8: loss = 0.4986
val 8: loss = 0.6950 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7083
test: loss = 0.6743 | acc = 0.6429 | precision = 0.8571 | recall = 0.4000 | f1 = 0.5455 | auc = 0.7077

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.2082
val 1: loss = 0.7965 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 2: loss = 1.0467
val 2: loss = 0.7997 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 3: loss = 0.6985
val 3: loss = 0.7791 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 4: loss = 0.7312
val 4: loss = 1.2782 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 5: loss = 0.7209
val 5: loss = 0.6695 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.7143
train 6: loss = 0.5993
val 6: loss = 0.6485 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7551
train 7: loss = 0.6139
val 7: loss = 0.6392 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7551
train 8: loss = 0.5055
val 8: loss = 0.6528 | acc = 0.5000 | precision = 0.5000 | recall = 0.8571 | f1 = 0.6316 | auc = 0.7551
test: loss = 0.6919 | acc = 0.6071 | precision = 0.5000 | recall = 0.4545 | f1 = 0.4762 | auc = 0.5561

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.2449
val 1: loss = 1.1012 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 2: loss = 1.0308
val 2: loss = 0.6851 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 3: loss = 0.7936
val 3: loss = 0.6651 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7083
train 4: loss = 0.7696
val 4: loss = 0.7077 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 5: loss = 0.7105
val 5: loss = 0.7026 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 6: loss = 0.6514
val 6: loss = 0.6646 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 7: loss = 0.6355
val 7: loss = 0.6344 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 8: loss = 0.6034
val 8: loss = 0.6542 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.7708
test: loss = 0.6482 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7959

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.4706
val 1: loss = 2.3102 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 2: loss = 1.0191
val 2: loss = 0.9471 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 3: loss = 0.7862
val 3: loss = 0.6678 | acc = 0.5000 | precision = 0.5556 | recall = 0.6250 | f1 = 0.5882 | auc = 0.6875
train 4: loss = 0.7792
val 4: loss = 0.9123 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 5: loss = 0.7053
val 5: loss = 0.7322 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 6: loss = 0.6334
val 6: loss = 0.6786 | acc = 0.5000 | precision = 1.0000 | recall = 0.1250 | f1 = 0.2222 | auc = 0.7708
train 7: loss = 0.5788
val 7: loss = 0.8053 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 8: loss = 0.5449
val 8: loss = 0.6209 | acc = 0.6429 | precision = 0.6667 | recall = 0.7500 | f1 = 0.7059 | auc = 0.7917
test: loss = 0.6257 | acc = 0.6786 | precision = 0.6875 | recall = 0.7333 | f1 = 0.7097 | auc = 0.6821

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.1959
val 1: loss = 0.6336 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8542
train 2: loss = 0.9342
val 2: loss = 1.1832 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9167
train 3: loss = 0.8281
val 3: loss = 0.6348 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8542
train 4: loss = 0.7265
val 4: loss = 0.6231 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8333
train 5: loss = 0.6866
val 5: loss = 0.7072 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 6: loss = 0.7036
val 6: loss = 0.7654 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 7: loss = 0.6262
val 7: loss = 0.5805 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8125
train 8: loss = 0.5733
val 8: loss = 0.5862 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8125
test: loss = 0.5892 | acc = 0.7778 | precision = 0.6667 | recall = 0.9091 | f1 = 0.7692 | auc = 0.8864

