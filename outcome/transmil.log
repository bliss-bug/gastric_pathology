seed = 2024
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7394
val 1: loss = 0.9729 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8163
train 2: loss = 0.4261
val 2: loss = 0.6314 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8163
train 3: loss = 0.1106
val 3: loss = 0.6621 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.9388
train 4: loss = 0.0123
val 4: loss = 0.4965 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.9184
train 5: loss = 0.0055
val 5: loss = 0.6014 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8980
train 6: loss = 0.0035
val 6: loss = 0.5686 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8980
train 7: loss = 0.0027
val 7: loss = 0.6029 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8980
train 8: loss = 0.0022
val 8: loss = 0.6167 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8980
train 9: loss = 0.0020
val 9: loss = 0.6243 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8980
train 10: loss = 0.0020
val 10: loss = 0.6209 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8980
test: loss = 0.6668 | acc = 0.7143 | precision = 0.7273 | recall = 0.6154 | f1 = 0.6667 | auc = 0.7846

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8652
val 1: loss = 1.0237 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 2: loss = 0.5012
val 2: loss = 0.5752 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8163
train 3: loss = 0.1225
val 3: loss = 0.8582 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.8163
train 4: loss = 0.0167
val 4: loss = 0.5993 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 5: loss = 0.0060
val 5: loss = 0.6790 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 6: loss = 0.0039
val 6: loss = 0.6668 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 7: loss = 0.0029
val 7: loss = 0.7017 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 8: loss = 0.0024
val 8: loss = 0.7112 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 9: loss = 0.0022
val 9: loss = 0.7062 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 10: loss = 0.0020
val 10: loss = 0.7100 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
test: loss = 0.5275 | acc = 0.7857 | precision = 0.7692 | recall = 0.7692 | f1 = 0.7692 | auc = 0.8462

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7782
val 1: loss = 1.2114 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7959
train 2: loss = 0.4108
val 2: loss = 0.6723 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.7755
train 3: loss = 0.1375
val 3: loss = 0.7499 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.6939
train 4: loss = 0.0234
val 4: loss = 0.7659 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7551
train 5: loss = 0.0073
val 5: loss = 0.6747 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7959
train 6: loss = 0.0043
val 6: loss = 0.7051 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 7: loss = 0.0033
val 7: loss = 0.7101 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 8: loss = 0.0026
val 8: loss = 0.7210 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 9: loss = 0.0023
val 9: loss = 0.7252 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 10: loss = 0.0022
val 10: loss = 0.7286 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
test: loss = 0.8687 | acc = 0.6071 | precision = 0.5769 | recall = 1.0000 | f1 = 0.7317 | auc = 0.6923

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7186
val 1: loss = 0.8573 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8571
train 2: loss = 0.3639
val 2: loss = 0.6510 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.8776
train 3: loss = 0.0788
val 3: loss = 0.9788 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.8776
train 4: loss = 0.0831
val 4: loss = 0.3560 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.8980
train 5: loss = 0.0163
val 5: loss = 0.5633 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8980
train 6: loss = 0.0050
val 6: loss = 0.5134 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
train 7: loss = 0.0033
val 7: loss = 0.5497 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8980
train 8: loss = 0.0026
val 8: loss = 0.5599 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8980
train 9: loss = 0.0024
val 9: loss = 0.5650 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8980
train 10: loss = 0.0022
val 10: loss = 0.5681 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8980
test: loss = 0.9900 | acc = 0.5357 | precision = 0.5000 | recall = 0.8462 | f1 = 0.6286 | auc = 0.7590

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8010
val 1: loss = 0.6511 | acc = 0.7857 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8444
train 2: loss = 0.4246
val 2: loss = 0.8528 | acc = 0.6429 | precision = 0.6429 | recall = 1.0000 | f1 = 0.7826 | auc = 0.6667
train 3: loss = 0.1646
val 3: loss = 0.5301 | acc = 0.5714 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8000
train 4: loss = 0.0173
val 4: loss = 0.5583 | acc = 0.7857 | precision = 0.8750 | recall = 0.7778 | f1 = 0.8235 | auc = 0.8444
train 5: loss = 0.0074
val 5: loss = 0.5555 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.8444
train 6: loss = 0.0042
val 6: loss = 0.5708 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.8444
train 7: loss = 0.0031
val 7: loss = 0.5813 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.8222
train 8: loss = 0.0026
val 8: loss = 0.5851 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.8222
train 9: loss = 0.0023
val 9: loss = 0.5891 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.8222
train 10: loss = 0.0022
val 10: loss = 0.5906 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.8222
test: loss = 0.3872 | acc = 0.7778 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.9333

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7182
val 1: loss = 0.8152 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8163
train 2: loss = 0.2998
val 2: loss = 0.3801 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.9184
train 3: loss = 0.2031
val 3: loss = 0.5133 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
train 4: loss = 0.0566
val 4: loss = 0.6607 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
train 5: loss = 0.0258
val 5: loss = 0.8755 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8571
train 6: loss = 0.0087
val 6: loss = 0.7434 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
train 7: loss = 0.0035
val 7: loss = 0.8147 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
train 8: loss = 0.0026
val 8: loss = 0.8448 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
train 9: loss = 0.0024
val 9: loss = 0.8513 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
train 10: loss = 0.0022
val 10: loss = 0.8589 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
test: loss = 0.6398 | acc = 0.6071 | precision = 0.5455 | recall = 0.9231 | f1 = 0.6857 | auc = 0.7846

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7415
val 1: loss = 0.8965 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8571
train 2: loss = 0.3719
val 2: loss = 0.6586 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.8776
train 3: loss = 0.2008
val 3: loss = 0.5996 | acc = 0.7143 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8776
train 4: loss = 0.0703
val 4: loss = 0.6883 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8776
train 5: loss = 0.0098
val 5: loss = 0.5478 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 6: loss = 0.0047
val 6: loss = 0.7475 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 7: loss = 0.0033
val 7: loss = 0.8056 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 8: loss = 0.0026
val 8: loss = 0.8166 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 9: loss = 0.0024
val 9: loss = 0.8239 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 10: loss = 0.0023
val 10: loss = 0.8333 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
test: loss = 0.8783 | acc = 0.7143 | precision = 0.6471 | recall = 0.8462 | f1 = 0.7333 | auc = 0.7795

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8186
val 1: loss = 0.6158 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8980
train 2: loss = 0.3923
val 2: loss = 0.4749 | acc = 0.8571 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.8776
train 3: loss = 0.1615
val 3: loss = 0.5068 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 4: loss = 0.0300
val 4: loss = 0.7924 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8776
train 5: loss = 0.0069
val 5: loss = 0.5659 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 6: loss = 0.0042
val 6: loss = 0.6722 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 7: loss = 0.0029
val 7: loss = 0.6929 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 8: loss = 0.0024
val 8: loss = 0.6937 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 9: loss = 0.0021
val 9: loss = 0.7052 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 10: loss = 0.0021
val 10: loss = 0.7087 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
test: loss = 0.5845 | acc = 0.6429 | precision = 0.6190 | recall = 0.8667 | f1 = 0.7222 | auc = 0.8308

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7999
val 1: loss = 0.4860 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 2: loss = 0.3880
val 2: loss = 0.5111 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8367
train 3: loss = 0.1401
val 3: loss = 0.4585 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 4: loss = 0.0496
val 4: loss = 0.6513 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 5: loss = 0.0090
val 5: loss = 0.5552 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 6: loss = 0.0041
val 6: loss = 0.5954 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 7: loss = 0.0031
val 7: loss = 0.6160 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 8: loss = 0.0025
val 8: loss = 0.6184 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 9: loss = 0.0023
val 9: loss = 0.6269 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 10: loss = 0.0021
val 10: loss = 0.6286 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
test: loss = 0.8360 | acc = 0.6071 | precision = 0.5455 | recall = 0.9231 | f1 = 0.6857 | auc = 0.8513

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6862
val 1: loss = 0.6615 | acc = 0.7143 | precision = 0.6923 | recall = 1.0000 | f1 = 0.8182 | auc = 0.7556
train 2: loss = 0.4306
val 2: loss = 0.6705 | acc = 0.6429 | precision = 0.7500 | recall = 0.6667 | f1 = 0.7059 | auc = 0.6667
train 3: loss = 0.1938
val 3: loss = 0.8891 | acc = 0.7143 | precision = 0.6923 | recall = 1.0000 | f1 = 0.8182 | auc = 0.6889
train 4: loss = 0.0482
val 4: loss = 1.0223 | acc = 0.7143 | precision = 0.6923 | recall = 1.0000 | f1 = 0.8182 | auc = 0.7556
train 5: loss = 0.0155
val 5: loss = 0.8297 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6222
train 6: loss = 0.0040
val 6: loss = 0.8929 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6444
train 7: loss = 0.0029
val 7: loss = 0.9209 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6444
train 8: loss = 0.0025
val 8: loss = 0.9442 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6222
train 9: loss = 0.0022
val 9: loss = 0.9550 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6222
train 10: loss = 0.0021
val 10: loss = 0.9639 | acc = 0.7143 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.6222
test: loss = 0.6870 | acc = 0.5926 | precision = 0.5217 | recall = 1.0000 | f1 = 0.6857 | auc = 0.8389

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8572
val 1: loss = 0.7449 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 2: loss = 0.6682
val 2: loss = 0.6947 | acc = 0.4286 | precision = 0.4615 | recall = 0.8571 | f1 = 0.6000 | auc = 0.6327
train 3: loss = 0.6642
val 3: loss = 0.6619 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.6939
train 4: loss = 0.5544
val 4: loss = 0.6145 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
train 5: loss = 0.5057
val 5: loss = 0.5852 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7755
train 6: loss = 0.3201
val 6: loss = 0.8243 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.8776
train 7: loss = 0.1828
val 7: loss = 0.7080 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8571
train 8: loss = 0.0840
val 8: loss = 1.0659 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.8571
train 9: loss = 0.0514
val 9: loss = 0.6348 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
train 10: loss = 0.0315
val 10: loss = 0.6992 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8980
test: loss = 0.6370 | acc = 0.6786 | precision = 0.6667 | recall = 0.6154 | f1 = 0.6400 | auc = 0.7077

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8374
val 1: loss = 0.8215 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 2: loss = 0.7097
val 2: loss = 0.6624 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.6327
train 3: loss = 0.6757
val 3: loss = 0.7564 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.5918
train 4: loss = 0.5562
val 4: loss = 0.6940 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.7347
train 5: loss = 0.4137
val 5: loss = 0.6735 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7347
train 6: loss = 0.2300
val 6: loss = 0.9699 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7959
train 7: loss = 0.1225
val 7: loss = 0.6181 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7551
train 8: loss = 0.0494
val 8: loss = 0.9143 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7347
train 9: loss = 0.0281
val 9: loss = 0.8082 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
train 10: loss = 0.0216
val 10: loss = 0.8762 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
test: loss = 1.2710 | acc = 0.6071 | precision = 0.5455 | recall = 0.9231 | f1 = 0.6857 | auc = 0.6410

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8631
val 1: loss = 0.7849 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 2: loss = 0.7271
val 2: loss = 0.6852 | acc = 0.5714 | precision = 0.5385 | recall = 1.0000 | f1 = 0.7000 | auc = 0.6735
train 3: loss = 0.6353
val 3: loss = 0.6540 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6531
train 4: loss = 0.5021
val 4: loss = 0.9398 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.7347
train 5: loss = 0.2663
val 5: loss = 0.8603 | acc = 0.5000 | precision = 0.5000 | recall = 0.4286 | f1 = 0.4615 | auc = 0.6327
train 6: loss = 0.1833
val 6: loss = 0.7110 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7551
train 7: loss = 0.0847
val 7: loss = 0.9556 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7551
train 8: loss = 0.0264
val 8: loss = 1.1809 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7551
train 9: loss = 0.0170
val 9: loss = 1.2312 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7551
train 10: loss = 0.0142
val 10: loss = 1.2627 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7551
test: loss = 0.7576 | acc = 0.6071 | precision = 0.6000 | recall = 0.8000 | f1 = 0.6857 | auc = 0.5487

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9755
val 1: loss = 0.6784 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.5510
train 2: loss = 0.7340
val 2: loss = 0.6747 | acc = 0.5000 | precision = 0.5000 | recall = 0.2857 | f1 = 0.3636 | auc = 0.5714
train 3: loss = 0.6561
val 3: loss = 0.6588 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.6939
train 4: loss = 0.5422
val 4: loss = 0.7291 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7755
train 5: loss = 0.3742
val 5: loss = 0.6020 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.7755
train 6: loss = 0.1858
val 6: loss = 0.5218 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8571
train 7: loss = 0.0698
val 7: loss = 0.5801 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8367
train 8: loss = 0.0357
val 8: loss = 0.5297 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 9: loss = 0.0178
val 9: loss = 0.5565 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 10: loss = 0.0123
val 10: loss = 0.5615 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
test: loss = 0.7819 | acc = 0.5714 | precision = 0.5333 | recall = 0.6154 | f1 = 0.5714 | auc = 0.6103

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7857
val 1: loss = 0.6810 | acc = 0.6429 | precision = 0.6429 | recall = 1.0000 | f1 = 0.7826 | auc = 0.5333
train 2: loss = 0.7066
val 2: loss = 0.7921 | acc = 0.3571 | precision = 0.5000 | recall = 0.1111 | f1 = 0.1818 | auc = 0.6000
train 3: loss = 0.6290
val 3: loss = 0.7331 | acc = 0.3571 | precision = 0.5000 | recall = 0.2222 | f1 = 0.3077 | auc = 0.5778
train 4: loss = 0.5615
val 4: loss = 0.8322 | acc = 0.6429 | precision = 0.6429 | recall = 1.0000 | f1 = 0.7826 | auc = 0.5333
train 5: loss = 0.4798
val 5: loss = 0.9775 | acc = 0.4286 | precision = 0.6000 | recall = 0.3333 | f1 = 0.4286 | auc = 0.5778
train 6: loss = 0.2235
val 6: loss = 1.0581 | acc = 0.4286 | precision = 0.5714 | recall = 0.4444 | f1 = 0.5000 | auc = 0.5556
train 7: loss = 0.0981
val 7: loss = 1.4234 | acc = 0.4286 | precision = 0.6000 | recall = 0.3333 | f1 = 0.4286 | auc = 0.5556
train 8: loss = 0.0503
val 8: loss = 1.2350 | acc = 0.4286 | precision = 0.5714 | recall = 0.4444 | f1 = 0.5000 | auc = 0.5556
train 9: loss = 0.0254
val 9: loss = 1.3171 | acc = 0.3571 | precision = 0.5000 | recall = 0.3333 | f1 = 0.4000 | auc = 0.5556
train 10: loss = 0.0202
val 10: loss = 1.3126 | acc = 0.4286 | precision = 0.5714 | recall = 0.4444 | f1 = 0.5000 | auc = 0.5556
test: loss = 0.8450 | acc = 0.4444 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.6278

seed = 2048
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7197
val 1: loss = 0.5706 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 2: loss = 0.3703
val 2: loss = 0.7586 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.7917
train 3: loss = 0.1364
val 3: loss = 0.5636 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 4: loss = 0.0157
val 4: loss = 0.6001 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 5: loss = 0.0045
val 5: loss = 0.6336 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 6: loss = 0.0029
val 6: loss = 0.6719 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
train 7: loss = 0.0022
val 7: loss = 0.6739 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 8: loss = 0.0019
val 8: loss = 0.6830 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 9: loss = 0.0018
val 9: loss = 0.6891 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 10: loss = 0.0016
val 10: loss = 0.6925 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
test: loss = 0.8711 | acc = 0.6071 | precision = 0.6923 | recall = 0.5625 | f1 = 0.6207 | auc = 0.7135

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7094
val 1: loss = 0.7094 | acc = 0.6429 | precision = 0.6667 | recall = 0.3333 | f1 = 0.4444 | auc = 0.7708
train 2: loss = 0.3786
val 2: loss = 0.8771 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.6667
train 3: loss = 0.1266
val 3: loss = 0.8092 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7708
train 4: loss = 0.0136
val 4: loss = 0.8703 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 5: loss = 0.0042
val 5: loss = 0.9393 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 6: loss = 0.0027
val 6: loss = 0.9849 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 7: loss = 0.0021
val 7: loss = 1.0118 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 8: loss = 0.0018
val 8: loss = 1.0311 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 9: loss = 0.0017
val 9: loss = 1.0418 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 10: loss = 0.0016
val 10: loss = 1.0476 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
test: loss = 0.6874 | acc = 0.5000 | precision = 0.6000 | recall = 0.2000 | f1 = 0.3000 | auc = 0.8051

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7249
val 1: loss = 0.6825 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.6250
train 2: loss = 0.3726
val 2: loss = 0.6879 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7083
train 3: loss = 0.1893
val 3: loss = 0.7361 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7292
train 4: loss = 0.0319
val 4: loss = 0.7590 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7292
train 5: loss = 0.0065
val 5: loss = 0.8306 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.7292
train 6: loss = 0.0039
val 6: loss = 0.8721 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.7292
train 7: loss = 0.0028
val 7: loss = 0.9053 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
train 8: loss = 0.0024
val 8: loss = 0.9223 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
train 9: loss = 0.0021
val 9: loss = 0.9340 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
train 10: loss = 0.0019
val 10: loss = 0.9391 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7083
test: loss = 0.5552 | acc = 0.7857 | precision = 0.8750 | recall = 0.5833 | f1 = 0.7000 | auc = 0.7552

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6710
val 1: loss = 0.7393 | acc = 0.5000 | precision = 0.3750 | recall = 0.6000 | f1 = 0.4615 | auc = 0.6889
train 2: loss = 0.3826
val 2: loss = 0.6699 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7111
train 3: loss = 0.1071
val 3: loss = 0.8174 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.7111
train 4: loss = 0.0154
val 4: loss = 0.8011 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
train 5: loss = 0.0036
val 5: loss = 0.8582 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7556
train 6: loss = 0.0024
val 6: loss = 0.8790 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7333
train 7: loss = 0.0018
val 7: loss = 0.9061 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7333
train 8: loss = 0.0016
val 8: loss = 0.9229 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7333
train 9: loss = 0.0014
val 9: loss = 0.9317 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7333
train 10: loss = 0.0014
val 10: loss = 0.9369 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7333
test: loss = 0.5594 | acc = 0.7500 | precision = 0.6429 | recall = 0.8182 | f1 = 0.7200 | auc = 0.8182

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7138
val 1: loss = 0.6680 | acc = 0.4286 | precision = 0.3333 | recall = 0.6000 | f1 = 0.4286 | auc = 0.6000
train 2: loss = 0.4001
val 2: loss = 0.5670 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.7333
train 3: loss = 0.1017
val 3: loss = 0.6994 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.7111
train 4: loss = 0.0146
val 4: loss = 0.7135 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7556
train 5: loss = 0.0050
val 5: loss = 0.7196 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7556
train 6: loss = 0.0030
val 6: loss = 0.7354 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
train 7: loss = 0.0023
val 7: loss = 0.7621 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
train 8: loss = 0.0019
val 8: loss = 0.7633 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
train 9: loss = 0.0018
val 9: loss = 0.7650 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
train 10: loss = 0.0017
val 10: loss = 0.7672 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
test: loss = 0.5973 | acc = 0.7037 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7611

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6839
val 1: loss = 0.6828 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8750
train 2: loss = 0.3364
val 2: loss = 0.5898 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 3: loss = 0.1269
val 3: loss = 0.5567 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 4: loss = 0.0283
val 4: loss = 0.4646 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 5: loss = 0.0056
val 5: loss = 0.4688 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 6: loss = 0.0032
val 6: loss = 0.5024 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9375
train 7: loss = 0.0025
val 7: loss = 0.5261 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9375
train 8: loss = 0.0021
val 8: loss = 0.5260 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9375
train 9: loss = 0.0019
val 9: loss = 0.5256 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9375
train 10: loss = 0.0018
val 10: loss = 0.5280 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9375
test: loss = 1.4326 | acc = 0.5714 | precision = 0.6429 | recall = 0.5625 | f1 = 0.6000 | auc = 0.6042

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6828
val 1: loss = 0.5293 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7917
train 2: loss = 0.3860
val 2: loss = 0.7414 | acc = 0.4286 | precision = 0.4167 | recall = 0.8333 | f1 = 0.5556 | auc = 0.7500
train 3: loss = 0.1198
val 3: loss = 0.6893 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8542
train 4: loss = 0.0248
val 4: loss = 0.4975 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8333
train 5: loss = 0.0053
val 5: loss = 0.5219 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 6: loss = 0.0034
val 6: loss = 0.5384 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8542
train 7: loss = 0.0026
val 7: loss = 0.5474 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 8: loss = 0.0022
val 8: loss = 0.5544 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 9: loss = 0.0021
val 9: loss = 0.5575 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 10: loss = 0.0019
val 10: loss = 0.5589 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
test: loss = 0.5621 | acc = 0.7857 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8359

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6439
val 1: loss = 0.7320 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.7917
train 2: loss = 0.3815
val 2: loss = 0.6817 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6458
train 3: loss = 0.1146
val 3: loss = 0.7585 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7708
train 4: loss = 0.0571
val 4: loss = 0.6746 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 5: loss = 0.0082
val 5: loss = 0.6854 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 6: loss = 0.0043
val 6: loss = 0.6983 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 7: loss = 0.0031
val 7: loss = 0.7081 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 8: loss = 0.0025
val 8: loss = 0.7164 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 9: loss = 0.0022
val 9: loss = 0.7207 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 10: loss = 0.0021
val 10: loss = 0.7233 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7917
test: loss = 0.6444 | acc = 0.7857 | precision = 0.8750 | recall = 0.5833 | f1 = 0.7000 | auc = 0.8021

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6890
val 1: loss = 0.5744 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.6667
train 2: loss = 0.3390
val 2: loss = 0.5563 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.7333
train 3: loss = 0.1110
val 3: loss = 1.0985 | acc = 0.5714 | precision = 0.4545 | recall = 1.0000 | f1 = 0.6250 | auc = 0.7333
train 4: loss = 0.0366
val 4: loss = 1.0340 | acc = 0.5000 | precision = 0.3333 | recall = 0.4000 | f1 = 0.3636 | auc = 0.6889
train 5: loss = 0.0072
val 5: loss = 0.9286 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7111
train 6: loss = 0.0035
val 6: loss = 0.9849 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7111
train 7: loss = 0.0028
val 7: loss = 0.9942 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7111
train 8: loss = 0.0024
val 8: loss = 1.0171 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7111
train 9: loss = 0.0021
val 9: loss = 1.0240 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7111
train 10: loss = 0.0020
val 10: loss = 1.0271 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7111
test: loss = 0.5582 | acc = 0.7143 | precision = 0.6364 | recall = 0.6364 | f1 = 0.6364 | auc = 0.7807

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7547
val 1: loss = 0.7256 | acc = 0.5714 | precision = 0.4545 | recall = 1.0000 | f1 = 0.6250 | auc = 0.6667
train 2: loss = 0.3483
val 2: loss = 0.5661 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.7556
train 3: loss = 0.1020
val 3: loss = 0.6017 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.8000
train 4: loss = 0.0223
val 4: loss = 0.6921 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.7778
train 5: loss = 0.0054
val 5: loss = 0.7683 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7778
train 6: loss = 0.0033
val 6: loss = 0.8098 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.8000
train 7: loss = 0.0024
val 7: loss = 0.8259 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.8000
train 8: loss = 0.0021
val 8: loss = 0.8365 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.8000
train 9: loss = 0.0018
val 9: loss = 0.8460 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.8000
train 10: loss = 0.0017
val 10: loss = 0.8508 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7778
test: loss = 0.6355 | acc = 0.6296 | precision = 0.6250 | recall = 0.4167 | f1 = 0.5000 | auc = 0.7833

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8414
val 1: loss = 0.7017 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7083
train 2: loss = 0.7435
val 2: loss = 0.8628 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6458
train 3: loss = 0.6929
val 3: loss = 0.6734 | acc = 0.5714 | precision = 0.5000 | recall = 0.3333 | f1 = 0.4000 | auc = 0.5833
train 4: loss = 0.6532
val 4: loss = 0.7289 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.6458
train 5: loss = 0.5242
val 5: loss = 0.6400 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7292
train 6: loss = 0.3439
val 6: loss = 0.8351 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7083
train 7: loss = 0.2174
val 7: loss = 0.6199 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 8: loss = 0.0977
val 8: loss = 0.6637 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7500
train 9: loss = 0.0560
val 9: loss = 0.6703 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 10: loss = 0.0382
val 10: loss = 0.7031 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
test: loss = 0.7571 | acc = 0.6071 | precision = 0.6667 | recall = 0.6250 | f1 = 0.6452 | auc = 0.6562

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8094
val 1: loss = 0.6947 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.3542
train 2: loss = 0.7403
val 2: loss = 0.8196 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.3750
train 3: loss = 0.7183
val 3: loss = 0.7007 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 4: loss = 0.5799
val 4: loss = 0.8800 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.3125
train 5: loss = 0.4532
val 5: loss = 0.7408 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.5417
train 6: loss = 0.2422
val 6: loss = 1.0194 | acc = 0.4286 | precision = 0.4000 | recall = 0.6667 | f1 = 0.5000 | auc = 0.5417
train 7: loss = 0.1368
val 7: loss = 0.8778 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5625
train 8: loss = 0.0413
val 8: loss = 0.9488 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5833
train 9: loss = 0.0236
val 9: loss = 0.9822 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5833
train 10: loss = 0.0180
val 10: loss = 0.9996 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5833
test: loss = 0.7203 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.3333

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8325
val 1: loss = 0.7072 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 2: loss = 0.7278
val 2: loss = 0.7214 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6875
train 3: loss = 0.6645
val 3: loss = 0.6880 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.7708
train 4: loss = 0.5717
val 4: loss = 0.7097 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.7292
train 5: loss = 0.4228
val 5: loss = 0.5447 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8125
train 6: loss = 0.3008
val 6: loss = 0.5115 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 7: loss = 0.1705
val 7: loss = 0.4315 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8750
train 8: loss = 0.0588
val 8: loss = 0.4166 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 9: loss = 0.0335
val 9: loss = 0.4384 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8750
train 10: loss = 0.0263
val 10: loss = 0.4377 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.8750
test: loss = 0.9419 | acc = 0.5714 | precision = 0.5000 | recall = 0.4167 | f1 = 0.4545 | auc = 0.6563

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8351
val 1: loss = 0.6232 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8222
train 2: loss = 0.7173
val 2: loss = 0.6341 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8444
train 3: loss = 0.6894
val 3: loss = 0.6924 | acc = 0.4286 | precision = 0.3846 | recall = 1.0000 | f1 = 0.5556 | auc = 0.8222
train 4: loss = 0.5903
val 4: loss = 0.7226 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.8000
train 5: loss = 0.4041
val 5: loss = 0.6851 | acc = 0.4286 | precision = 0.3333 | recall = 0.6000 | f1 = 0.4286 | auc = 0.6444
train 6: loss = 0.2142
val 6: loss = 0.5219 | acc = 0.7857 | precision = 1.0000 | recall = 0.4000 | f1 = 0.5714 | auc = 0.8444
train 7: loss = 0.1010
val 7: loss = 0.4140 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.8444
train 8: loss = 0.0337
val 8: loss = 0.4238 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.8667
train 9: loss = 0.0170
val 9: loss = 0.4403 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.8667
train 10: loss = 0.0137
val 10: loss = 0.4474 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.8667
test: loss = 1.0784 | acc = 0.5714 | precision = 0.4706 | recall = 0.7273 | f1 = 0.5714 | auc = 0.5829

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8532
val 1: loss = 0.7661 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.8000
train 2: loss = 0.7382
val 2: loss = 0.6300 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7111
train 3: loss = 0.6790
val 3: loss = 0.6044 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8000
train 4: loss = 0.6519
val 4: loss = 0.5892 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.7778
train 5: loss = 0.4900
val 5: loss = 1.0437 | acc = 0.4286 | precision = 0.3846 | recall = 1.0000 | f1 = 0.5556 | auc = 0.7556
train 6: loss = 0.4000
val 6: loss = 0.5631 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.7778
train 7: loss = 0.1727
val 7: loss = 0.4482 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8667
train 8: loss = 0.0984
val 8: loss = 0.4683 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8667
train 9: loss = 0.0506
val 9: loss = 0.4813 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8889
train 10: loss = 0.0345
val 10: loss = 0.4885 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8889
test: loss = 0.7601 | acc = 0.7037 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7111

extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7740
val 1: loss = 0.7467 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 2: loss = 0.4488
val 2: loss = 0.8446 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.6250
train 3: loss = 0.1221
val 3: loss = 0.4961 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
train 4: loss = 0.0223
val 4: loss = 0.5910 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
train 5: loss = 0.0067
val 5: loss = 0.5193 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 6: loss = 0.0043
val 6: loss = 0.5278 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 7: loss = 0.0034
val 7: loss = 0.5306 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 8: loss = 0.0032
val 8: loss = 0.5315 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
test: loss = 0.4939 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.8256

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7277
val 1: loss = 0.6982 | acc = 0.5714 | precision = 0.5385 | recall = 1.0000 | f1 = 0.7000 | auc = 0.8571
train 2: loss = 0.3283
val 2: loss = 1.1896 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7551
train 3: loss = 0.1320
val 3: loss = 0.5510 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8571
train 4: loss = 0.0131
val 4: loss = 0.4975 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8980
train 5: loss = 0.0062
val 5: loss = 0.5287 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 6: loss = 0.0037
val 6: loss = 0.5502 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 7: loss = 0.0030
val 7: loss = 0.5637 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 8: loss = 0.0028
val 8: loss = 0.5705 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
test: loss = 1.0835 | acc = 0.5714 | precision = 0.4667 | recall = 0.6364 | f1 = 0.5385 | auc = 0.7005

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6911
val 1: loss = 0.5872 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 1.0000
train 2: loss = 0.3264
val 2: loss = 0.5635 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 3: loss = 0.0952
val 3: loss = 0.3761 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9167
train 4: loss = 0.0240
val 4: loss = 0.2922 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.9167
train 5: loss = 0.0067
val 5: loss = 0.4312 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 6: loss = 0.0034
val 6: loss = 0.4230 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
train 7: loss = 0.0028
val 7: loss = 0.4357 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
train 8: loss = 0.0024
val 8: loss = 0.4391 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
test: loss = 0.6220 | acc = 0.7500 | precision = 0.7333 | recall = 0.7857 | f1 = 0.7586 | auc = 0.8520

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7245
val 1: loss = 0.5702 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8542
train 2: loss = 0.3224
val 2: loss = 0.6764 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.7500
train 3: loss = 0.1177
val 3: loss = 0.6238 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 4: loss = 0.0309
val 4: loss = 0.7518 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7708
train 5: loss = 0.0069
val 5: loss = 0.7986 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8125
train 6: loss = 0.0036
val 6: loss = 0.8113 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8125
train 7: loss = 0.0030
val 7: loss = 0.8200 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8125
train 8: loss = 0.0026
val 8: loss = 0.8270 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8125
test: loss = 0.5972 | acc = 0.6429 | precision = 0.7778 | recall = 0.4667 | f1 = 0.5833 | auc = 0.8359

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8110
val 1: loss = 0.7044 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.8333
train 2: loss = 0.4409
val 2: loss = 0.7040 | acc = 0.5714 | precision = 0.5833 | recall = 0.8750 | f1 = 0.7000 | auc = 0.7917
train 3: loss = 0.1723
val 3: loss = 0.4325 | acc = 0.8571 | precision = 0.8750 | recall = 0.8750 | f1 = 0.8750 | auc = 0.8958
train 4: loss = 0.0391
val 4: loss = 0.6592 | acc = 0.7857 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8542
train 5: loss = 0.0077
val 5: loss = 0.6982 | acc = 0.7857 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8750
train 6: loss = 0.0049
val 6: loss = 0.7167 | acc = 0.7857 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8750
train 7: loss = 0.0039
val 7: loss = 0.7299 | acc = 0.7857 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8750
train 8: loss = 0.0034
val 8: loss = 0.7352 | acc = 0.7857 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8750
test: loss = 0.5820 | acc = 0.7037 | precision = 0.6154 | recall = 0.7273 | f1 = 0.6667 | auc = 0.8295

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6944
val 1: loss = 0.5164 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8333
train 2: loss = 0.3539
val 2: loss = 0.9646 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8958
train 3: loss = 0.1892
val 3: loss = 0.5964 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
train 4: loss = 0.0588
val 4: loss = 0.6565 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.8125
train 5: loss = 0.0186
val 5: loss = 0.4985 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7917
train 6: loss = 0.0089
val 6: loss = 0.5175 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 7: loss = 0.0062
val 7: loss = 0.5247 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 8: loss = 0.0057
val 8: loss = 0.5299 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
test: loss = 0.6588 | acc = 0.7500 | precision = 0.7222 | recall = 0.8667 | f1 = 0.7879 | auc = 0.8410

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6621
val 1: loss = 0.7398 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8163
train 2: loss = 0.3653
val 2: loss = 0.8161 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8776
train 3: loss = 0.1631
val 3: loss = 0.9004 | acc = 0.7143 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.8571
train 4: loss = 0.0810
val 4: loss = 0.6139 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 5: loss = 0.0197
val 5: loss = 0.6412 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 6: loss = 0.0063
val 6: loss = 0.6653 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 7: loss = 0.0047
val 7: loss = 0.6826 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 8: loss = 0.0038
val 8: loss = 0.6884 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
test: loss = 0.8948 | acc = 0.6786 | precision = 0.5833 | recall = 0.6364 | f1 = 0.6087 | auc = 0.7326

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7317
val 1: loss = 0.5927 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.8333
train 2: loss = 0.3619
val 2: loss = 0.8605 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 3: loss = 0.1468
val 3: loss = 0.9675 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.9167
train 4: loss = 0.0431
val 4: loss = 0.4524 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
train 5: loss = 0.0146
val 5: loss = 0.5435 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9375
train 6: loss = 0.0056
val 6: loss = 0.5563 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9375
train 7: loss = 0.0041
val 7: loss = 0.5586 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9375
train 8: loss = 0.0035
val 8: loss = 0.5625 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9375
test: loss = 0.8050 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7602

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6355
val 1: loss = 0.9884 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.8542
train 2: loss = 0.3515
val 2: loss = 0.4851 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8542
train 3: loss = 0.1092
val 3: loss = 0.6332 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 4: loss = 0.0251
val 4: loss = 1.3980 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.8333
train 5: loss = 0.0151
val 5: loss = 0.7225 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8333
train 6: loss = 0.0037
val 6: loss = 0.7897 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 7: loss = 0.0027
val 7: loss = 0.8145 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 8: loss = 0.0025
val 8: loss = 0.8177 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
test: loss = 0.5916 | acc = 0.6429 | precision = 0.6923 | recall = 0.6000 | f1 = 0.6429 | auc = 0.7692

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6997
val 1: loss = 0.6532 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7917
train 2: loss = 0.3359
val 2: loss = 0.8542 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.5417
train 3: loss = 0.1076
val 3: loss = 1.0000 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.6458
train 4: loss = 0.0273
val 4: loss = 0.9878 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7083
train 5: loss = 0.0080
val 5: loss = 1.1515 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 6: loss = 0.0045
val 6: loss = 1.1788 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 7: loss = 0.0035
val 7: loss = 1.1957 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 8: loss = 0.0031
val 8: loss = 1.2058 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
test: loss = 0.4405 | acc = 0.8519 | precision = 0.8182 | recall = 0.8182 | f1 = 0.8182 | auc = 0.8920

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8423
val 1: loss = 0.7173 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 2: loss = 0.7456
val 2: loss = 0.7919 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.3958
train 3: loss = 0.6560
val 3: loss = 0.7368 | acc = 0.5000 | precision = 0.4545 | recall = 0.8333 | f1 = 0.5882 | auc = 0.4792
train 4: loss = 0.5621
val 4: loss = 0.7591 | acc = 0.5000 | precision = 0.3333 | recall = 0.1667 | f1 = 0.2222 | auc = 0.3750
train 5: loss = 0.4123
val 5: loss = 0.7960 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.5417
train 6: loss = 0.2862
val 6: loss = 0.7949 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.4583
train 7: loss = 0.1580
val 7: loss = 0.7382 | acc = 0.5000 | precision = 0.3333 | recall = 0.1667 | f1 = 0.2222 | auc = 0.6250
train 8: loss = 0.1053
val 8: loss = 0.7037 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.6667
test: loss = 0.8408 | acc = 0.6429 | precision = 0.6316 | recall = 0.8000 | f1 = 0.7059 | auc = 0.6718

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7955
val 1: loss = 0.9518 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 2: loss = 0.7462
val 2: loss = 0.8314 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.5306
train 3: loss = 0.6735
val 3: loss = 0.6912 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.5102
train 4: loss = 0.5947
val 4: loss = 0.6945 | acc = 0.7143 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.6122
train 5: loss = 0.4444
val 5: loss = 0.7264 | acc = 0.5000 | precision = 0.5000 | recall = 0.5714 | f1 = 0.5333 | auc = 0.6327
train 6: loss = 0.2295
val 6: loss = 0.8029 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.6327
train 7: loss = 0.1267
val 7: loss = 0.7992 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6327
train 8: loss = 0.0825
val 8: loss = 0.7910 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6327
test: loss = 0.7585 | acc = 0.5000 | precision = 0.4348 | recall = 0.9091 | f1 = 0.5882 | auc = 0.5187

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8031
val 1: loss = 0.7297 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 2: loss = 0.6876
val 2: loss = 1.1089 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.4583
train 3: loss = 0.7179
val 3: loss = 0.9110 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.4167
train 4: loss = 0.6545
val 4: loss = 0.6841 | acc = 0.6429 | precision = 0.6667 | recall = 0.3333 | f1 = 0.4444 | auc = 0.5000
train 5: loss = 0.5832
val 5: loss = 0.8635 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.5625
train 6: loss = 0.4509
val 6: loss = 0.6003 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7292
train 7: loss = 0.2828
val 7: loss = 0.6385 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7500
train 8: loss = 0.2104
val 8: loss = 0.6636 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7708
test: loss = 0.7252 | acc = 0.5357 | precision = 0.5556 | recall = 0.3571 | f1 = 0.4348 | auc = 0.6480

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7070
val 1: loss = 1.0841 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5208
train 2: loss = 0.7424
val 2: loss = 0.6585 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.6667
train 3: loss = 0.6238
val 3: loss = 0.6431 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.6667
train 4: loss = 0.6112
val 4: loss = 0.6335 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6667
train 5: loss = 0.4393
val 5: loss = 0.5695 | acc = 0.5714 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7292
train 6: loss = 0.2811
val 6: loss = 0.5435 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7708
train 7: loss = 0.1491
val 7: loss = 0.5440 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7917
train 8: loss = 0.1002
val 8: loss = 0.5713 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7917
test: loss = 0.7421 | acc = 0.6071 | precision = 0.6429 | recall = 0.6000 | f1 = 0.6207 | auc = 0.5949

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8035
val 1: loss = 0.6703 | acc = 0.7143 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.6042
train 2: loss = 0.6723
val 2: loss = 0.6638 | acc = 0.6429 | precision = 0.6364 | recall = 0.8750 | f1 = 0.7368 | auc = 0.5417
train 3: loss = 0.6703
val 3: loss = 0.6728 | acc = 0.5714 | precision = 0.5833 | recall = 0.8750 | f1 = 0.7000 | auc = 0.5625
train 4: loss = 0.6446
val 4: loss = 0.6682 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6875
train 5: loss = 0.5440
val 5: loss = 0.6920 | acc = 0.5714 | precision = 0.6250 | recall = 0.6250 | f1 = 0.6250 | auc = 0.6458
train 6: loss = 0.3958
val 6: loss = 0.7545 | acc = 0.5000 | precision = 0.6667 | recall = 0.2500 | f1 = 0.3636 | auc = 0.6875
train 7: loss = 0.2495
val 7: loss = 0.6955 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.6042
train 8: loss = 0.1747
val 8: loss = 0.7358 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.6250
test: loss = 0.7382 | acc = 0.4074 | precision = 0.3810 | recall = 0.7273 | f1 = 0.5000 | auc = 0.5625

