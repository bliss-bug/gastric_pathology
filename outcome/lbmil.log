use_bias = True, use_rope = False, same size bias
extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8012
val 1: loss = 0.5961 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6667
train 2: loss = 0.5857
val 2: loss = 0.5902 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8333
train 3: loss = 0.4013
val 3: loss = 0.4322 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.8958
train 4: loss = 0.3065
val 4: loss = 0.6415 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7708
train 5: loss = 0.1459
val 5: loss = 0.5885 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.0952
val 6: loss = 0.6684 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8125
train 7: loss = 0.0331
val 7: loss = 0.5394 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
train 8: loss = 0.0111
val 8: loss = 0.5517 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
test: loss = 0.5269 | acc = 0.7500 | precision = 0.7857 | recall = 0.7333 | f1 = 0.7586 | auc = 0.8359

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8262
val 1: loss = 0.5220 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.8163
train 2: loss = 0.5225
val 2: loss = 0.4184 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 3: loss = 0.3067
val 3: loss = 0.3293 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9388
train 4: loss = 0.2067
val 4: loss = 0.4195 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 5: loss = 0.0768
val 5: loss = 0.5054 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8980
train 6: loss = 0.0371
val 6: loss = 0.4026 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9388
train 7: loss = 0.0089
val 7: loss = 0.4439 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9388
train 8: loss = 0.0058
val 8: loss = 0.4593 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9388
test: loss = 0.7975 | acc = 0.6429 | precision = 0.5333 | recall = 0.7273 | f1 = 0.6154 | auc = 0.7433

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8847
val 1: loss = 0.4968 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8958
train 2: loss = 0.6003
val 2: loss = 0.4753 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8125
train 3: loss = 0.4240
val 3: loss = 0.3948 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 4: loss = 0.2547
val 4: loss = 0.5143 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 5: loss = 0.2286
val 5: loss = 0.9796 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
train 6: loss = 0.0928
val 6: loss = 0.7087 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8750
train 7: loss = 0.0316
val 7: loss = 0.7364 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 8: loss = 0.0179
val 8: loss = 0.7620 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
test: loss = 0.5825 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8061

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7892
val 1: loss = 0.5846 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 2: loss = 0.5524
val 2: loss = 0.5661 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9375
train 3: loss = 0.3513
val 3: loss = 1.3394 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.9583
train 4: loss = 0.2068
val 4: loss = 0.8468 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.9375
train 5: loss = 0.1695
val 5: loss = 0.5651 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9375
train 6: loss = 0.1048
val 6: loss = 0.6382 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 7: loss = 0.0548
val 7: loss = 0.6762 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 8: loss = 0.0396
val 8: loss = 0.7474 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
test: loss = 0.5995 | acc = 0.8214 | precision = 0.8125 | recall = 0.8667 | f1 = 0.8387 | auc = 0.8410

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7649
val 1: loss = 0.7225 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.7083
train 2: loss = 0.5086
val 2: loss = 0.4938 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 3: loss = 0.4166
val 3: loss = 0.5814 | acc = 0.7857 | precision = 0.7273 | recall = 1.0000 | f1 = 0.8421 | auc = 0.8542
train 4: loss = 0.3349
val 4: loss = 0.7052 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 5: loss = 0.1651
val 5: loss = 0.8274 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8542
train 6: loss = 0.0832
val 6: loss = 1.1862 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.8125
train 7: loss = 0.0369
val 7: loss = 1.0334 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
train 8: loss = 0.0164
val 8: loss = 1.0615 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
test: loss = 0.4457 | acc = 0.8519 | precision = 0.7692 | recall = 0.9091 | f1 = 0.8333 | auc = 0.8807

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9410
val 1: loss = 0.5540 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
train 2: loss = 0.5012
val 2: loss = 0.8450 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8542
train 3: loss = 0.4159
val 3: loss = 0.5227 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8542
train 4: loss = 0.3086
val 4: loss = 0.7093 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 5: loss = 0.2416
val 5: loss = 0.5118 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
train 6: loss = 0.1203
val 6: loss = 0.5895 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
train 7: loss = 0.0552
val 7: loss = 0.7338 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 8: loss = 0.0308
val 8: loss = 0.7197 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
test: loss = 0.6161 | acc = 0.7857 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8462

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9037
val 1: loss = 0.5721 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 2: loss = 0.4433
val 2: loss = 0.5743 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8776
train 3: loss = 0.4188
val 3: loss = 0.5646 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 4: loss = 0.2429
val 4: loss = 0.8577 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 5: loss = 0.1494
val 5: loss = 0.8341 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 6: loss = 0.0713
val 6: loss = 1.0285 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 7: loss = 0.0234
val 7: loss = 1.0804 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 8: loss = 0.0141
val 8: loss = 1.1210 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
test: loss = 0.6757 | acc = 0.6429 | precision = 0.5455 | recall = 0.5455 | f1 = 0.5455 | auc = 0.7005

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9089
val 1: loss = 0.5352 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8542
train 2: loss = 0.4823
val 2: loss = 0.6177 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 3: loss = 0.3545
val 3: loss = 0.8572 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 4: loss = 0.3235
val 4: loss = 0.6981 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7500
train 5: loss = 0.1716
val 5: loss = 0.7215 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 6: loss = 0.1113
val 6: loss = 0.9041 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 7: loss = 0.0521
val 7: loss = 1.1135 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 8: loss = 0.0341
val 8: loss = 1.0673 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
test: loss = 0.5589 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8034
val 1: loss = 0.5784 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8542
train 2: loss = 0.4537
val 2: loss = 0.4670 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8542
train 3: loss = 0.3544
val 3: loss = 0.4001 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 4: loss = 0.2594
val 4: loss = 0.4990 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 5: loss = 0.1425
val 5: loss = 0.6490 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
train 6: loss = 0.0626
val 6: loss = 0.7085 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
train 7: loss = 0.0211
val 7: loss = 0.7331 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 8: loss = 0.0173
val 8: loss = 0.8445 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
test: loss = 0.6580 | acc = 0.6071 | precision = 0.6429 | recall = 0.6000 | f1 = 0.6207 | auc = 0.7487

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8214
val 1: loss = 0.6985 | acc = 0.5000 | precision = 0.5455 | recall = 0.7500 | f1 = 0.6316 | auc = 0.5417
train 2: loss = 0.5363
val 2: loss = 0.6187 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6875
train 3: loss = 0.4390
val 3: loss = 0.7392 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.6250
train 4: loss = 0.3005
val 4: loss = 0.8166 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7708
train 5: loss = 0.2722
val 5: loss = 1.1141 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7917
train 6: loss = 0.1402
val 6: loss = 1.0886 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7708
train 7: loss = 0.0732
val 7: loss = 1.1220 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 8: loss = 0.0366
val 8: loss = 1.3676 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7708
test: loss = 0.4007 | acc = 0.7778 | precision = 0.6471 | recall = 1.0000 | f1 = 0.7857 | auc = 0.9659

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9960
val 1: loss = 0.6850 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 2: loss = 0.7602
val 2: loss = 0.6837 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 3: loss = 0.7124
val 3: loss = 0.7068 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 4: loss = 0.6954
val 4: loss = 0.7068 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7083
train 5: loss = 0.7026
val 5: loss = 0.7162 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6875
train 6: loss = 0.7088
val 6: loss = 0.7281 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6667
train 7: loss = 0.6764
val 7: loss = 0.6724 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 8: loss = 0.6653
val 8: loss = 0.6735 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
test: loss = 0.6976 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7692

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9768
val 1: loss = 0.7379 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 2: loss = 0.7269
val 2: loss = 0.7326 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 3: loss = 0.7273
val 3: loss = 0.7812 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 4: loss = 0.7036
val 4: loss = 0.7012 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 5: loss = 0.6965
val 5: loss = 0.6991 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 6: loss = 0.6902
val 6: loss = 0.6928 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 7: loss = 0.6551
val 7: loss = 0.6630 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
train 8: loss = 0.6365
val 8: loss = 0.6551 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
test: loss = 0.6704 | acc = 0.5714 | precision = 0.4615 | recall = 0.5455 | f1 = 0.5000 | auc = 0.7273

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9538
val 1: loss = 0.6987 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 2: loss = 0.7446
val 2: loss = 0.7942 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 3: loss = 0.7310
val 3: loss = 0.6841 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 4: loss = 0.7153
val 4: loss = 0.7087 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7917
train 5: loss = 0.7077
val 5: loss = 0.7018 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8333
train 6: loss = 0.6970
val 6: loss = 0.7353 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 7: loss = 0.6842
val 7: loss = 0.6710 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.8333
train 8: loss = 0.6719
val 8: loss = 0.6771 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.8333
test: loss = 0.6674 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7755

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8957
val 1: loss = 0.8364 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 2: loss = 0.7803
val 2: loss = 0.6984 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 3: loss = 0.7316
val 3: loss = 0.7746 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 4: loss = 0.7341
val 4: loss = 0.8118 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 5: loss = 0.6831
val 5: loss = 0.6745 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 6: loss = 0.6822
val 6: loss = 0.6818 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7083
train 7: loss = 0.6875
val 7: loss = 0.6850 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.7500
train 8: loss = 0.6598
val 8: loss = 0.6716 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7500
test: loss = 0.6726 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.7077

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8831
val 1: loss = 0.7257 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7708
train 2: loss = 0.7388
val 2: loss = 0.6853 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.7500
train 3: loss = 0.7331
val 3: loss = 0.6807 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 4: loss = 0.7222
val 4: loss = 0.6854 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7500
train 5: loss = 0.7514
val 5: loss = 0.6802 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 6: loss = 0.7171
val 6: loss = 0.6756 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 7: loss = 0.6881
val 7: loss = 0.6732 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 8: loss = 0.6894
val 8: loss = 0.7009 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
test: loss = 0.7248 | acc = 0.4074 | precision = 0.4074 | recall = 1.0000 | f1 = 0.5789 | auc = 0.8807

use_bias = True, use_rope = False, different size bias
extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8010
val 1: loss = 0.5955 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6667
train 2: loss = 0.5877
val 2: loss = 0.5930 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8333
train 3: loss = 0.4061
val 3: loss = 0.4360 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.8750
train 4: loss = 0.3265
val 4: loss = 0.7164 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7500
train 5: loss = 0.1841
val 5: loss = 0.5960 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.1196
val 6: loss = 0.7420 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.8333
train 7: loss = 0.0843
val 7: loss = 0.4641 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8958
train 8: loss = 0.0119
val 8: loss = 0.6163 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8750
train 9: loss = 0.0051
val 9: loss = 0.6099 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8750
train 10: loss = 0.0042
val 10: loss = 0.6175 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8750
test: loss = 0.5445 | acc = 0.7143 | precision = 0.7692 | recall = 0.6667 | f1 = 0.7143 | auc = 0.8359

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8260
val 1: loss = 0.5210 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.8163
train 2: loss = 0.5252
val 2: loss = 0.4193 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 3: loss = 0.3181
val 3: loss = 0.3361 | acc = 0.8571 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9388
train 4: loss = 0.2345
val 4: loss = 0.4609 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8980
train 5: loss = 0.1068
val 5: loss = 0.4129 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
train 6: loss = 0.0490
val 6: loss = 0.4489 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9184
train 7: loss = 0.0073
val 7: loss = 0.5036 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 8: loss = 0.0038
val 8: loss = 0.5183 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 9: loss = 0.0031
val 9: loss = 0.5324 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 10: loss = 0.0027
val 10: loss = 0.5377 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
test: loss = 0.7653 | acc = 0.6429 | precision = 0.5333 | recall = 0.7273 | f1 = 0.6154 | auc = 0.7273

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8843
val 1: loss = 0.4961 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8958
train 2: loss = 0.6018
val 2: loss = 0.4740 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8125
train 3: loss = 0.4290
val 3: loss = 0.3911 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 4: loss = 0.2648
val 4: loss = 0.5114 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8750
train 5: loss = 0.2406
val 5: loss = 0.8956 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
train 6: loss = 0.1137
val 6: loss = 0.8846 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
train 7: loss = 0.0307
val 7: loss = 0.8504 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 8: loss = 0.0093
val 8: loss = 0.8997 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 9: loss = 0.0063
val 9: loss = 0.9307 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 10: loss = 0.0052
val 10: loss = 0.9447 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
test: loss = 0.5915 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8061

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7888
val 1: loss = 0.5840 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 2: loss = 0.5535
val 2: loss = 0.5699 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9375
train 3: loss = 0.3578
val 3: loss = 1.3855 | acc = 0.5000 | precision = 1.0000 | recall = 0.1250 | f1 = 0.2222 | auc = 0.9583
train 4: loss = 0.2167
val 4: loss = 0.8605 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.9167
train 5: loss = 0.1832
val 5: loss = 0.6371 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9375
train 6: loss = 0.1383
val 6: loss = 0.4241 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9792
train 7: loss = 0.0657
val 7: loss = 0.7069 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 8: loss = 0.0315
val 8: loss = 0.8501 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 9: loss = 0.0235
val 9: loss = 0.6735 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 10: loss = 0.0159
val 10: loss = 0.7607 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
test: loss = 0.6455 | acc = 0.8571 | precision = 0.8235 | recall = 0.9333 | f1 = 0.8750 | auc = 0.8256

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7650
val 1: loss = 0.7212 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.7083
train 2: loss = 0.5088
val 2: loss = 0.4922 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 3: loss = 0.4216
val 3: loss = 0.6030 | acc = 0.7857 | precision = 0.7273 | recall = 1.0000 | f1 = 0.8421 | auc = 0.8333
train 4: loss = 0.3459
val 4: loss = 0.6897 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7708
train 5: loss = 0.1945
val 5: loss = 0.7776 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8542
train 6: loss = 0.0983
val 6: loss = 1.4236 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.8333
train 7: loss = 0.0380
val 7: loss = 1.0971 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8333
train 8: loss = 0.0117
val 8: loss = 1.2405 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
train 9: loss = 0.0058
val 9: loss = 1.2972 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
train 10: loss = 0.0046
val 10: loss = 1.2995 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
test: loss = 0.4463 | acc = 0.8519 | precision = 0.7692 | recall = 0.9091 | f1 = 0.8333 | auc = 0.8807

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.9410
val 1: loss = 0.5537 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
train 2: loss = 0.5021
val 2: loss = 0.8478 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8333
train 3: loss = 0.4239
val 3: loss = 0.5190 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 4: loss = 0.3206
val 4: loss = 0.7171 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 5: loss = 0.2761
val 5: loss = 0.4776 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 6: loss = 0.1444
val 6: loss = 0.5766 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 7: loss = 0.0499
val 7: loss = 0.7926 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
train 8: loss = 0.0259
val 8: loss = 0.9466 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8542
train 9: loss = 0.0109
val 9: loss = 0.8004 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 10: loss = 0.0081
val 10: loss = 0.8280 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
test: loss = 0.5944 | acc = 0.8571 | precision = 0.9231 | recall = 0.8000 | f1 = 0.8571 | auc = 0.8513

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.9041
val 1: loss = 0.5724 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 2: loss = 0.4444
val 2: loss = 0.5727 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8776
train 3: loss = 0.4285
val 3: loss = 0.5648 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 4: loss = 0.2520
val 4: loss = 0.8978 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 5: loss = 0.1764
val 5: loss = 0.7720 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
train 6: loss = 0.1105
val 6: loss = 0.9565 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
train 7: loss = 0.0297
val 7: loss = 1.1122 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 8: loss = 0.0129
val 8: loss = 1.1546 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 9: loss = 0.0083
val 9: loss = 1.1881 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 10: loss = 0.0066
val 10: loss = 1.2113 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
test: loss = 0.6666 | acc = 0.6429 | precision = 0.5455 | recall = 0.5455 | f1 = 0.5455 | auc = 0.7005

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.9088
val 1: loss = 0.5350 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8542
train 2: loss = 0.4836
val 2: loss = 0.6150 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 3: loss = 0.3568
val 3: loss = 0.8946 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 4: loss = 0.3403
val 4: loss = 0.6977 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7500
train 5: loss = 0.1889
val 5: loss = 0.7035 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7917
train 6: loss = 0.1256
val 6: loss = 1.0308 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 7: loss = 0.0640
val 7: loss = 1.2047 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
train 8: loss = 0.0201
val 8: loss = 1.2012 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 9: loss = 0.0101
val 9: loss = 1.1825 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 10: loss = 0.0077
val 10: loss = 1.2137 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
test: loss = 0.5589 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8032
val 1: loss = 0.5783 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8542
train 2: loss = 0.4548
val 2: loss = 0.4663 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8542
train 3: loss = 0.3591
val 3: loss = 0.3965 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 4: loss = 0.2725
val 4: loss = 0.4628 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 5: loss = 0.1700
val 5: loss = 0.6703 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8958
train 6: loss = 0.1057
val 6: loss = 0.6590 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
train 7: loss = 0.0345
val 7: loss = 0.7022 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 8: loss = 0.0162
val 8: loss = 0.8168 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 9: loss = 0.0069
val 9: loss = 0.8996 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 10: loss = 0.0057
val 10: loss = 0.8913 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
test: loss = 0.6594 | acc = 0.5714 | precision = 0.6154 | recall = 0.5333 | f1 = 0.5714 | auc = 0.7436

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8209
val 1: loss = 0.6988 | acc = 0.5000 | precision = 0.5455 | recall = 0.7500 | f1 = 0.6316 | auc = 0.5417
train 2: loss = 0.5377
val 2: loss = 0.6184 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6875
train 3: loss = 0.4455
val 3: loss = 0.7431 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.6250
train 4: loss = 0.3066
val 4: loss = 0.9100 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7708
train 5: loss = 0.3011
val 5: loss = 1.0711 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7917
train 6: loss = 0.1814
val 6: loss = 1.0034 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 7: loss = 0.0969
val 7: loss = 1.1387 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 8: loss = 0.0268
val 8: loss = 1.5499 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7708
train 9: loss = 0.0155
val 9: loss = 1.3880 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 10: loss = 0.0119
val 10: loss = 1.4761 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
test: loss = 0.4009 | acc = 0.7778 | precision = 0.6471 | recall = 1.0000 | f1 = 0.7857 | auc = 0.9659

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.9958
val 1: loss = 0.6850 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 2: loss = 0.7608
val 2: loss = 0.6839 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 3: loss = 0.7135
val 3: loss = 0.7102 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 4: loss = 0.6988
val 4: loss = 0.7090 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6875
train 5: loss = 0.7053
val 5: loss = 0.7135 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6875
train 6: loss = 0.7213
val 6: loss = 0.7564 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6667
train 7: loss = 0.6796
val 7: loss = 0.6756 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 8: loss = 0.6666
val 8: loss = 0.6685 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 9: loss = 0.6657
val 9: loss = 0.6641 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 10: loss = 0.6470
val 10: loss = 0.6617 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
test: loss = 0.6884 | acc = 0.5000 | precision = 1.0000 | recall = 0.0667 | f1 = 0.1250 | auc = 0.7590

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.9767
val 1: loss = 0.7380 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 2: loss = 0.7275
val 2: loss = 0.7337 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 3: loss = 0.7288
val 3: loss = 0.7890 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 4: loss = 0.7053
val 4: loss = 0.7114 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 5: loss = 0.7001
val 5: loss = 0.6983 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 6: loss = 0.7024
val 6: loss = 0.7081 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 7: loss = 0.6496
val 7: loss = 0.6733 | acc = 0.5000 | precision = 0.5000 | recall = 0.8571 | f1 = 0.6316 | auc = 0.7143
train 8: loss = 0.6162
val 8: loss = 0.6703 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7143
train 9: loss = 0.5757
val 9: loss = 0.6499 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7347
train 10: loss = 0.5283
val 10: loss = 0.9551 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
test: loss = 0.7407 | acc = 0.5714 | precision = 0.4783 | recall = 1.0000 | f1 = 0.6471 | auc = 0.7219

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.9538
val 1: loss = 0.6986 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 2: loss = 0.7453
val 2: loss = 0.7957 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 3: loss = 0.7332
val 3: loss = 0.6852 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 4: loss = 0.7184
val 4: loss = 0.7166 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7917
train 5: loss = 0.7125
val 5: loss = 0.7020 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8333
train 6: loss = 0.7050
val 6: loss = 0.7860 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 7: loss = 0.6878
val 7: loss = 0.6882 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 8: loss = 0.6766
val 8: loss = 0.6648 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 9: loss = 0.6690
val 9: loss = 0.6475 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.8542
train 10: loss = 0.6523
val 10: loss = 0.6394 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
test: loss = 0.6610 | acc = 0.5357 | precision = 1.0000 | recall = 0.0714 | f1 = 0.1333 | auc = 0.7551

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8957
val 1: loss = 0.8357 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 2: loss = 0.7813
val 2: loss = 0.6990 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 3: loss = 0.7340
val 3: loss = 0.7756 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 4: loss = 0.7408
val 4: loss = 0.8112 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 5: loss = 0.6872
val 5: loss = 0.6751 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 6: loss = 0.6877
val 6: loss = 0.7136 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7083
train 7: loss = 0.7029
val 7: loss = 0.6738 | acc = 0.5000 | precision = 0.5455 | recall = 0.7500 | f1 = 0.6316 | auc = 0.7500
train 8: loss = 0.6736
val 8: loss = 0.6620 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.7500
train 9: loss = 0.6443
val 9: loss = 0.7485 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 10: loss = 0.6410
val 10: loss = 0.7048 | acc = 0.5000 | precision = 1.0000 | recall = 0.1250 | f1 = 0.2222 | auc = 0.7708
test: loss = 0.6714 | acc = 0.5714 | precision = 0.5556 | recall = 1.0000 | f1 = 0.7143 | auc = 0.7077

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8831
val 1: loss = 0.7256 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7708
train 2: loss = 0.7397
val 2: loss = 0.6851 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.7500
train 3: loss = 0.7354
val 3: loss = 0.6808 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 4: loss = 0.7259
val 4: loss = 0.6850 | acc = 0.5714 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7500
train 5: loss = 0.7653
val 5: loss = 0.6806 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 6: loss = 0.7325
val 6: loss = 0.6765 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7292
train 7: loss = 0.6882
val 7: loss = 0.6916 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7292
train 8: loss = 0.6912
val 8: loss = 0.7685 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 9: loss = 0.6808
val 9: loss = 0.6808 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7500
train 10: loss = 0.6747
val 10: loss = 0.6823 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7500
test: loss = 0.7206 | acc = 0.4074 | precision = 0.4074 | recall = 1.0000 | f1 = 0.5789 | auc = 0.8807

unlearnable bias
extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8010
val 1: loss = 0.5955 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6667
train 2: loss = 0.5853
val 2: loss = 0.5901 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8333
train 3: loss = 0.4003
val 3: loss = 0.4335 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.8958
train 4: loss = 0.3074
val 4: loss = 0.6388 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7708
train 5: loss = 0.1451
val 5: loss = 0.6006 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.0953
val 6: loss = 0.6649 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8125
train 7: loss = 0.0330
val 7: loss = 0.5427 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
train 8: loss = 0.0112
val 8: loss = 0.5552 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
test: loss = 0.5290 | acc = 0.7500 | precision = 0.7857 | recall = 0.7333 | f1 = 0.7586 | auc = 0.8410

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8260
val 1: loss = 0.5210 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.8163
train 2: loss = 0.5226
val 2: loss = 0.4180 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 3: loss = 0.3061
val 3: loss = 0.3297 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9388
train 4: loss = 0.2077
val 4: loss = 0.4194 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
train 5: loss = 0.0776
val 5: loss = 0.5017 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8980
train 6: loss = 0.0369
val 6: loss = 0.4092 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9388
train 7: loss = 0.0089
val 7: loss = 0.4498 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9388
train 8: loss = 0.0059
val 8: loss = 0.4648 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9184
test: loss = 0.7960 | acc = 0.6429 | precision = 0.5333 | recall = 0.7273 | f1 = 0.6154 | auc = 0.7433

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8843
val 1: loss = 0.4961 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8958
train 2: loss = 0.6011
val 2: loss = 0.4738 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8125
train 3: loss = 0.4244
val 3: loss = 0.3904 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 4: loss = 0.2552
val 4: loss = 0.5073 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 5: loss = 0.2287
val 5: loss = 0.9729 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
train 6: loss = 0.0926
val 6: loss = 0.7002 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8750
train 7: loss = 0.0315
val 7: loss = 0.7267 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8750
train 8: loss = 0.0179
val 8: loss = 0.7519 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8750
test: loss = 0.5782 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8061

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7888
val 1: loss = 0.5840 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 2: loss = 0.5513
val 2: loss = 0.5658 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9375
train 3: loss = 0.3509
val 3: loss = 1.3438 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.9583
train 4: loss = 0.2066
val 4: loss = 0.8450 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.9375
train 5: loss = 0.1686
val 5: loss = 0.5624 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9375
train 6: loss = 0.1048
val 6: loss = 0.6401 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 7: loss = 0.0548
val 7: loss = 0.6757 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 8: loss = 0.0396
val 8: loss = 0.7471 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
test: loss = 0.6042 | acc = 0.8214 | precision = 0.8125 | recall = 0.8667 | f1 = 0.8387 | auc = 0.8462

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7650
val 1: loss = 0.7212 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.7083
train 2: loss = 0.5085
val 2: loss = 0.4939 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 3: loss = 0.4163
val 3: loss = 0.5834 | acc = 0.7857 | precision = 0.7273 | recall = 1.0000 | f1 = 0.8421 | auc = 0.8333
train 4: loss = 0.3352
val 4: loss = 0.7063 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 5: loss = 0.1659
val 5: loss = 0.8227 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8542
train 6: loss = 0.0834
val 6: loss = 1.1834 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.8125
train 7: loss = 0.0368
val 7: loss = 1.0295 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
train 8: loss = 0.0163
val 8: loss = 1.0575 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
test: loss = 0.4448 | acc = 0.8519 | precision = 0.7692 | recall = 0.9091 | f1 = 0.8333 | auc = 0.8807

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9410
val 1: loss = 0.5537 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
train 2: loss = 0.5014
val 2: loss = 0.8446 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8542
train 3: loss = 0.4165
val 3: loss = 0.5224 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8542
train 4: loss = 0.3100
val 4: loss = 0.7056 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 5: loss = 0.2435
val 5: loss = 0.5084 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
train 6: loss = 0.1223
val 6: loss = 0.5818 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.8333
train 7: loss = 0.0567
val 7: loss = 0.7296 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 8: loss = 0.0315
val 8: loss = 0.7157 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333
test: loss = 0.6163 | acc = 0.7857 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8410

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9041
val 1: loss = 0.5724 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 2: loss = 0.4436
val 2: loss = 0.5752 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8776
train 3: loss = 0.4196
val 3: loss = 0.5647 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 4: loss = 0.2443
val 4: loss = 0.8507 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8163
train 5: loss = 0.1520
val 5: loss = 0.8251 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 6: loss = 0.0726
val 6: loss = 1.0135 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 7: loss = 0.0240
val 7: loss = 1.0707 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 8: loss = 0.0145
val 8: loss = 1.1119 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
test: loss = 0.6730 | acc = 0.6429 | precision = 0.5455 | recall = 0.5455 | f1 = 0.5455 | auc = 0.7005

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9088
val 1: loss = 0.5350 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8542
train 2: loss = 0.4823
val 2: loss = 0.6177 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 3: loss = 0.3549
val 3: loss = 0.8558 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8125
train 4: loss = 0.3242
val 4: loss = 0.6958 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7500
train 5: loss = 0.1721
val 5: loss = 0.7199 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 6: loss = 0.1124
val 6: loss = 0.9032 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 7: loss = 0.0528
val 7: loss = 1.1103 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 8: loss = 0.0345
val 8: loss = 1.0645 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
test: loss = 0.5589 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8032
val 1: loss = 0.5783 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8542
train 2: loss = 0.4537
val 2: loss = 0.4677 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8542
train 3: loss = 0.3546
val 3: loss = 0.4005 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 4: loss = 0.2611
val 4: loss = 0.5008 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 5: loss = 0.1436
val 5: loss = 0.6537 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 6: loss = 0.0633
val 6: loss = 0.7108 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 7: loss = 0.0214
val 7: loss = 0.7352 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
train 8: loss = 0.0175
val 8: loss = 0.8467 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8750
test: loss = 0.6581 | acc = 0.6071 | precision = 0.6429 | recall = 0.6000 | f1 = 0.6207 | auc = 0.7487

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8209
val 1: loss = 0.6988 | acc = 0.5000 | precision = 0.5455 | recall = 0.7500 | f1 = 0.6316 | auc = 0.5417
train 2: loss = 0.5363
val 2: loss = 0.6196 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7083
train 3: loss = 0.4393
val 3: loss = 0.7391 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.6250
train 4: loss = 0.3014
val 4: loss = 0.8132 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7708
train 5: loss = 0.2741
val 5: loss = 1.1088 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7917
train 6: loss = 0.1420
val 6: loss = 1.0879 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7708
train 7: loss = 0.0749
val 7: loss = 1.1168 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 8: loss = 0.0378
val 8: loss = 1.3645 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7708
test: loss = 0.4014 | acc = 0.7778 | precision = 0.6471 | recall = 1.0000 | f1 = 0.7857 | auc = 0.9659

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9958
val 1: loss = 0.6850 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 2: loss = 0.7602
val 2: loss = 0.6838 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 3: loss = 0.7124
val 3: loss = 0.7068 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 4: loss = 0.6955
val 4: loss = 0.7067 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7083
train 5: loss = 0.7027
val 5: loss = 0.7163 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6875
train 6: loss = 0.7088
val 6: loss = 0.7280 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6667
train 7: loss = 0.6765
val 7: loss = 0.6724 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 8: loss = 0.6654
val 8: loss = 0.6735 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
test: loss = 0.6978 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7692

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9767
val 1: loss = 0.7380 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 2: loss = 0.7270
val 2: loss = 0.7326 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 3: loss = 0.7272
val 3: loss = 0.7806 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 4: loss = 0.7035
val 4: loss = 0.7014 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 5: loss = 0.6964
val 5: loss = 0.6991 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 6: loss = 0.6901
val 6: loss = 0.6929 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 7: loss = 0.6545
val 7: loss = 0.6630 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
train 8: loss = 0.6361
val 8: loss = 0.6552 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
test: loss = 0.6702 | acc = 0.5714 | precision = 0.4615 | recall = 0.5455 | f1 = 0.5000 | auc = 0.7273

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9538
val 1: loss = 0.6986 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 2: loss = 0.7446
val 2: loss = 0.7941 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 3: loss = 0.7310
val 3: loss = 0.6841 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 4: loss = 0.7154
val 4: loss = 0.7085 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7917
train 5: loss = 0.7077
val 5: loss = 0.7020 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 6: loss = 0.6972
val 6: loss = 0.7347 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 7: loss = 0.6843
val 7: loss = 0.6713 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.8333
train 8: loss = 0.6723
val 8: loss = 0.6775 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.8333
test: loss = 0.6676 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7755

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8957
val 1: loss = 0.8357 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 2: loss = 0.7803
val 2: loss = 0.6984 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 3: loss = 0.7315
val 3: loss = 0.7746 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 4: loss = 0.7340
val 4: loss = 0.8117 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 5: loss = 0.6831
val 5: loss = 0.6745 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 6: loss = 0.6822
val 6: loss = 0.6817 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7083
train 7: loss = 0.6873
val 7: loss = 0.6851 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7500
train 8: loss = 0.6598
val 8: loss = 0.6718 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7500
test: loss = 0.6727 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.7077

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8831
val 1: loss = 0.7256 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7708
train 2: loss = 0.7389
val 2: loss = 0.6853 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.7500
train 3: loss = 0.7331
val 3: loss = 0.6808 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 4: loss = 0.7221
val 4: loss = 0.6855 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7500
train 5: loss = 0.7514
val 5: loss = 0.6804 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 6: loss = 0.7171
val 6: loss = 0.6757 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 7: loss = 0.6881
val 7: loss = 0.6733 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 8: loss = 0.6894
val 8: loss = 0.7011 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
test: loss = 0.7248 | acc = 0.4074 | precision = 0.4074 | recall = 1.0000 | f1 = 0.5789 | auc = 0.8807

random init bias
extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8191
val 1: loss = 0.7121 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.7917
train 2: loss = 0.5855
val 2: loss = 0.6553 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8333
train 3: loss = 0.4435
val 3: loss = 0.9367 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8750
train 4: loss = 0.3925
val 4: loss = 0.6422 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.9167
train 5: loss = 0.2801
val 5: loss = 0.3131 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.9167
train 6: loss = 0.1232
val 6: loss = 0.4406 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8542
train 7: loss = 0.1002
val 7: loss = 0.4478 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
train 8: loss = 0.0460
val 8: loss = 0.4607 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8542
test: loss = 0.6407 | acc = 0.7500 | precision = 0.8333 | recall = 0.6667 | f1 = 0.7407 | auc = 0.8513

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7748
val 1: loss = 0.5802 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7755
train 2: loss = 0.6139
val 2: loss = 0.6641 | acc = 0.5714 | precision = 0.5385 | recall = 1.0000 | f1 = 0.7000 | auc = 0.9592
train 3: loss = 0.3735
val 3: loss = 0.3120 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9592
train 4: loss = 0.2105
val 4: loss = 1.0205 | acc = 0.8571 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.8776
train 5: loss = 0.2208
val 5: loss = 0.4958 | acc = 0.8571 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9184
train 6: loss = 0.0620
val 6: loss = 0.5237 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9184
train 7: loss = 0.0344
val 7: loss = 0.5660 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9184
train 8: loss = 0.0274
val 8: loss = 0.5806 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.9184
test: loss = 0.8509 | acc = 0.5714 | precision = 0.4762 | recall = 0.9091 | f1 = 0.6250 | auc = 0.7754

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7765
val 1: loss = 0.5222 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8750
train 2: loss = 0.6039
val 2: loss = 0.5584 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 3: loss = 0.3997
val 3: loss = 0.8463 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8542
train 4: loss = 0.2051
val 4: loss = 0.8637 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7708
train 5: loss = 0.2052
val 5: loss = 0.8559 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
train 6: loss = 0.0445
val 6: loss = 0.9414 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
train 7: loss = 0.0146
val 7: loss = 1.0197 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
train 8: loss = 0.0093
val 8: loss = 1.0418 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
test: loss = 0.5586 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7806

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8391
val 1: loss = 0.6254 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8542
train 2: loss = 0.6423
val 2: loss = 0.5375 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8542
train 3: loss = 0.3694
val 3: loss = 0.8506 | acc = 0.6429 | precision = 0.6364 | recall = 0.8750 | f1 = 0.7368 | auc = 0.8125
train 4: loss = 0.2762
val 4: loss = 1.0321 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.8958
train 5: loss = 0.1578
val 5: loss = 0.5161 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9375
train 6: loss = 0.0734
val 6: loss = 0.6000 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 1.0000
train 7: loss = 0.0406
val 7: loss = 0.6893 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 8: loss = 0.0234
val 8: loss = 0.7624 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
test: loss = 0.5996 | acc = 0.7500 | precision = 0.7857 | recall = 0.7333 | f1 = 0.7586 | auc = 0.8410

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8110
val 1: loss = 0.7741 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.6875
train 2: loss = 0.5915
val 2: loss = 0.6259 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8542
train 3: loss = 0.5457
val 3: loss = 0.6542 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 4: loss = 0.3688
val 4: loss = 0.7402 | acc = 0.6429 | precision = 0.6364 | recall = 0.8750 | f1 = 0.7368 | auc = 0.8333
train 5: loss = 0.3252
val 5: loss = 0.5892 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8333
train 6: loss = 0.1467
val 6: loss = 0.8272 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8125
train 7: loss = 0.0815
val 7: loss = 0.9272 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.8125
train 8: loss = 0.0406
val 8: loss = 0.8633 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8125
test: loss = 0.4224 | acc = 0.7407 | precision = 0.6111 | recall = 1.0000 | f1 = 0.7586 | auc = 0.9489

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8373
val 1: loss = 0.6932 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8750
train 2: loss = 0.5451
val 2: loss = 0.4334 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9167
train 3: loss = 0.3925
val 3: loss = 0.4190 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.9167
train 4: loss = 0.3205
val 4: loss = 0.5494 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9167
train 5: loss = 0.2209
val 5: loss = 0.5140 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 6: loss = 0.1122
val 6: loss = 0.9734 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.8333
train 7: loss = 0.0941
val 7: loss = 0.6411 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 8: loss = 0.0418
val 8: loss = 0.6609 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
test: loss = 0.5896 | acc = 0.7857 | precision = 0.9091 | recall = 0.6667 | f1 = 0.7692 | auc = 0.8513

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7449
val 1: loss = 0.5837 | acc = 0.5714 | precision = 0.5455 | recall = 0.8571 | f1 = 0.6667 | auc = 0.8776
train 2: loss = 0.4361
val 2: loss = 0.5244 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8776
train 3: loss = 0.3341
val 3: loss = 0.6322 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7959
train 4: loss = 0.2171
val 4: loss = 0.7117 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7959
train 5: loss = 0.1070
val 5: loss = 0.8624 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 6: loss = 0.1038
val 6: loss = 0.8302 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
train 7: loss = 0.0389
val 7: loss = 0.9385 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
train 8: loss = 0.0196
val 8: loss = 0.9796 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
test: loss = 0.7226 | acc = 0.6429 | precision = 0.5333 | recall = 0.7273 | f1 = 0.6154 | auc = 0.7701

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7443
val 1: loss = 0.5590 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8125
train 2: loss = 0.4624
val 2: loss = 0.7105 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
train 3: loss = 0.3563
val 3: loss = 0.5961 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7292
train 4: loss = 0.2174
val 4: loss = 0.6601 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.7708
train 5: loss = 0.1453
val 5: loss = 0.8680 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 6: loss = 0.0971
val 6: loss = 1.1064 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 7: loss = 0.0304
val 7: loss = 1.1255 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
train 8: loss = 0.0180
val 8: loss = 1.2759 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7708
test: loss = 0.5983 | acc = 0.6786 | precision = 0.6190 | recall = 0.9286 | f1 = 0.7429 | auc = 0.7347

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.6924
val 1: loss = 0.6747 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7917
train 2: loss = 0.3817
val 2: loss = 0.6050 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.7917
train 3: loss = 0.3357
val 3: loss = 1.0017 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8333
train 4: loss = 0.2179
val 4: loss = 0.5021 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8542
train 5: loss = 0.0794
val 5: loss = 0.7493 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8542
train 6: loss = 0.0395
val 6: loss = 0.8378 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8542
train 7: loss = 0.0140
val 7: loss = 0.8235 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
train 8: loss = 0.0101
val 8: loss = 0.8505 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8333
test: loss = 0.6929 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.7897

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.7728
val 1: loss = 0.8315 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.5833
train 2: loss = 0.4633
val 2: loss = 0.9058 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7500
train 3: loss = 0.4558
val 3: loss = 0.6398 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7917
train 4: loss = 0.3718
val 4: loss = 0.7316 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7083
train 5: loss = 0.2423
val 5: loss = 1.0868 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7292
train 6: loss = 0.1437
val 6: loss = 0.9895 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.6875
train 7: loss = 0.0702
val 7: loss = 1.1275 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 8: loss = 0.0442
val 8: loss = 1.1655 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
test: loss = 0.3609 | acc = 0.8148 | precision = 0.7143 | recall = 0.9091 | f1 = 0.8000 | auc = 0.9602

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8682
val 1: loss = 0.7516 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7083
train 2: loss = 0.7642
val 2: loss = 0.6879 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 3: loss = 0.7152
val 3: loss = 0.6938 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6458
train 4: loss = 0.7187
val 4: loss = 0.6774 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 5: loss = 0.6969
val 5: loss = 0.6867 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6458
train 6: loss = 0.6813
val 6: loss = 0.7394 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 7: loss = 0.6785
val 7: loss = 0.7115 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6458
train 8: loss = 0.6599
val 8: loss = 0.6673 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
test: loss = 0.6865 | acc = 0.5000 | precision = 1.0000 | recall = 0.0667 | f1 = 0.1250 | auc = 0.7487

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8034
val 1: loss = 0.7364 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 2: loss = 0.7816
val 2: loss = 0.6969 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7551
train 3: loss = 0.7072
val 3: loss = 0.8718 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 4: loss = 0.7187
val 4: loss = 0.7374 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 5: loss = 0.7088
val 5: loss = 0.6884 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7347
train 6: loss = 0.6724
val 6: loss = 0.7293 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7347
train 7: loss = 0.6758
val 7: loss = 0.6857 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 8: loss = 0.6293
val 8: loss = 0.6769 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.7347
test: loss = 0.6409 | acc = 0.6071 | precision = 0.5000 | recall = 0.1818 | f1 = 0.2667 | auc = 0.7005

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8045
val 1: loss = 0.7435 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6250
train 2: loss = 0.7789
val 2: loss = 0.6791 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 3: loss = 0.7238
val 3: loss = 0.7809 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 4: loss = 0.6973
val 4: loss = 0.7063 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 5: loss = 0.7337
val 5: loss = 0.6861 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 6: loss = 0.6989
val 6: loss = 0.6712 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 7: loss = 0.7023
val 7: loss = 0.7055 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7917
train 8: loss = 0.6792
val 8: loss = 0.6696 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
test: loss = 0.6731 | acc = 0.5357 | precision = 1.0000 | recall = 0.0714 | f1 = 0.1333 | auc = 0.7653

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.8058
val 1: loss = 0.7996 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4375
train 2: loss = 0.7716
val 2: loss = 0.7063 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 3: loss = 0.7424
val 3: loss = 0.6857 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6042
train 4: loss = 0.6924
val 4: loss = 0.8620 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 5: loss = 0.7020
val 5: loss = 0.8742 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 6: loss = 0.6870
val 6: loss = 0.7478 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 7: loss = 0.6739
val 7: loss = 0.6808 | acc = 0.5000 | precision = 0.5556 | recall = 0.6250 | f1 = 0.5882 | auc = 0.6042
train 8: loss = 0.6475
val 8: loss = 0.7360 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
test: loss = 0.6755 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.6718

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 8
train 1: loss = 0.9046
val 1: loss = 0.6808 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7083
train 2: loss = 0.7528
val 2: loss = 0.9558 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 3: loss = 0.8026
val 3: loss = 0.7435 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 4: loss = 0.7320
val 4: loss = 0.6796 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 5: loss = 0.7107
val 5: loss = 0.7569 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 6: loss = 0.7155
val 6: loss = 0.6816 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7500
train 7: loss = 0.6881
val 7: loss = 0.6859 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7500
train 8: loss = 0.6847
val 8: loss = 0.6864 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7500
test: loss = 0.7379 | acc = 0.4074 | precision = 0.4074 | recall = 1.0000 | f1 = 0.5789 | auc = 0.8807

extraction = gigapath, seed = 460, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7158
val 1: loss = 0.5035 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8571
train 2: loss = 0.4433
val 2: loss = 0.5471 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8929
train 3: loss = 0.2927
val 3: loss = 0.5027 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9643
train 4: loss = 0.1325
val 4: loss = 0.4958 | acc = 0.8000 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.9464
train 5: loss = 0.2060
val 5: loss = 0.0895 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 6: loss = 0.0302
val 6: loss = 0.3679 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 1.0000
train 7: loss = 0.0089
val 7: loss = 0.0525 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 8: loss = 0.0033
val 8: loss = 0.0696 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 9: loss = 0.0022
val 9: loss = 0.0660 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 10: loss = 0.0020
val 10: loss = 0.0666 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
test: loss = 0.6837 | acc = 0.8966 | precision = 0.8889 | recall = 0.9412 | f1 = 0.9143 | auc = 0.8775

extraction = gigapath, seed = 460, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7567
val 1: loss = 0.7871 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8393
train 2: loss = 0.5013
val 2: loss = 0.6688 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9286
train 3: loss = 0.4469
val 3: loss = 0.3442 | acc = 0.7333 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.9286
train 4: loss = 0.2173
val 4: loss = 0.4018 | acc = 0.8667 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.9821
train 5: loss = 0.2645
val 5: loss = 0.5085 | acc = 0.8000 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9286
train 6: loss = 0.1371
val 6: loss = 0.4786 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9464
train 7: loss = 0.0278
val 7: loss = 0.8007 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 8: loss = 0.0116
val 8: loss = 0.9578 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 9: loss = 0.0045
val 9: loss = 0.8882 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 10: loss = 0.0032
val 10: loss = 0.8884 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
test: loss = 0.1929 | acc = 0.9310 | precision = 0.8462 | recall = 1.0000 | f1 = 0.9167 | auc = 0.9747

extraction = gigapath, seed = 460, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6240
val 1: loss = 1.0793 | acc = 0.6000 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.7321
train 2: loss = 0.3910
val 2: loss = 0.4799 | acc = 0.8667 | precision = 0.8750 | recall = 0.8750 | f1 = 0.8750 | auc = 0.8929
train 3: loss = 0.3637
val 3: loss = 0.4937 | acc = 0.8000 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8750
train 4: loss = 0.1538
val 4: loss = 0.5685 | acc = 0.8000 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8929
train 5: loss = 0.1966
val 5: loss = 0.8760 | acc = 0.7333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8214
train 6: loss = 0.0841
val 6: loss = 0.6785 | acc = 0.7333 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 7: loss = 0.0293
val 7: loss = 1.2585 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.8929
train 8: loss = 0.0077
val 8: loss = 0.9899 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8929
train 9: loss = 0.0029
val 9: loss = 1.0255 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8929
train 10: loss = 0.0025
val 10: loss = 1.0467 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8929
test: loss = 0.5724 | acc = 0.7586 | precision = 0.7500 | recall = 0.3333 | f1 = 0.4615 | auc = 0.8111

extraction = gigapath, seed = 460, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6136
val 1: loss = 0.7588 | acc = 0.6667 | precision = 0.6667 | recall = 0.3333 | f1 = 0.4444 | auc = 0.7222
train 2: loss = 0.3912
val 2: loss = 0.5318 | acc = 0.8000 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9444
train 3: loss = 0.2746
val 3: loss = 0.3421 | acc = 0.8000 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9074
train 4: loss = 0.1661
val 4: loss = 0.7469 | acc = 0.6667 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8704
train 5: loss = 0.0835
val 5: loss = 0.8540 | acc = 0.6667 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8519
train 6: loss = 0.0234
val 6: loss = 1.4208 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8148
train 7: loss = 0.0039
val 7: loss = 1.5021 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8148
train 8: loss = 0.0024
val 8: loss = 1.5221 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8148
train 9: loss = 0.0019
val 9: loss = 1.5368 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8148
train 10: loss = 0.0017
val 10: loss = 1.5463 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8148
test: loss = 0.2934 | acc = 0.8276 | precision = 0.8000 | recall = 0.7273 | f1 = 0.7619 | auc = 0.9596

extraction = gigapath, seed = 460, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6420
val 1: loss = 0.4247 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9318
train 2: loss = 0.3481
val 2: loss = 0.2791 | acc = 0.8000 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 1.0000
train 3: loss = 0.3080
val 3: loss = 0.2446 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 4: loss = 0.1124
val 4: loss = 0.2174 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 5: loss = 0.0724
val 5: loss = 0.3223 | acc = 0.8667 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9773
train 6: loss = 0.1710
val 6: loss = 0.1510 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 7: loss = 0.0220
val 7: loss = 0.1749 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 8: loss = 0.0095
val 8: loss = 0.2539 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 9: loss = 0.0062
val 9: loss = 0.2592 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 10: loss = 0.0049
val 10: loss = 0.2594 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
test: loss = 0.6510 | acc = 0.7586 | precision = 0.7273 | recall = 0.6667 | f1 = 0.6957 | auc = 0.8284

extraction = uni, seed = 460, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7112
val 1: loss = 0.5526 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8393
train 2: loss = 0.3663
val 2: loss = 0.5909 | acc = 0.7333 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8929
train 3: loss = 0.2584
val 3: loss = 0.2716 | acc = 0.8667 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9643
train 4: loss = 0.1013
val 4: loss = 0.3509 | acc = 0.8000 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9464
train 5: loss = 0.0653
val 5: loss = 0.3642 | acc = 0.8667 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.9643
train 6: loss = 0.0306
val 6: loss = 0.7749 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9286
train 7: loss = 0.0128
val 7: loss = 0.5249 | acc = 0.8667 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9464
train 8: loss = 0.0046
val 8: loss = 0.5845 | acc = 0.8667 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9464
train 9: loss = 0.0019
val 9: loss = 0.5911 | acc = 0.8667 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9464
train 10: loss = 0.0018
val 10: loss = 0.5935 | acc = 0.8667 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9464
test: loss = 0.4854 | acc = 0.8276 | precision = 0.8333 | recall = 0.8824 | f1 = 0.8571 | auc = 0.8775

extraction = uni, seed = 460, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7682
val 1: loss = 0.6197 | acc = 0.6667 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
train 2: loss = 0.4794
val 2: loss = 0.6167 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.7857
train 3: loss = 0.3864
val 3: loss = 0.5050 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8750
train 4: loss = 0.2197
val 4: loss = 0.4270 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 5: loss = 0.1176
val 5: loss = 0.4905 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9464
train 6: loss = 0.1103
val 6: loss = 0.8718 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.9286
train 7: loss = 0.0384
val 7: loss = 0.6093 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 8: loss = 0.0180
val 8: loss = 0.7065 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 9: loss = 0.0099
val 9: loss = 0.7620 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 10: loss = 0.0075
val 10: loss = 0.7730 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
test: loss = 0.1624 | acc = 0.9310 | precision = 0.8462 | recall = 1.0000 | f1 = 0.9167 | auc = 0.9798

extraction = uni, seed = 460, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8130
val 1: loss = 0.6311 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7857
train 2: loss = 0.4466
val 2: loss = 0.8530 | acc = 0.7333 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8393
train 3: loss = 0.4216
val 3: loss = 0.6430 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7679
train 4: loss = 0.1904
val 4: loss = 0.5489 | acc = 0.8000 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8036
train 5: loss = 0.1393
val 5: loss = 0.9000 | acc = 0.6000 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8214
train 6: loss = 0.0648
val 6: loss = 1.0782 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.8214
train 7: loss = 0.0273
val 7: loss = 0.8444 | acc = 0.6667 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8571
train 8: loss = 0.0228
val 8: loss = 0.9709 | acc = 0.6667 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8393
train 9: loss = 0.0086
val 9: loss = 1.0654 | acc = 0.6667 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8393
train 10: loss = 0.0070
val 10: loss = 1.0944 | acc = 0.6000 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8393
test: loss = 0.2719 | acc = 0.8621 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.9333

extraction = uni, seed = 460, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7209
val 1: loss = 0.4900 | acc = 0.8000 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8704
train 2: loss = 0.3427
val 2: loss = 0.6590 | acc = 0.8667 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8889
train 3: loss = 0.3219
val 3: loss = 0.4296 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8889
train 4: loss = 0.1856
val 4: loss = 0.5785 | acc = 0.8000 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8889
train 5: loss = 0.1578
val 5: loss = 0.8035 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8889
train 6: loss = 0.0382
val 6: loss = 1.0419 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8519
train 7: loss = 0.0203
val 7: loss = 1.1343 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8519
train 8: loss = 0.0084
val 8: loss = 1.1971 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8519
train 9: loss = 0.0062
val 9: loss = 1.2230 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
train 10: loss = 0.0052
val 10: loss = 1.2372 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
test: loss = 0.5061 | acc = 0.7586 | precision = 0.6667 | recall = 0.7273 | f1 = 0.6957 | auc = 0.8535

extraction = uni, seed = 460, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6526
val 1: loss = 0.2494 | acc = 0.9333 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9773
train 2: loss = 0.3277
val 2: loss = 0.1609 | acc = 0.9333 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 1.0000
train 3: loss = 0.2185
val 3: loss = 0.1430 | acc = 0.9333 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9773
train 4: loss = 0.1561
val 4: loss = 0.1366 | acc = 0.9333 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 1.0000
train 5: loss = 0.0845
val 5: loss = 0.1374 | acc = 0.9333 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 1.0000
train 6: loss = 0.0916
val 6: loss = 0.0806 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 1.0000
train 7: loss = 0.0329
val 7: loss = 0.1124 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 8: loss = 0.0122
val 8: loss = 0.1680 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 9: loss = 0.0078
val 9: loss = 0.1588 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 10: loss = 0.0060
val 10: loss = 0.1609 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
test: loss = 1.2293 | acc = 0.6207 | precision = 0.5556 | recall = 0.4167 | f1 = 0.4762 | auc = 0.7500

extraction = resnet50, seed = 460, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7939
val 1: loss = 0.7636 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5357
train 2: loss = 0.6870
val 2: loss = 0.7854 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 3: loss = 0.6902
val 3: loss = 0.7037 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 4: loss = 0.6735
val 4: loss = 0.6840 | acc = 0.6667 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6429
train 5: loss = 0.6668
val 5: loss = 0.6883 | acc = 0.5333 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6250
train 6: loss = 0.6507
val 6: loss = 0.6907 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6786
train 7: loss = 0.6234
val 7: loss = 0.6671 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6786
train 8: loss = 0.6538
val 8: loss = 0.6634 | acc = 0.6000 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.6786
train 9: loss = 0.5864
val 9: loss = 0.6984 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
train 10: loss = 0.5535
val 10: loss = 0.6787 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
test: loss = 0.6353 | acc = 0.7241 | precision = 0.7647 | recall = 0.7647 | f1 = 0.7647 | auc = 0.7598

extraction = resnet50, seed = 460, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8247
val 1: loss = 0.6914 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4643
train 2: loss = 0.7160
val 2: loss = 0.7028 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5536
train 3: loss = 0.7363
val 3: loss = 0.7100 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5893
train 4: loss = 0.6869
val 4: loss = 0.6921 | acc = 0.5333 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6250
train 5: loss = 0.7282
val 5: loss = 0.6888 | acc = 0.6000 | precision = 0.5385 | recall = 1.0000 | f1 = 0.7000 | auc = 0.6429
train 6: loss = 0.6957
val 6: loss = 0.6841 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6429
train 7: loss = 0.6719
val 7: loss = 0.6787 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6429
train 8: loss = 0.6843
val 8: loss = 0.6894 | acc = 0.5333 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6429
train 9: loss = 0.6601
val 9: loss = 0.6754 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6429
train 10: loss = 0.6446
val 10: loss = 0.6822 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6607
test: loss = 0.6230 | acc = 0.6207 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8838

extraction = resnet50, seed = 460, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8052
val 1: loss = 0.7019 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5893
train 2: loss = 0.7004
val 2: loss = 0.7896 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 3: loss = 0.7735
val 3: loss = 0.7151 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 4: loss = 0.6948
val 4: loss = 0.7389 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6607
train 5: loss = 0.6995
val 5: loss = 0.6950 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6786
train 6: loss = 0.6911
val 6: loss = 0.6724 | acc = 0.7333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.6964
train 7: loss = 0.6653
val 7: loss = 0.6824 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 8: loss = 0.6617
val 8: loss = 0.6509 | acc = 0.7333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.7143
train 9: loss = 0.6148
val 9: loss = 0.6770 | acc = 0.5333 | precision = 1.0000 | recall = 0.1250 | f1 = 0.2222 | auc = 0.7321
train 10: loss = 0.5660
val 10: loss = 0.7493 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7321
test: loss = 0.6873 | acc = 0.4828 | precision = 0.3500 | recall = 0.7778 | f1 = 0.4828 | auc = 0.7667

extraction = resnet50, seed = 460, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8047
val 1: loss = 0.6769 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7593
train 2: loss = 0.7225
val 2: loss = 0.6657 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8519
train 3: loss = 0.7287
val 3: loss = 0.6738 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
train 4: loss = 0.7066
val 4: loss = 0.6784 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8148
train 5: loss = 0.6931
val 5: loss = 0.6828 | acc = 0.6000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8148
train 6: loss = 0.6877
val 6: loss = 0.6545 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8519
train 7: loss = 0.6733
val 7: loss = 0.6451 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8519
train 8: loss = 0.6467
val 8: loss = 0.6193 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8704
train 9: loss = 0.6254
val 9: loss = 0.5885 | acc = 0.6667 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.8704
train 10: loss = 0.5749
val 10: loss = 0.5643 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8704
test: loss = 0.5559 | acc = 0.6897 | precision = 0.7500 | recall = 0.2727 | f1 = 0.4000 | auc = 0.8232

extraction = resnet50, seed = 460, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7849
val 1: loss = 0.6136 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8409
train 2: loss = 0.7035
val 2: loss = 0.6044 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8182
train 3: loss = 0.6838
val 3: loss = 0.6026 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8409
train 4: loss = 0.7065
val 4: loss = 0.5799 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7955
train 5: loss = 0.7040
val 5: loss = 0.6277 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8182
train 6: loss = 0.6537
val 6: loss = 0.6027 | acc = 0.7333 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.8182
train 7: loss = 0.6210
val 7: loss = 0.5574 | acc = 0.7333 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.8409
train 8: loss = 0.5655
val 8: loss = 0.5259 | acc = 0.7333 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.8409
train 9: loss = 0.5684
val 9: loss = 0.5427 | acc = 0.7333 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7955
train 10: loss = 0.4614
val 10: loss = 0.4375 | acc = 0.7333 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.8182
test: loss = 0.6379 | acc = 0.5517 | precision = 0.4286 | recall = 0.2500 | f1 = 0.3158 | auc = 0.6863

random init bias
extraction = gigapath, seed = 460, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7285
val 1: loss = 0.8753 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8393
train 2: loss = 0.4004
val 2: loss = 0.4307 | acc = 0.7333 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.9821
train 3: loss = 0.2950
val 3: loss = 0.3840 | acc = 0.8000 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
train 4: loss = 0.2082
val 4: loss = 0.5968 | acc = 0.8000 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9286
train 5: loss = 0.1350
val 5: loss = 0.2559 | acc = 0.8667 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.9643
train 6: loss = 0.0260
val 6: loss = 0.2301 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9643
train 7: loss = 0.0096
val 7: loss = 0.2940 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.9464
train 8: loss = 0.0031
val 8: loss = 0.2911 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9464
train 9: loss = 0.0024
val 9: loss = 0.2758 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9464
train 10: loss = 0.0021
val 10: loss = 0.2711 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9464
test: loss = 0.7993 | acc = 0.7931 | precision = 0.8235 | recall = 0.8235 | f1 = 0.8235 | auc = 0.8627

extraction = gigapath, seed = 460, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7761
val 1: loss = 0.6095 | acc = 0.7333 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.7857
train 2: loss = 0.6134
val 2: loss = 0.8374 | acc = 0.5333 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.9286
train 3: loss = 0.4846
val 3: loss = 0.3755 | acc = 0.8667 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9286
train 4: loss = 0.2793
val 4: loss = 0.4929 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.9107
train 5: loss = 0.1689
val 5: loss = 0.4847 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 6: loss = 0.0653
val 6: loss = 0.6501 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 7: loss = 0.0240
val 7: loss = 0.6430 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 8: loss = 0.0123
val 8: loss = 0.7349 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 9: loss = 0.0048
val 9: loss = 0.8157 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 10: loss = 0.0037
val 10: loss = 0.8367 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
test: loss = 0.2399 | acc = 0.9310 | precision = 0.8462 | recall = 1.0000 | f1 = 0.9167 | auc = 0.9949

extraction = gigapath, seed = 460, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7826
val 1: loss = 0.5277 | acc = 0.7333 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8929
train 2: loss = 0.5597
val 2: loss = 0.5057 | acc = 0.7333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9286
train 3: loss = 0.3610
val 3: loss = 0.4361 | acc = 0.8000 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8929
train 4: loss = 0.2049
val 4: loss = 0.5549 | acc = 0.8000 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.8571
train 5: loss = 0.1099
val 5: loss = 0.6827 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8571
train 6: loss = 0.0285
val 6: loss = 0.9879 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8214
train 7: loss = 0.0129
val 7: loss = 1.5399 | acc = 0.6000 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8036
train 8: loss = 0.0238
val 8: loss = 1.1106 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8750
train 9: loss = 0.0046
val 9: loss = 1.2220 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8571
train 10: loss = 0.0024
val 10: loss = 1.2397 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8571
test: loss = 0.3267 | acc = 0.7931 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.9389

extraction = gigapath, seed = 460, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7676
val 1: loss = 0.4309 | acc = 0.8667 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.9630
train 2: loss = 0.4965
val 2: loss = 0.3196 | acc = 0.8000 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 1.0000
train 3: loss = 0.2662
val 3: loss = 0.6703 | acc = 0.6667 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8704
train 4: loss = 0.2943
val 4: loss = 0.7716 | acc = 0.6667 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8333
train 5: loss = 0.1181
val 5: loss = 0.6529 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8889
train 6: loss = 0.0597
val 6: loss = 1.1462 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8519
train 7: loss = 0.0194
val 7: loss = 1.2842 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8704
train 8: loss = 0.0055
val 8: loss = 1.2367 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8704
train 9: loss = 0.0036
val 9: loss = 1.2846 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8704
train 10: loss = 0.0030
val 10: loss = 1.3074 | acc = 0.6667 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8704
test: loss = 0.3648 | acc = 0.8276 | precision = 0.7500 | recall = 0.8182 | f1 = 0.7826 | auc = 0.9242

extraction = gigapath, seed = 460, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7640
val 1: loss = 0.4166 | acc = 0.8000 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 1.0000
train 2: loss = 0.4541
val 2: loss = 0.4720 | acc = 0.8000 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.9773
train 3: loss = 0.3427
val 3: loss = 0.4035 | acc = 0.8667 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9318
train 4: loss = 0.2294
val 4: loss = 0.3664 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9545
train 5: loss = 0.0777
val 5: loss = 0.1672 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 6: loss = 0.0220
val 6: loss = 0.2895 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 7: loss = 0.0060
val 7: loss = 0.2195 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 8: loss = 0.0017
val 8: loss = 0.2360 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 9: loss = 0.0014
val 9: loss = 0.2454 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 10: loss = 0.0013
val 10: loss = 0.2482 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
test: loss = 1.1157 | acc = 0.6552 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7892

extraction = uni, seed = 460, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6404
val 1: loss = 0.6648 | acc = 0.6000 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.7679
train 2: loss = 0.3732
val 2: loss = 0.6497 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8750
train 3: loss = 0.2346
val 3: loss = 0.6143 | acc = 0.8000 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.9286
train 4: loss = 0.1339
val 4: loss = 0.6496 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 5: loss = 0.0259
val 5: loss = 0.6815 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 6: loss = 0.0068
val 6: loss = 0.6659 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 7: loss = 0.0034
val 7: loss = 0.6483 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 8: loss = 0.0026
val 8: loss = 0.6343 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 9: loss = 0.0022
val 9: loss = 0.6429 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
train 10: loss = 0.0020
val 10: loss = 0.6445 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9286
test: loss = 0.7692 | acc = 0.7241 | precision = 0.6957 | recall = 0.9412 | f1 = 0.8000 | auc = 0.8824

extraction = uni, seed = 460, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6824
val 1: loss = 0.6346 | acc = 0.6667 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7679
train 2: loss = 0.4476
val 2: loss = 0.6328 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7857
train 3: loss = 0.3149
val 3: loss = 0.4963 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8750
train 4: loss = 0.2111
val 4: loss = 0.7842 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8929
train 5: loss = 0.1130
val 5: loss = 0.9320 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.9464
train 6: loss = 0.0817
val 6: loss = 0.8612 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.9286
train 7: loss = 0.0755
val 7: loss = 0.7443 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 8: loss = 0.0328
val 8: loss = 0.7182 | acc = 0.8000 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.9107
train 9: loss = 0.0187
val 9: loss = 1.0882 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8929
train 10: loss = 0.0154
val 10: loss = 1.0171 | acc = 0.7333 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8929
test: loss = 0.4121 | acc = 0.7931 | precision = 0.6667 | recall = 0.9091 | f1 = 0.7692 | auc = 0.9495

extraction = uni, seed = 460, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6911
val 1: loss = 0.5933 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7857
train 2: loss = 0.4202
val 2: loss = 0.6359 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.8036
train 3: loss = 0.2648
val 3: loss = 0.5918 | acc = 0.8000 | precision = 0.7778 | recall = 0.8750 | f1 = 0.8235 | auc = 0.8214
train 4: loss = 0.1218
val 4: loss = 0.7488 | acc = 0.7333 | precision = 0.7000 | recall = 0.8750 | f1 = 0.7778 | auc = 0.8750
train 5: loss = 0.0866
val 5: loss = 1.1270 | acc = 0.6667 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7857
train 6: loss = 0.0735
val 6: loss = 1.1351 | acc = 0.6000 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8036
train 7: loss = 0.0482
val 7: loss = 0.9991 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8214
train 8: loss = 0.0052
val 8: loss = 1.0269 | acc = 0.7333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8036
train 9: loss = 0.0041
val 9: loss = 1.0550 | acc = 0.6667 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8036
train 10: loss = 0.0036
val 10: loss = 1.0593 | acc = 0.6667 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8036
test: loss = 0.3421 | acc = 0.7931 | precision = 0.6154 | recall = 0.8889 | f1 = 0.7273 | auc = 0.9556

extraction = uni, seed = 460, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7487
val 1: loss = 0.4682 | acc = 0.7333 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8889
train 2: loss = 0.4009
val 2: loss = 0.5130 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8519
train 3: loss = 0.3778
val 3: loss = 0.4323 | acc = 0.8000 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8889
train 4: loss = 0.1863
val 4: loss = 0.6189 | acc = 0.8667 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8519
train 5: loss = 0.0776
val 5: loss = 0.8802 | acc = 0.8667 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8333
train 6: loss = 0.1055
val 6: loss = 0.6352 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.9259
train 7: loss = 0.0440
val 7: loss = 0.7608 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.9074
train 8: loss = 0.0181
val 8: loss = 0.8740 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8889
train 9: loss = 0.0088
val 9: loss = 0.9834 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8889
train 10: loss = 0.0068
val 10: loss = 1.0006 | acc = 0.7333 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8889
test: loss = 0.4340 | acc = 0.8621 | precision = 1.0000 | recall = 0.6364 | f1 = 0.7778 | auc = 0.8485

extraction = uni, seed = 460, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6841
val 1: loss = 0.3285 | acc = 0.8667 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9318
train 2: loss = 0.3243
val 2: loss = 0.2621 | acc = 0.8667 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9545
train 3: loss = 0.2337
val 3: loss = 0.1485 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 1.0000
train 4: loss = 0.1642
val 4: loss = 0.0788 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 5: loss = 0.0730
val 5: loss = 0.1068 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 6: loss = 0.0286
val 6: loss = 0.1210 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 7: loss = 0.0179
val 7: loss = 0.2155 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 8: loss = 0.0054
val 8: loss = 0.2575 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 9: loss = 0.0037
val 9: loss = 0.2464 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
train 10: loss = 0.0031
val 10: loss = 0.2510 | acc = 0.9333 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9773
test: loss = 0.8113 | acc = 0.7241 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7941

extraction = resnet50, seed = 460, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7511
val 1: loss = 0.7876 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5714
train 2: loss = 0.7304
val 2: loss = 1.0487 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 3: loss = 0.6582
val 3: loss = 0.7451 | acc = 0.4667 | precision = 0.4667 | recall = 1.0000 | f1 = 0.6364 | auc = 0.6964
train 4: loss = 0.6717
val 4: loss = 0.8107 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6786
train 5: loss = 0.6498
val 5: loss = 0.6784 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 6: loss = 0.6876
val 6: loss = 0.7817 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6607
train 7: loss = 0.6276
val 7: loss = 0.6837 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6607
train 8: loss = 0.5972
val 8: loss = 0.6554 | acc = 0.6000 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.6786
train 9: loss = 0.5546
val 9: loss = 0.6141 | acc = 0.6667 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6964
train 10: loss = 0.4969
val 10: loss = 0.6048 | acc = 0.6667 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7143
test: loss = 0.5841 | acc = 0.7241 | precision = 0.8000 | recall = 0.7059 | f1 = 0.7500 | auc = 0.7549

extraction = resnet50, seed = 460, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7658
val 1: loss = 0.6908 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6071
train 2: loss = 0.7318
val 2: loss = 0.7761 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6429
train 3: loss = 0.6969
val 3: loss = 0.6863 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6786
train 4: loss = 0.7082
val 4: loss = 0.7132 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
train 5: loss = 0.6844
val 5: loss = 0.6853 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
train 6: loss = 0.6869
val 6: loss = 0.8290 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6786
train 7: loss = 0.6816
val 7: loss = 0.6826 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
train 8: loss = 0.6486
val 8: loss = 0.6583 | acc = 0.5333 | precision = 0.5000 | recall = 0.7143 | f1 = 0.5882 | auc = 0.6964
train 9: loss = 0.6332
val 9: loss = 0.6422 | acc = 0.6667 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6964
train 10: loss = 0.5802
val 10: loss = 0.6746 | acc = 0.5333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
test: loss = 0.5762 | acc = 0.8276 | precision = 0.7500 | recall = 0.8182 | f1 = 0.7826 | auc = 0.9040

extraction = resnet50, seed = 460, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7874
val 1: loss = 0.6871 | acc = 0.6667 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.6250
train 2: loss = 0.7441
val 2: loss = 0.7302 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 3: loss = 0.6986
val 3: loss = 0.7982 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
train 4: loss = 0.6870
val 4: loss = 0.6902 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6607
train 5: loss = 0.6868
val 5: loss = 0.7819 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6429
train 6: loss = 0.6700
val 6: loss = 1.0254 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6607
train 7: loss = 0.6728
val 7: loss = 0.6843 | acc = 0.4667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6964
train 8: loss = 0.6377
val 8: loss = 0.6608 | acc = 0.5333 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.6964
train 9: loss = 0.5947
val 9: loss = 0.6096 | acc = 0.6667 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6964
train 10: loss = 0.5110
val 10: loss = 0.6932 | acc = 0.5333 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.7500
test: loss = 0.6078 | acc = 0.6207 | precision = 0.4375 | recall = 0.7778 | f1 = 0.5600 | auc = 0.7778

extraction = resnet50, seed = 460, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8419
val 1: loss = 0.7188 | acc = 0.4000 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 0.7037
train 2: loss = 0.7250
val 2: loss = 0.6777 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7593
train 3: loss = 0.7064
val 3: loss = 0.7026 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7407
train 4: loss = 0.7101
val 4: loss = 0.6895 | acc = 0.4667 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7593
train 5: loss = 0.6680
val 5: loss = 0.6871 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7778
train 6: loss = 0.6794
val 6: loss = 0.7537 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7778
train 7: loss = 0.7037
val 7: loss = 0.6456 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
train 8: loss = 0.6630
val 8: loss = 0.6356 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
train 9: loss = 0.6468
val 9: loss = 0.6206 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
train 10: loss = 0.6187
val 10: loss = 0.6058 | acc = 0.6000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
test: loss = 0.5971 | acc = 0.6552 | precision = 1.0000 | recall = 0.0909 | f1 = 0.1667 | auc = 0.7828

extraction = resnet50, seed = 460, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.8162
val 1: loss = 0.6950 | acc = 0.4667 | precision = 0.3000 | recall = 0.7500 | f1 = 0.4286 | auc = 0.6364
train 2: loss = 0.7171
val 2: loss = 0.6961 | acc = 0.4000 | precision = 0.3077 | recall = 1.0000 | f1 = 0.4706 | auc = 0.7045
train 3: loss = 0.7128
val 3: loss = 0.5732 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7727
train 4: loss = 0.6946
val 4: loss = 0.9687 | acc = 0.2667 | precision = 0.2667 | recall = 1.0000 | f1 = 0.4211 | auc = 0.7500
train 5: loss = 0.6867
val 5: loss = 0.5680 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7955
train 6: loss = 0.6455
val 6: loss = 0.6716 | acc = 0.7333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8409
train 7: loss = 0.6858
val 7: loss = 0.6470 | acc = 0.7333 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7955
train 8: loss = 0.6264
val 8: loss = 0.5462 | acc = 0.7333 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.8182
train 9: loss = 0.5555
val 9: loss = 0.5858 | acc = 0.7333 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8182
train 10: loss = 0.4913
val 10: loss = 0.4513 | acc = 0.7333 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.8182
test: loss = 0.6387 | acc = 0.5517 | precision = 0.4444 | recall = 0.3333 | f1 = 0.3810 | auc = 0.6863

extraction = gigapath, seed = 2025, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7793
val 1: loss = 0.7113 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9444
train 2: loss = 0.4392
val 2: loss = 0.2718 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9815
train 3: loss = 0.4061
val 3: loss = 0.4178 | acc = 0.8095 | precision = 1.0000 | recall = 0.5556 | f1 = 0.7143 | auc = 0.9352
train 4: loss = 0.2785
val 4: loss = 0.1335 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 0.9907
train 5: loss = 0.1231
val 5: loss = 0.1840 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 0.9907
train 6: loss = 0.0381
val 6: loss = 0.2484 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9630
train 7: loss = 0.0273
val 7: loss = 0.5975 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9630
train 8: loss = 0.0034
val 8: loss = 0.4001 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9722
train 9: loss = 0.0016
val 9: loss = 0.4418 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9722
train 10: loss = 0.0012
val 10: loss = 0.4507 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9722
test: loss = 0.6856 | acc = 0.8049 | precision = 0.7333 | recall = 0.7333 | f1 = 0.7333 | auc = 0.8051

extraction = gigapath, seed = 2025, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7852
val 1: loss = 0.6604 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9630
train 2: loss = 0.4943
val 2: loss = 0.4688 | acc = 0.6667 | precision = 0.5625 | recall = 1.0000 | f1 = 0.7200 | auc = 0.9815
train 3: loss = 0.3848
val 3: loss = 0.2442 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9815
train 4: loss = 0.2343
val 4: loss = 0.2732 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9630
train 5: loss = 0.1554
val 5: loss = 0.1178 | acc = 0.9524 | precision = 0.9000 | recall = 1.0000 | f1 = 0.9474 | auc = 1.0000
train 6: loss = 0.0628
val 6: loss = 0.1536 | acc = 0.9048 | precision = 0.8889 | recall = 0.8889 | f1 = 0.8889 | auc = 0.9907
train 7: loss = 0.0693
val 7: loss = 0.1997 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 1.0000
train 8: loss = 0.0169
val 8: loss = 0.0437 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 9: loss = 0.0102
val 9: loss = 0.0379 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 10: loss = 0.0055
val 10: loss = 0.0308 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
test: loss = 1.5302 | acc = 0.6585 | precision = 0.4118 | recall = 0.6364 | f1 = 0.5000 | auc = 0.7455

extraction = gigapath, seed = 2025, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7780
val 1: loss = 0.6788 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9615
train 2: loss = 0.5336
val 2: loss = 0.5030 | acc = 0.7619 | precision = 0.6364 | recall = 0.8750 | f1 = 0.7368 | auc = 0.8846
train 3: loss = 0.4109
val 3: loss = 0.9174 | acc = 0.7143 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.9808
train 4: loss = 0.4016
val 4: loss = 0.3316 | acc = 0.8095 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9808
train 5: loss = 0.2115
val 5: loss = 0.3070 | acc = 0.8095 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.9231
train 6: loss = 0.1277
val 6: loss = 0.5718 | acc = 0.7143 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8846
train 7: loss = 0.0482
val 7: loss = 0.6270 | acc = 0.8571 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.9231
train 8: loss = 0.0118
val 8: loss = 0.3770 | acc = 0.8095 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9231
train 9: loss = 0.0065
val 9: loss = 0.5027 | acc = 0.9048 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9038
train 10: loss = 0.0034
val 10: loss = 0.5316 | acc = 0.8571 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8846
test: loss = 0.4105 | acc = 0.8537 | precision = 0.8235 | recall = 0.8235 | f1 = 0.8235 | auc = 0.9020

extraction = gigapath, seed = 2025, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7487
val 1: loss = 0.6719 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9537
train 2: loss = 0.5613
val 2: loss = 0.6263 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8981
train 3: loss = 0.4395
val 3: loss = 0.5942 | acc = 0.7619 | precision = 1.0000 | recall = 0.4444 | f1 = 0.6154 | auc = 0.9167
train 4: loss = 0.4038
val 4: loss = 0.2761 | acc = 0.8095 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.9630
train 5: loss = 0.2874
val 5: loss = 0.2806 | acc = 0.9048 | precision = 0.8182 | recall = 1.0000 | f1 = 0.9000 | auc = 0.9722
train 6: loss = 0.1733
val 6: loss = 0.3061 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9444
train 7: loss = 0.0923
val 7: loss = 0.7427 | acc = 0.8095 | precision = 1.0000 | recall = 0.5556 | f1 = 0.7143 | auc = 0.9815
train 8: loss = 0.0362
val 8: loss = 0.4917 | acc = 0.8095 | precision = 1.0000 | recall = 0.5556 | f1 = 0.7143 | auc = 0.9630
train 9: loss = 0.0264
val 9: loss = 0.2798 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9444
train 10: loss = 0.0121
val 10: loss = 0.3484 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9444
test: loss = 0.3886 | acc = 0.8293 | precision = 0.6875 | recall = 0.8462 | f1 = 0.7586 | auc = 0.8984

extraction = gigapath, seed = 2025, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7946
val 1: loss = 0.6341 | acc = 0.7143 | precision = 0.8333 | recall = 0.5000 | f1 = 0.6250 | auc = 0.8182
train 2: loss = 0.5348
val 2: loss = 0.4360 | acc = 0.8095 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9545
train 3: loss = 0.4993
val 3: loss = 0.6038 | acc = 0.5714 | precision = 1.0000 | recall = 0.1000 | f1 = 0.1818 | auc = 0.9545
train 4: loss = 0.3556
val 4: loss = 0.3321 | acc = 0.8095 | precision = 0.7143 | recall = 1.0000 | f1 = 0.8333 | auc = 0.9545
train 5: loss = 0.2835
val 5: loss = 0.3030 | acc = 0.8571 | precision = 0.7692 | recall = 1.0000 | f1 = 0.8696 | auc = 0.9455
train 6: loss = 0.1732
val 6: loss = 0.2606 | acc = 0.8571 | precision = 0.8889 | recall = 0.8000 | f1 = 0.8421 | auc = 0.9545
train 7: loss = 0.0900
val 7: loss = 0.3948 | acc = 0.7143 | precision = 0.8333 | recall = 0.5000 | f1 = 0.6250 | auc = 0.9545
train 8: loss = 0.0306
val 8: loss = 0.3166 | acc = 0.7619 | precision = 0.8571 | recall = 0.6000 | f1 = 0.7059 | auc = 0.9545
train 9: loss = 0.0217
val 9: loss = 0.4236 | acc = 0.7143 | precision = 0.8333 | recall = 0.5000 | f1 = 0.6250 | auc = 0.9545
train 10: loss = 0.0135
val 10: loss = 0.3040 | acc = 0.8095 | precision = 0.8750 | recall = 0.7000 | f1 = 0.7778 | auc = 0.9545
test: loss = 0.2565 | acc = 0.9250 | precision = 0.8462 | recall = 0.9167 | f1 = 0.8800 | auc = 0.9583

extraction = uni, seed = 2025, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6782
val 1: loss = 0.5932 | acc = 0.6190 | precision = 1.0000 | recall = 0.1111 | f1 = 0.2000 | auc = 0.9444
train 2: loss = 0.4571
val 2: loss = 0.3116 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9722
train 3: loss = 0.3806
val 3: loss = 0.2408 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
train 4: loss = 0.2664
val 4: loss = 0.1491 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 1.0000
train 5: loss = 0.1793
val 5: loss = 0.0837 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
train 6: loss = 0.1390
val 6: loss = 0.0847 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
train 7: loss = 0.0534
val 7: loss = 0.2944 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 1.0000
train 8: loss = 0.0356
val 8: loss = 0.0840 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
train 9: loss = 0.0110
val 9: loss = 0.0810 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
train 10: loss = 0.0075
val 10: loss = 0.0902 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
test: loss = 1.1164 | acc = 0.7073 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.8308

extraction = uni, seed = 2025, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6872
val 1: loss = 0.4978 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.9537
train 2: loss = 0.4600
val 2: loss = 0.2901 | acc = 0.9048 | precision = 1.0000 | recall = 0.7778 | f1 = 0.8750 | auc = 0.9815
train 3: loss = 0.3426
val 3: loss = 0.1379 | acc = 0.9524 | precision = 0.9000 | recall = 1.0000 | f1 = 0.9474 | auc = 1.0000
train 4: loss = 0.2606
val 4: loss = 0.0718 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 5: loss = 0.2168
val 5: loss = 0.0637 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 6: loss = 0.0966
val 6: loss = 0.2082 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 1.0000
train 7: loss = 0.0396
val 7: loss = 0.0516 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 1.0000
train 8: loss = 0.0129
val 8: loss = 0.0485 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 9: loss = 0.0076
val 9: loss = 0.0467 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
train 10: loss = 0.0061
val 10: loss = 0.0459 | acc = 1.0000 | precision = 1.0000 | recall = 1.0000 | f1 = 1.0000 | auc = 1.0000
test: loss = 1.3527 | acc = 0.7073 | precision = 0.4667 | recall = 0.6364 | f1 = 0.5385 | auc = 0.7515

extraction = uni, seed = 2025, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7077
val 1: loss = 0.8257 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8558
train 2: loss = 0.5168
val 2: loss = 0.5877 | acc = 0.6667 | precision = 0.6667 | recall = 0.2500 | f1 = 0.3636 | auc = 0.8365
train 3: loss = 0.3846
val 3: loss = 0.6154 | acc = 0.7619 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.8942
train 4: loss = 0.3625
val 4: loss = 0.6942 | acc = 0.7143 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.8269
train 5: loss = 0.2421
val 5: loss = 0.5045 | acc = 0.7619 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8558
train 6: loss = 0.1963
val 6: loss = 0.7944 | acc = 0.8095 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8077
train 7: loss = 0.0944
val 7: loss = 0.6913 | acc = 0.8095 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8365
train 8: loss = 0.0458
val 8: loss = 0.5908 | acc = 0.8095 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8365
train 9: loss = 0.0267
val 9: loss = 0.6987 | acc = 0.7619 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.8462
train 10: loss = 0.0217
val 10: loss = 0.6511 | acc = 0.7619 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8462
test: loss = 0.5536 | acc = 0.8049 | precision = 0.8000 | recall = 0.7059 | f1 = 0.7500 | auc = 0.8529

extraction = uni, seed = 2025, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7180
val 1: loss = 0.6555 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 2: loss = 0.5201
val 2: loss = 0.5157 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8611
train 3: loss = 0.4338
val 3: loss = 0.3774 | acc = 0.9524 | precision = 1.0000 | recall = 0.8889 | f1 = 0.9412 | auc = 0.9444
train 4: loss = 0.3270
val 4: loss = 0.4125 | acc = 0.8095 | precision = 0.7273 | recall = 0.8889 | f1 = 0.8000 | auc = 0.9352
train 5: loss = 0.2739
val 5: loss = 0.3442 | acc = 0.8095 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.9352
train 6: loss = 0.1583
val 6: loss = 0.7401 | acc = 0.6667 | precision = 1.0000 | recall = 0.2222 | f1 = 0.3636 | auc = 0.9537
train 7: loss = 0.1290
val 7: loss = 0.9193 | acc = 0.6667 | precision = 1.0000 | recall = 0.2222 | f1 = 0.3636 | auc = 0.9259
train 8: loss = 0.1020
val 8: loss = 0.4497 | acc = 0.8095 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.9352
train 9: loss = 0.0407
val 9: loss = 0.4681 | acc = 0.8571 | precision = 0.8750 | recall = 0.7778 | f1 = 0.8235 | auc = 0.9352
train 10: loss = 0.0261
val 10: loss = 0.4756 | acc = 0.8095 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.9352
test: loss = 0.3179 | acc = 0.8293 | precision = 0.8000 | recall = 0.6154 | f1 = 0.6957 | auc = 0.9258

extraction = uni, seed = 2025, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.6759
val 1: loss = 0.9857 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9273
train 2: loss = 0.4996
val 2: loss = 0.5062 | acc = 0.8095 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9455
train 3: loss = 0.4176
val 3: loss = 0.3541 | acc = 0.9048 | precision = 0.8333 | recall = 1.0000 | f1 = 0.9091 | auc = 0.9636
train 4: loss = 0.3129
val 4: loss = 0.2622 | acc = 0.9048 | precision = 0.9000 | recall = 0.9000 | f1 = 0.9000 | auc = 0.9636
train 5: loss = 0.2272
val 5: loss = 0.2774 | acc = 0.9048 | precision = 1.0000 | recall = 0.8000 | f1 = 0.8889 | auc = 0.9818
train 6: loss = 0.1359
val 6: loss = 0.2940 | acc = 0.9048 | precision = 1.0000 | recall = 0.8000 | f1 = 0.8889 | auc = 0.9727
train 7: loss = 0.0967
val 7: loss = 0.5678 | acc = 0.8095 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9636
train 8: loss = 0.0288
val 8: loss = 0.3621 | acc = 0.8095 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9818
train 9: loss = 0.0152
val 9: loss = 0.3211 | acc = 0.8095 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9818
train 10: loss = 0.0103
val 10: loss = 0.2802 | acc = 0.8571 | precision = 0.8889 | recall = 0.8000 | f1 = 0.8421 | auc = 0.9727
test: loss = 0.3093 | acc = 0.8250 | precision = 0.6316 | recall = 1.0000 | f1 = 0.7742 | auc = 0.9732

extraction = resnet50, seed = 2025, fold = 1, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7420
val 1: loss = 0.8787 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7037
train 2: loss = 0.6839
val 2: loss = 0.7069 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7778
train 3: loss = 0.6528
val 3: loss = 0.6823 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8056
train 4: loss = 0.6504
val 4: loss = 0.7301 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
train 5: loss = 0.6294
val 5: loss = 0.7100 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7778
train 6: loss = 0.6112
val 6: loss = 0.7378 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7963
train 7: loss = 0.6108
val 7: loss = 0.8106 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8056
train 8: loss = 0.6354
val 8: loss = 0.6916 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 9: loss = 0.6103
val 9: loss = 0.6982 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8426
train 10: loss = 0.6035
val 10: loss = 0.6961 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8519
test: loss = 0.6718 | acc = 0.6341 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6846

extraction = resnet50, seed = 2025, fold = 2, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7851
val 1: loss = 0.9111 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6944
train 2: loss = 0.7046
val 2: loss = 0.6908 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7130
train 3: loss = 0.6807
val 3: loss = 0.6863 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 4: loss = 0.6819
val 4: loss = 0.6844 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7130
train 5: loss = 0.6531
val 5: loss = 0.6891 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7222
train 6: loss = 0.6344
val 6: loss = 0.6851 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7315
train 7: loss = 0.6304
val 7: loss = 0.7550 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7407
train 8: loss = 0.6336
val 8: loss = 0.6801 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7870
train 9: loss = 0.6022
val 9: loss = 0.6523 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7870
train 10: loss = 0.5751
val 10: loss = 0.6061 | acc = 0.6190 | precision = 0.6667 | recall = 0.2222 | f1 = 0.3333 | auc = 0.8056
test: loss = 0.5924 | acc = 0.6585 | precision = 0.2857 | recall = 0.1818 | f1 = 0.2222 | auc = 0.6182

extraction = resnet50, seed = 2025, fold = 3, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7689
val 1: loss = 0.9443 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6538
train 2: loss = 0.6904
val 2: loss = 0.7080 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7596
train 3: loss = 0.6682
val 3: loss = 0.6668 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7981
train 4: loss = 0.6558
val 4: loss = 0.6636 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7596
train 5: loss = 0.6309
val 5: loss = 0.7353 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7885
train 6: loss = 0.6264
val 6: loss = 0.7030 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8077
train 7: loss = 0.6239
val 7: loss = 0.7115 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7788
train 8: loss = 0.6257
val 8: loss = 0.6786 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7885
train 9: loss = 0.6131
val 9: loss = 0.6865 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7885
train 10: loss = 0.6126
val 10: loss = 0.6781 | acc = 0.6190 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7885
test: loss = 0.6793 | acc = 0.5854 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7696

extraction = resnet50, seed = 2025, fold = 4, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7502
val 1: loss = 0.8994 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 2: loss = 0.6744
val 2: loss = 0.6883 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6759
train 3: loss = 0.6689
val 3: loss = 0.6808 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 4: loss = 0.6453
val 4: loss = 0.7033 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6852
train 5: loss = 0.6445
val 5: loss = 0.8036 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6944
train 6: loss = 0.6467
val 6: loss = 0.7906 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6852
train 7: loss = 0.6392
val 7: loss = 0.6968 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7037
train 8: loss = 0.6200
val 8: loss = 0.7316 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7130
train 9: loss = 0.6179
val 9: loss = 0.6888 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7130
train 10: loss = 0.6079
val 10: loss = 0.6736 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7130
test: loss = 0.6104 | acc = 0.6829 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6538

extraction = resnet50, seed = 2025, fold = 5, lr = 0.0001, weight_decay = 0.001, epochs = 10
train 1: loss = 0.7257
val 1: loss = 1.0084 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6727
train 2: loss = 0.6803
val 2: loss = 0.8099 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7182
train 3: loss = 0.7123
val 3: loss = 0.6953 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7636
train 4: loss = 0.6457
val 4: loss = 0.6970 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7545
train 5: loss = 0.6228
val 5: loss = 0.9386 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7545
train 6: loss = 0.6453
val 6: loss = 0.7073 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7727
train 7: loss = 0.6374
val 7: loss = 0.7568 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7818
train 8: loss = 0.6288
val 8: loss = 0.7538 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7909
train 9: loss = 0.6255
val 9: loss = 0.7458 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7909
train 10: loss = 0.6206
val 10: loss = 0.7343 | acc = 0.5238 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7909
test: loss = 0.6419 | acc = 0.7000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8423

