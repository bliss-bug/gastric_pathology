extraction = gigapath, seed = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6738
val 1: loss = 0.7129 | acc = 0.4167 | precision = 0.3333 | recall = 0.7500 | f1 = 0.4615 | auc = 0.5938
train 2: loss = 0.5734
val 2: loss = 0.6432 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.7188
train 3: loss = 0.5069
val 3: loss = 0.6423 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7812
train 4: loss = 0.4509
val 4: loss = 0.6391 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8125
train 5: loss = 0.4023
val 5: loss = 0.6002 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.3657
val 6: loss = 0.6478 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
train 7: loss = 0.3354
val 7: loss = 0.6384 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 8: loss = 0.3165
val 8: loss = 0.6346 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8750
train 9: loss = 0.3040
val 9: loss = 0.6472 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
train 10: loss = 0.2932
val 10: loss = 0.6458 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
test: loss = 0.6962 | acc = 0.6522 | precision = 0.5455 | recall = 0.6667 | f1 = 0.6000 | auc = 0.6508

extraction = gigapath, seed = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7098
val 1: loss = 0.6603 | acc = 0.6667 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.6250
train 2: loss = 0.6154
val 2: loss = 0.6308 | acc = 0.6667 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7500
train 3: loss = 0.5578
val 3: loss = 0.6139 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
train 4: loss = 0.4847
val 4: loss = 0.6028 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8125
train 5: loss = 0.4264
val 5: loss = 0.5777 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
train 6: loss = 0.3786
val 6: loss = 0.5898 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
train 7: loss = 0.3392
val 7: loss = 0.5880 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7500
train 8: loss = 0.3154
val 8: loss = 0.5952 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
train 9: loss = 0.3065
val 9: loss = 0.6005 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
train 10: loss = 0.2938
val 10: loss = 0.6025 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
test: loss = 0.5513 | acc = 0.7391 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.8492

extraction = gigapath, seed = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6828
val 1: loss = 0.6628 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.5625
train 2: loss = 0.5606
val 2: loss = 0.6654 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.5938
train 3: loss = 0.4888
val 3: loss = 0.6623 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.5625
train 4: loss = 0.4269
val 4: loss = 0.6584 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6250
train 5: loss = 0.3803
val 5: loss = 0.6981 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.5938
train 6: loss = 0.3260
val 6: loss = 0.7257 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.5938
train 7: loss = 0.2968
val 7: loss = 0.7409 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6250
train 8: loss = 0.2763
val 8: loss = 0.7642 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.5625
train 9: loss = 0.2713
val 9: loss = 0.7701 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.5625
train 10: loss = 0.2587
val 10: loss = 0.7732 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.5625
test: loss = 0.5595 | acc = 0.7826 | precision = 0.8889 | recall = 0.6667 | f1 = 0.7619 | auc = 0.8409

extraction = gigapath, seed = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6896
val 1: loss = 0.7002 | acc = 0.5833 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.6857
train 2: loss = 0.5932
val 2: loss = 0.7203 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7429
train 3: loss = 0.5465
val 3: loss = 0.7363 | acc = 0.5000 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.6857
train 4: loss = 0.4848
val 4: loss = 0.6964 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.6857
train 5: loss = 0.4280
val 5: loss = 0.7020 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.6857
train 6: loss = 0.3854
val 6: loss = 0.6887 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.7143
train 7: loss = 0.3572
val 7: loss = 0.7023 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.6857
train 8: loss = 0.3384
val 8: loss = 0.7025 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.6857
train 9: loss = 0.3258
val 9: loss = 0.6934 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.7143
train 10: loss = 0.3191
val 10: loss = 0.6956 | acc = 0.6667 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.7143
test: loss = 0.6355 | acc = 0.6522 | precision = 0.8889 | recall = 0.5333 | f1 = 0.6667 | auc = 0.8250

extraction = gigapath, seed = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6913
val 1: loss = 0.6558 | acc = 0.6667 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.6857
train 2: loss = 0.5745
val 2: loss = 0.6206 | acc = 0.7500 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8000
train 3: loss = 0.5025
val 3: loss = 0.5826 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8000
train 4: loss = 0.4357
val 4: loss = 0.5684 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8000
train 5: loss = 0.3698
val 5: loss = 0.5837 | acc = 0.7500 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7429
train 6: loss = 0.3345
val 6: loss = 0.6074 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7714
train 7: loss = 0.3002
val 7: loss = 0.6166 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7714
train 8: loss = 0.2795
val 8: loss = 0.6310 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7429
train 9: loss = 0.2731
val 9: loss = 0.6383 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7429
train 10: loss = 0.2646
val 10: loss = 0.6407 | acc = 0.6667 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7429
test: loss = 0.5560 | acc = 0.7826 | precision = 0.7500 | recall = 0.6667 | f1 = 0.7059 | auc = 0.8175

extraction = uni, seed = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6266
val 1: loss = 0.6247 | acc = 0.9167 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.7500
train 2: loss = 0.5082
val 2: loss = 0.5935 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7812
train 3: loss = 0.4294
val 3: loss = 0.5672 | acc = 0.8333 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8750
train 4: loss = 0.3820
val 4: loss = 0.5959 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.8438
train 5: loss = 0.3283
val 5: loss = 0.5657 | acc = 0.7500 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8438
train 6: loss = 0.2890
val 6: loss = 0.6029 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.8125
train 7: loss = 0.2697
val 7: loss = 0.5773 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8750
train 8: loss = 0.2504
val 8: loss = 0.5631 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 9: loss = 0.2329
val 9: loss = 0.5704 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
train 10: loss = 0.2302
val 10: loss = 0.5706 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8438
test: loss = 0.5503 | acc = 0.6957 | precision = 0.5714 | recall = 0.8889 | f1 = 0.6957 | auc = 0.8730

extraction = uni, seed = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7199
val 1: loss = 0.5841 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 1.0000
train 2: loss = 0.6019
val 2: loss = 0.5878 | acc = 0.7500 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 1.0000
train 3: loss = 0.5332
val 3: loss = 0.5325 | acc = 0.7500 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 1.0000
train 4: loss = 0.4718
val 4: loss = 0.4902 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 1.0000
train 5: loss = 0.4235
val 5: loss = 0.4712 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9688
train 6: loss = 0.3853
val 6: loss = 0.4953 | acc = 0.8333 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9688
train 7: loss = 0.3579
val 7: loss = 0.4769 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9688
train 8: loss = 0.3396
val 8: loss = 0.4658 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9688
train 9: loss = 0.3218
val 9: loss = 0.4617 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9688
train 10: loss = 0.3138
val 10: loss = 0.4609 | acc = 0.9167 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9688
test: loss = 0.4614 | acc = 0.7826 | precision = 0.6667 | recall = 0.8889 | f1 = 0.7619 | auc = 0.9524

extraction = uni, seed = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6856
val 1: loss = 0.5941 | acc = 0.7500 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8125
train 2: loss = 0.5561
val 2: loss = 0.5889 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7500
train 3: loss = 0.4708
val 3: loss = 0.6338 | acc = 0.6667 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.6875
train 4: loss = 0.4048
val 4: loss = 0.6242 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
train 5: loss = 0.3488
val 5: loss = 0.6849 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.6250
train 6: loss = 0.3096
val 6: loss = 0.6420 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
train 7: loss = 0.2852
val 7: loss = 0.6843 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
train 8: loss = 0.2691
val 8: loss = 0.7016 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
train 9: loss = 0.2539
val 9: loss = 0.6924 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
train 10: loss = 0.2466
val 10: loss = 0.6964 | acc = 0.5833 | precision = 0.4000 | recall = 0.5000 | f1 = 0.4444 | auc = 0.6562
test: loss = 0.5759 | acc = 0.7826 | precision = 0.8889 | recall = 0.6667 | f1 = 0.7619 | auc = 0.8409

extraction = uni, seed = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7234
val 1: loss = 0.6549 | acc = 0.5833 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.9143
train 2: loss = 0.5882
val 2: loss = 0.6554 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9429
train 3: loss = 0.5184
val 3: loss = 0.5713 | acc = 0.7500 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9714
train 4: loss = 0.4663
val 4: loss = 0.5101 | acc = 0.8333 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9714
train 5: loss = 0.4061
val 5: loss = 0.5486 | acc = 0.7500 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9429
train 6: loss = 0.3697
val 6: loss = 0.5215 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9429
train 7: loss = 0.3408
val 7: loss = 0.5296 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9429
train 8: loss = 0.3208
val 8: loss = 0.5035 | acc = 0.9167 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 0.9714
train 9: loss = 0.3069
val 9: loss = 0.5046 | acc = 0.9167 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 0.9714
train 10: loss = 0.2993
val 10: loss = 0.5057 | acc = 0.8333 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9714
test: loss = 0.5502 | acc = 0.8261 | precision = 0.9231 | recall = 0.8000 | f1 = 0.8571 | auc = 0.8833

extraction = uni, seed = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7069
val 1: loss = 0.6626 | acc = 0.5833 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7429
train 2: loss = 0.5721
val 2: loss = 0.5958 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.7714
train 3: loss = 0.4912
val 3: loss = 0.5655 | acc = 0.8333 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.8571
train 4: loss = 0.4331
val 4: loss = 0.5413 | acc = 0.7500 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8286
train 5: loss = 0.3719
val 5: loss = 0.5385 | acc = 0.7500 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8286
train 6: loss = 0.3337
val 6: loss = 0.5432 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8571
train 7: loss = 0.3091
val 7: loss = 0.5368 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8286
train 8: loss = 0.2838
val 8: loss = 0.5316 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8286
train 9: loss = 0.2686
val 9: loss = 0.5300 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8286
train 10: loss = 0.2596
val 10: loss = 0.5305 | acc = 0.7500 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8286
test: loss = 0.6078 | acc = 0.7391 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7857

extraction = resnet50, seed = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6971
val 1: loss = 0.6979 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.6562
train 2: loss = 0.6932
val 2: loss = 0.6936 | acc = 0.5000 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 0.6250
train 3: loss = 0.6928
val 3: loss = 0.6912 | acc = 0.5000 | precision = 0.2500 | recall = 0.2500 | f1 = 0.2500 | auc = 0.5625
train 4: loss = 0.6917
val 4: loss = 0.6948 | acc = 0.5000 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 0.5625
train 5: loss = 0.6893
val 5: loss = 0.6918 | acc = 0.5833 | precision = 0.4286 | recall = 0.7500 | f1 = 0.5455 | auc = 0.5938
train 6: loss = 0.6889
val 6: loss = 0.6951 | acc = 0.5000 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 0.5938
train 7: loss = 0.6889
val 7: loss = 0.6963 | acc = 0.4167 | precision = 0.3636 | recall = 1.0000 | f1 = 0.5333 | auc = 0.5938
train 8: loss = 0.6884
val 8: loss = 0.6936 | acc = 0.5833 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.5938
train 9: loss = 0.6870
val 9: loss = 0.6936 | acc = 0.5833 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.5938
train 10: loss = 0.6867
val 10: loss = 0.6939 | acc = 0.5000 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 0.5938
test: loss = 0.6922 | acc = 0.5652 | precision = 0.4444 | recall = 0.4444 | f1 = 0.4444 | auc = 0.6508

extraction = resnet50, seed = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6961
val 1: loss = 0.7045 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.6562
train 2: loss = 0.6961
val 2: loss = 0.6987 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 3: loss = 0.6924
val 3: loss = 0.7002 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7500
train 4: loss = 0.6909
val 4: loss = 0.6961 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7500
train 5: loss = 0.6904
val 5: loss = 0.6965 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 6: loss = 0.6900
val 6: loss = 0.6935 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 7: loss = 0.6886
val 7: loss = 0.6947 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 8: loss = 0.6882
val 8: loss = 0.6955 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 9: loss = 0.6878
val 9: loss = 0.6947 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
train 10: loss = 0.6875
val 10: loss = 0.6949 | acc = 0.3333 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.7188
test: loss = 0.6904 | acc = 0.5652 | precision = 0.4737 | recall = 1.0000 | f1 = 0.6429 | auc = 0.9048

extraction = resnet50, seed = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6956
val 1: loss = 0.6902 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6562
train 2: loss = 0.6945
val 2: loss = 0.6815 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 3: loss = 0.6912
val 3: loss = 0.6810 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7188
train 4: loss = 0.6905
val 4: loss = 0.6781 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 5: loss = 0.6884
val 5: loss = 0.6759 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 6: loss = 0.6877
val 6: loss = 0.6752 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 7: loss = 0.6877
val 7: loss = 0.6766 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 8: loss = 0.6870
val 8: loss = 0.6744 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 9: loss = 0.6864
val 9: loss = 0.6748 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 10: loss = 0.6862
val 10: loss = 0.6750 | acc = 0.6667 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
test: loss = 0.6950 | acc = 0.4783 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500

extraction = resnet50, seed = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6850
val 1: loss = 0.7137 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5714
train 2: loss = 0.6758
val 2: loss = 0.7273 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5714
train 3: loss = 0.6713
val 3: loss = 0.7300 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6286
train 4: loss = 0.6724
val 4: loss = 0.7338 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 5: loss = 0.6681
val 5: loss = 0.7461 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6286
train 6: loss = 0.6665
val 6: loss = 0.7412 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 7: loss = 0.6659
val 7: loss = 0.7411 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 8: loss = 0.6655
val 8: loss = 0.7426 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 9: loss = 0.6645
val 9: loss = 0.7426 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 10: loss = 0.6642
val 10: loss = 0.7429 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
test: loss = 0.7273 | acc = 0.3478 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5167

extraction = resnet50, seed = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6947
val 1: loss = 0.6940 | acc = 0.3333 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6286
train 2: loss = 0.6910
val 2: loss = 0.6989 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6286
train 3: loss = 0.6893
val 3: loss = 0.7009 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6286
train 4: loss = 0.6896
val 4: loss = 0.7002 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6286
train 5: loss = 0.6870
val 5: loss = 0.7014 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 6: loss = 0.6863
val 6: loss = 0.7013 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 7: loss = 0.6869
val 7: loss = 0.7003 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 8: loss = 0.6855
val 8: loss = 0.7013 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 9: loss = 0.6847
val 9: loss = 0.7011 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
train 10: loss = 0.6844
val 10: loss = 0.7012 | acc = 0.4167 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6571
test: loss = 0.6896 | acc = 0.6087 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7063

seed = 2024
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7049
val 1: loss = 0.6477 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7755
train 2: loss = 0.6004
val 2: loss = 0.6091 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 3: loss = 0.5324
val 3: loss = 0.5795 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.8980
train 4: loss = 0.4750
val 4: loss = 0.5896 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
train 5: loss = 0.4312
val 5: loss = 0.5493 | acc = 0.8571 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9184
train 6: loss = 0.3974
val 6: loss = 0.5428 | acc = 0.8571 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9184
train 7: loss = 0.3704
val 7: loss = 0.5503 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9184
train 8: loss = 0.3568
val 8: loss = 0.5511 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9184
train 9: loss = 0.3403
val 9: loss = 0.5481 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9184
train 10: loss = 0.3334
val 10: loss = 0.5458 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.9184
test: loss = 0.6643 | acc = 0.7500 | precision = 0.7143 | recall = 0.7692 | f1 = 0.7407 | auc = 0.7077

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7150
val 1: loss = 0.6586 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7347
train 2: loss = 0.6131
val 2: loss = 0.6431 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 3: loss = 0.5450
val 3: loss = 0.6288 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
train 4: loss = 0.4944
val 4: loss = 0.6259 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
train 5: loss = 0.4400
val 5: loss = 0.6246 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 6: loss = 0.4181
val 6: loss = 0.6100 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
train 7: loss = 0.3779
val 7: loss = 0.6393 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 8: loss = 0.3648
val 8: loss = 0.6476 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7755
train 9: loss = 0.3470
val 9: loss = 0.6512 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7755
train 10: loss = 0.3449
val 10: loss = 0.6510 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7755
test: loss = 0.6055 | acc = 0.6786 | precision = 0.7000 | recall = 0.5385 | f1 = 0.6087 | auc = 0.7949

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7160
val 1: loss = 0.6702 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7143
train 2: loss = 0.6155
val 2: loss = 0.6430 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7551
train 3: loss = 0.5555
val 3: loss = 0.6256 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 4: loss = 0.5085
val 4: loss = 0.6126 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 5: loss = 0.4697
val 5: loss = 0.6046 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 6: loss = 0.4337
val 6: loss = 0.5858 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 7: loss = 0.4094
val 7: loss = 0.6187 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 8: loss = 0.3850
val 8: loss = 0.5986 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
train 9: loss = 0.3733
val 9: loss = 0.5956 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
train 10: loss = 0.3669
val 10: loss = 0.5956 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8163
test: loss = 0.5879 | acc = 0.7143 | precision = 0.7333 | recall = 0.7333 | f1 = 0.7333 | auc = 0.8051

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7086
val 1: loss = 0.6759 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7347
train 2: loss = 0.6057
val 2: loss = 0.6269 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8367
train 3: loss = 0.5298
val 3: loss = 0.5856 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 4: loss = 0.4778
val 4: loss = 0.5828 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 5: loss = 0.4294
val 5: loss = 0.5484 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 6: loss = 0.3966
val 6: loss = 0.5227 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 7: loss = 0.3664
val 7: loss = 0.5330 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
train 8: loss = 0.3347
val 8: loss = 0.5182 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8776
train 9: loss = 0.3239
val 9: loss = 0.5117 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8776
train 10: loss = 0.3101
val 10: loss = 0.5231 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
test: loss = 0.6359 | acc = 0.6071 | precision = 0.5714 | recall = 0.6154 | f1 = 0.5926 | auc = 0.7077

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7012
val 1: loss = 0.7008 | acc = 0.5000 | precision = 0.6250 | recall = 0.5556 | f1 = 0.5882 | auc = 0.4667
train 2: loss = 0.6124
val 2: loss = 0.7001 | acc = 0.5714 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.6667
train 3: loss = 0.5543
val 3: loss = 0.6378 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7333
train 4: loss = 0.4972
val 4: loss = 0.6188 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7556
train 5: loss = 0.4533
val 5: loss = 0.6140 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7333
train 6: loss = 0.4130
val 6: loss = 0.6253 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7556
train 7: loss = 0.3882
val 7: loss = 0.6202 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7556
train 8: loss = 0.3649
val 8: loss = 0.6151 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7778
train 9: loss = 0.3495
val 9: loss = 0.6135 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7778
train 10: loss = 0.3425
val 10: loss = 0.6112 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.7778
test: loss = 0.5335 | acc = 0.7407 | precision = 0.7778 | recall = 0.5833 | f1 = 0.6667 | auc = 0.8667

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6966
val 1: loss = 0.6165 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8776
train 2: loss = 0.5645
val 2: loss = 0.5773 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 3: loss = 0.4987
val 3: loss = 0.5772 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 4: loss = 0.4442
val 4: loss = 0.5844 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 5: loss = 0.4034
val 5: loss = 0.5584 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 6: loss = 0.3736
val 6: loss = 0.5654 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 7: loss = 0.3456
val 7: loss = 0.5866 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8571
train 8: loss = 0.3300
val 8: loss = 0.5720 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
train 9: loss = 0.3187
val 9: loss = 0.5722 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8571
train 10: loss = 0.3106
val 10: loss = 0.5761 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8571
test: loss = 0.5780 | acc = 0.6786 | precision = 0.6429 | recall = 0.6923 | f1 = 0.6667 | auc = 0.7846

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6951
val 1: loss = 0.6300 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7959
train 2: loss = 0.5876
val 2: loss = 0.6010 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7959
train 3: loss = 0.5209
val 3: loss = 0.6098 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 4: loss = 0.4754
val 4: loss = 0.6029 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 5: loss = 0.4288
val 5: loss = 0.5763 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 6: loss = 0.3957
val 6: loss = 0.5778 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 7: loss = 0.3724
val 7: loss = 0.6029 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 8: loss = 0.3510
val 8: loss = 0.5956 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 9: loss = 0.3381
val 9: loss = 0.5984 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 10: loss = 0.3271
val 10: loss = 0.6025 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
test: loss = 0.5385 | acc = 0.8214 | precision = 0.7857 | recall = 0.8462 | f1 = 0.8148 | auc = 0.8564

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6979
val 1: loss = 0.6228 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7959
train 2: loss = 0.5909
val 2: loss = 0.5851 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 3: loss = 0.5195
val 3: loss = 0.5666 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8367
train 4: loss = 0.4732
val 4: loss = 0.5988 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
train 5: loss = 0.4325
val 5: loss = 0.5671 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 6: loss = 0.3980
val 6: loss = 0.5820 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 7: loss = 0.3740
val 7: loss = 0.6174 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 8: loss = 0.3520
val 8: loss = 0.6073 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 9: loss = 0.3411
val 9: loss = 0.6140 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 10: loss = 0.3330
val 10: loss = 0.6192 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
test: loss = 0.5604 | acc = 0.8214 | precision = 0.8125 | recall = 0.8667 | f1 = 0.8387 | auc = 0.8564

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6898
val 1: loss = 0.6127 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 2: loss = 0.5672
val 2: loss = 0.5694 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 3: loss = 0.4939
val 3: loss = 0.5556 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8367
train 4: loss = 0.4493
val 4: loss = 0.5628 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 5: loss = 0.3974
val 5: loss = 0.5437 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 6: loss = 0.3707
val 6: loss = 0.5615 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
train 7: loss = 0.3442
val 7: loss = 0.5898 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
train 8: loss = 0.3280
val 8: loss = 0.5732 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
train 9: loss = 0.3127
val 9: loss = 0.5631 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
train 10: loss = 0.3048
val 10: loss = 0.5643 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8571
test: loss = 0.6473 | acc = 0.6429 | precision = 0.5882 | recall = 0.7692 | f1 = 0.6667 | auc = 0.7385

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7000
val 1: loss = 0.6683 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.6444
train 2: loss = 0.5734
val 2: loss = 0.6298 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.8222
train 3: loss = 0.5093
val 3: loss = 0.6536 | acc = 0.7857 | precision = 0.8750 | recall = 0.7778 | f1 = 0.8235 | auc = 0.8222
train 4: loss = 0.4551
val 4: loss = 0.6540 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.8000
train 5: loss = 0.4073
val 5: loss = 0.6429 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.8000
train 6: loss = 0.3741
val 6: loss = 0.6701 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.7556
train 7: loss = 0.3436
val 7: loss = 0.7013 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.7333
train 8: loss = 0.3288
val 8: loss = 0.6939 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.7333
train 9: loss = 0.3094
val 9: loss = 0.6989 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.7333
train 10: loss = 0.3058
val 10: loss = 0.7039 | acc = 0.7143 | precision = 0.7778 | recall = 0.7778 | f1 = 0.7778 | auc = 0.7333
test: loss = 0.5988 | acc = 0.7778 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8333

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6946
val 1: loss = 0.6932 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5714
train 2: loss = 0.6916
val 2: loss = 0.6934 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 3: loss = 0.6911
val 3: loss = 0.6931 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 4: loss = 0.6916
val 4: loss = 0.6920 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 5: loss = 0.6877
val 5: loss = 0.6925 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 6: loss = 0.6878
val 6: loss = 0.6919 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 7: loss = 0.6865
val 7: loss = 0.6923 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 8: loss = 0.6866
val 8: loss = 0.6922 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 9: loss = 0.6857
val 9: loss = 0.6922 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 10: loss = 0.6856
val 10: loss = 0.6922 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
test: loss = 0.6880 | acc = 0.5357 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7949

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6962
val 1: loss = 0.6937 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 2: loss = 0.6922
val 2: loss = 0.6932 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 3: loss = 0.6916
val 3: loss = 0.6931 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 4: loss = 0.6929
val 4: loss = 0.6920 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 5: loss = 0.6884
val 5: loss = 0.6925 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 6: loss = 0.6883
val 6: loss = 0.6918 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 7: loss = 0.6872
val 7: loss = 0.6919 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 8: loss = 0.6866
val 8: loss = 0.6918 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 9: loss = 0.6861
val 9: loss = 0.6918 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 10: loss = 0.6860
val 10: loss = 0.6919 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
test: loss = 0.6864 | acc = 0.5357 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7897

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6928
val 1: loss = 0.6949 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 2: loss = 0.6884
val 2: loss = 0.6943 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 3: loss = 0.6878
val 3: loss = 0.6952 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 4: loss = 0.6867
val 4: loss = 0.6939 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5714
train 5: loss = 0.6861
val 5: loss = 0.6953 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 6: loss = 0.6845
val 6: loss = 0.6951 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 7: loss = 0.6844
val 7: loss = 0.6950 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 8: loss = 0.6834
val 8: loss = 0.6949 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 9: loss = 0.6825
val 9: loss = 0.6951 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 10: loss = 0.6823
val 10: loss = 0.6953 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
test: loss = 0.6963 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7333

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6932
val 1: loss = 0.6938 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 2: loss = 0.6912
val 2: loss = 0.6923 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 3: loss = 0.6901
val 3: loss = 0.6923 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 4: loss = 0.6894
val 4: loss = 0.6919 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 5: loss = 0.6881
val 5: loss = 0.6918 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 6: loss = 0.6872
val 6: loss = 0.6917 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 7: loss = 0.6865
val 7: loss = 0.6915 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 8: loss = 0.6859
val 8: loss = 0.6913 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 9: loss = 0.6847
val 9: loss = 0.6914 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 10: loss = 0.6845
val 10: loss = 0.6914 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
test: loss = 0.6892 | acc = 0.5357 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6308

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6933
val 1: loss = 0.7013 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4222
train 2: loss = 0.6907
val 2: loss = 0.7035 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5111
train 3: loss = 0.6904
val 3: loss = 0.7073 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 4: loss = 0.6886
val 4: loss = 0.7139 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 5: loss = 0.6865
val 5: loss = 0.7165 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 6: loss = 0.6862
val 6: loss = 0.7152 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 7: loss = 0.6853
val 7: loss = 0.7165 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 8: loss = 0.6848
val 8: loss = 0.7158 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 9: loss = 0.6843
val 9: loss = 0.7159 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 10: loss = 0.6842
val 10: loss = 0.7163 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
test: loss = 0.6886 | acc = 0.5556 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7444

seed = 2048
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7259
val 1: loss = 0.6483 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.7500
train 2: loss = 0.6163
val 2: loss = 0.6259 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7917
train 3: loss = 0.5457
val 3: loss = 0.6120 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8125
train 4: loss = 0.4908
val 4: loss = 0.5899 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8125
train 5: loss = 0.4455
val 5: loss = 0.5851 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
train 6: loss = 0.4067
val 6: loss = 0.5788 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7917
train 7: loss = 0.3761
val 7: loss = 0.5707 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8125
train 8: loss = 0.3579
val 8: loss = 0.5684 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 9: loss = 0.3459
val 9: loss = 0.5635 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
train 10: loss = 0.3371
val 10: loss = 0.5639 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8333
test: loss = 0.7156 | acc = 0.6071 | precision = 0.7273 | recall = 0.5000 | f1 = 0.5926 | auc = 0.5990

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7131
val 1: loss = 0.6617 | acc = 0.5000 | precision = 0.3333 | recall = 0.1667 | f1 = 0.2222 | auc = 0.6250
train 2: loss = 0.6185
val 2: loss = 0.6503 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.6875
train 3: loss = 0.5483
val 3: loss = 0.6408 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7083
train 4: loss = 0.4948
val 4: loss = 0.6569 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7083
train 5: loss = 0.4474
val 5: loss = 0.6390 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.6667
train 6: loss = 0.4122
val 6: loss = 0.6424 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6667
train 7: loss = 0.3826
val 7: loss = 0.6440 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6667
train 8: loss = 0.3596
val 8: loss = 0.6581 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6458
train 9: loss = 0.3493
val 9: loss = 0.6568 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6458
train 10: loss = 0.3367
val 10: loss = 0.6610 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6458
test: loss = 0.5795 | acc = 0.6071 | precision = 0.6250 | recall = 0.6667 | f1 = 0.6452 | auc = 0.7897

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7102
val 1: loss = 0.6665 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.6250
train 2: loss = 0.6182
val 2: loss = 0.6728 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.6667
train 3: loss = 0.5398
val 3: loss = 0.6749 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.6042
train 4: loss = 0.4810
val 4: loss = 0.6941 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.5625
train 5: loss = 0.4317
val 5: loss = 0.6837 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.5833
train 6: loss = 0.3904
val 6: loss = 0.6711 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5625
train 7: loss = 0.3574
val 7: loss = 0.6802 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6042
train 8: loss = 0.3412
val 8: loss = 0.6918 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6042
train 9: loss = 0.3246
val 9: loss = 0.6786 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6458
train 10: loss = 0.3198
val 10: loss = 0.6784 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6458
test: loss = 0.6755 | acc = 0.5714 | precision = 0.5000 | recall = 0.3333 | f1 = 0.4000 | auc = 0.6458

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7191
val 1: loss = 0.6710 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.7778
train 2: loss = 0.6161
val 2: loss = 0.6947 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.7333
train 3: loss = 0.5371
val 3: loss = 0.6901 | acc = 0.5000 | precision = 0.4000 | recall = 0.8000 | f1 = 0.5333 | auc = 0.7778
train 4: loss = 0.4840
val 4: loss = 0.7126 | acc = 0.5000 | precision = 0.4000 | recall = 0.8000 | f1 = 0.5333 | auc = 0.6667
train 5: loss = 0.4326
val 5: loss = 0.6683 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.6222
train 6: loss = 0.3913
val 6: loss = 0.6712 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6667
train 7: loss = 0.3676
val 7: loss = 0.6676 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6667
train 8: loss = 0.3419
val 8: loss = 0.6801 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6444
train 9: loss = 0.3308
val 9: loss = 0.6730 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6667
train 10: loss = 0.3233
val 10: loss = 0.6765 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6667
test: loss = 0.6463 | acc = 0.7143 | precision = 0.5882 | recall = 0.9091 | f1 = 0.7143 | auc = 0.7968

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7123
val 1: loss = 0.6917 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.5778
train 2: loss = 0.6170
val 2: loss = 0.6470 | acc = 0.5000 | precision = 0.2500 | recall = 0.2000 | f1 = 0.2222 | auc = 0.6444
train 3: loss = 0.5461
val 3: loss = 0.6858 | acc = 0.5714 | precision = 0.4444 | recall = 0.8000 | f1 = 0.5714 | auc = 0.7111
train 4: loss = 0.4910
val 4: loss = 0.6466 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6667
train 5: loss = 0.4389
val 5: loss = 0.6411 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 6: loss = 0.3934
val 6: loss = 0.6469 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6667
train 7: loss = 0.3662
val 7: loss = 0.6615 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6444
train 8: loss = 0.3431
val 8: loss = 0.6648 | acc = 0.5714 | precision = 0.3333 | recall = 0.2000 | f1 = 0.2500 | auc = 0.6444
train 9: loss = 0.3366
val 9: loss = 0.6651 | acc = 0.5714 | precision = 0.3333 | recall = 0.2000 | f1 = 0.2500 | auc = 0.6444
train 10: loss = 0.3233
val 10: loss = 0.6661 | acc = 0.5714 | precision = 0.3333 | recall = 0.2000 | f1 = 0.2500 | auc = 0.6444
test: loss = 0.6047 | acc = 0.6667 | precision = 0.6364 | recall = 0.5833 | f1 = 0.6087 | auc = 0.7667

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6811
val 1: loss = 0.5947 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7708
train 2: loss = 0.5607
val 2: loss = 0.5515 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 3: loss = 0.4946
val 3: loss = 0.5151 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
train 4: loss = 0.4450
val 4: loss = 0.4831 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.8958
train 5: loss = 0.4058
val 5: loss = 0.4641 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9583
train 6: loss = 0.3747
val 6: loss = 0.4621 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9375
train 7: loss = 0.3471
val 7: loss = 0.4534 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9375
train 8: loss = 0.3248
val 8: loss = 0.4461 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9375
train 9: loss = 0.3142
val 9: loss = 0.4479 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9375
train 10: loss = 0.3101
val 10: loss = 0.4464 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9375
test: loss = 0.7518 | acc = 0.4643 | precision = 0.5455 | recall = 0.3750 | f1 = 0.4444 | auc = 0.6042

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6947
val 1: loss = 0.6725 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.5625
train 2: loss = 0.5875
val 2: loss = 0.6555 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6458
train 3: loss = 0.5396
val 3: loss = 0.6351 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.6458
train 4: loss = 0.4876
val 4: loss = 0.6162 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.6875
train 5: loss = 0.4477
val 5: loss = 0.6132 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.6667
train 6: loss = 0.4131
val 6: loss = 0.6013 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7083
train 7: loss = 0.3877
val 7: loss = 0.5979 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7083
train 8: loss = 0.3649
val 8: loss = 0.5964 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7292
train 9: loss = 0.3518
val 9: loss = 0.5962 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7292
train 10: loss = 0.3544
val 10: loss = 0.5949 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7292
test: loss = 0.5026 | acc = 0.7500 | precision = 0.7222 | recall = 0.8667 | f1 = 0.7879 | auc = 0.8667

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6839
val 1: loss = 0.7178 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.5208
train 2: loss = 0.5785
val 2: loss = 0.6962 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6458
train 3: loss = 0.5194
val 3: loss = 0.6825 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6250
train 4: loss = 0.4679
val 4: loss = 0.6694 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6667
train 5: loss = 0.4277
val 5: loss = 0.6593 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6667
train 6: loss = 0.3932
val 6: loss = 0.6532 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6667
train 7: loss = 0.3744
val 7: loss = 0.6458 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6667
train 8: loss = 0.3479
val 8: loss = 0.6395 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6875
train 9: loss = 0.3351
val 9: loss = 0.6420 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6458
train 10: loss = 0.3296
val 10: loss = 0.6416 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6458
test: loss = 0.5437 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8021

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6842
val 1: loss = 0.6761 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.6444
train 2: loss = 0.5650
val 2: loss = 0.6644 | acc = 0.5000 | precision = 0.3750 | recall = 0.6000 | f1 = 0.4615 | auc = 0.6889
train 3: loss = 0.4966
val 3: loss = 0.6314 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6889
train 4: loss = 0.4459
val 4: loss = 0.6502 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.6889
train 5: loss = 0.3998
val 5: loss = 0.6617 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7333
train 6: loss = 0.3595
val 6: loss = 0.6395 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7111
train 7: loss = 0.3263
val 7: loss = 0.6343 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7333
train 8: loss = 0.3106
val 8: loss = 0.6413 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7111
train 9: loss = 0.2934
val 9: loss = 0.6279 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7556
train 10: loss = 0.2849
val 10: loss = 0.6330 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.7333
test: loss = 0.5896 | acc = 0.6786 | precision = 0.5625 | recall = 0.8182 | f1 = 0.6667 | auc = 0.7433

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6914
val 1: loss = 0.6774 | acc = 0.5714 | precision = 0.3333 | recall = 0.2000 | f1 = 0.2500 | auc = 0.6222
train 2: loss = 0.5821
val 2: loss = 0.6578 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6667
train 3: loss = 0.5212
val 3: loss = 0.6337 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6889
train 4: loss = 0.4712
val 4: loss = 0.6268 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.7333
train 5: loss = 0.4141
val 5: loss = 0.6264 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.7556
train 6: loss = 0.3826
val 6: loss = 0.6262 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7556
train 7: loss = 0.3502
val 7: loss = 0.6372 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7111
train 8: loss = 0.3269
val 8: loss = 0.6285 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7556
train 9: loss = 0.3100
val 9: loss = 0.6317 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7556
train 10: loss = 0.3052
val 10: loss = 0.6346 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.7556
test: loss = 0.5889 | acc = 0.7407 | precision = 0.7273 | recall = 0.6667 | f1 = 0.6957 | auc = 0.7944

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6951
val 1: loss = 0.6887 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 2: loss = 0.6903
val 2: loss = 0.6867 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 3: loss = 0.6893
val 3: loss = 0.6835 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 4: loss = 0.6868
val 4: loss = 0.6833 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 5: loss = 0.6861
val 5: loss = 0.6820 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 6: loss = 0.6850
val 6: loss = 0.6820 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 7: loss = 0.6855
val 7: loss = 0.6822 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 8: loss = 0.6839
val 8: loss = 0.6818 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 9: loss = 0.6835
val 9: loss = 0.6816 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 10: loss = 0.6833
val 10: loss = 0.6816 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
test: loss = 0.7059 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6354

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6959
val 1: loss = 0.6901 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 2: loss = 0.6913
val 2: loss = 0.6874 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 3: loss = 0.6930
val 3: loss = 0.6849 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 4: loss = 0.6889
val 4: loss = 0.6855 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 5: loss = 0.6886
val 5: loss = 0.6840 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 6: loss = 0.6874
val 6: loss = 0.6842 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 7: loss = 0.6878
val 7: loss = 0.6844 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 8: loss = 0.6864
val 8: loss = 0.6842 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 9: loss = 0.6859
val 9: loss = 0.6840 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 10: loss = 0.6858
val 10: loss = 0.6841 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
test: loss = 0.6965 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7487

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6976
val 1: loss = 0.6937 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7083
train 2: loss = 0.6941
val 2: loss = 0.6903 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 3: loss = 0.6941
val 3: loss = 0.6897 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 4: loss = 0.6915
val 4: loss = 0.6908 | acc = 0.5714 | precision = 0.5000 | recall = 0.3333 | f1 = 0.4000 | auc = 0.6250
train 5: loss = 0.6907
val 5: loss = 0.6897 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.6042
train 6: loss = 0.6897
val 6: loss = 0.6906 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.6042
train 7: loss = 0.6893
val 7: loss = 0.6903 | acc = 0.5714 | precision = 0.5000 | recall = 0.3333 | f1 = 0.4000 | auc = 0.6042
train 8: loss = 0.6889
val 8: loss = 0.6904 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.6042
train 9: loss = 0.6880
val 9: loss = 0.6900 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.6042
train 10: loss = 0.6879
val 10: loss = 0.6902 | acc = 0.5714 | precision = 0.5000 | recall = 0.3333 | f1 = 0.4000 | auc = 0.6042
test: loss = 0.6893 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7448

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6939
val 1: loss = 0.6970 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7333
train 2: loss = 0.6924
val 2: loss = 0.6968 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7333
train 3: loss = 0.6923
val 3: loss = 0.7004 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 4: loss = 0.6916
val 4: loss = 0.6988 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.8000
train 5: loss = 0.6901
val 5: loss = 0.7001 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.8222
train 6: loss = 0.6883
val 6: loss = 0.7026 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 7: loss = 0.6877
val 7: loss = 0.7006 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 8: loss = 0.6875
val 8: loss = 0.7019 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 9: loss = 0.6869
val 9: loss = 0.7002 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 10: loss = 0.6870
val 10: loss = 0.7014 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
test: loss = 0.6961 | acc = 0.3929 | precision = 0.3929 | recall = 1.0000 | f1 = 0.5641 | auc = 0.6150

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6964
val 1: loss = 0.6937 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 2: loss = 0.6939
val 2: loss = 0.6868 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7333
train 3: loss = 0.6936
val 3: loss = 0.6931 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.7556
train 4: loss = 0.6921
val 4: loss = 0.6904 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.7556
train 5: loss = 0.6914
val 5: loss = 0.6922 | acc = 0.5714 | precision = 0.4545 | recall = 1.0000 | f1 = 0.6250 | auc = 0.7556
train 6: loss = 0.6903
val 6: loss = 0.6888 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7333
train 7: loss = 0.6897
val 7: loss = 0.6901 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.7333
train 8: loss = 0.6891
val 8: loss = 0.6910 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.7333
train 9: loss = 0.6887
val 9: loss = 0.6900 | acc = 0.7143 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.7333
train 10: loss = 0.6885
val 10: loss = 0.6903 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.7333
test: loss = 0.6896 | acc = 0.5556 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7056

extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7018
val 1: loss = 0.6228 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 1.0000
train 2: loss = 0.6110
val 2: loss = 0.6076 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9375
train 3: loss = 0.5454
val 3: loss = 0.5672 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.8750
train 4: loss = 0.4853
val 4: loss = 0.5644 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9583
train 5: loss = 0.4342
val 5: loss = 0.5609 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9792
train 6: loss = 0.3988
val 6: loss = 0.5632 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9792
train 7: loss = 0.3729
val 7: loss = 0.5575 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.9792
train 8: loss = 0.3603
val 8: loss = 0.5543 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9792
test: loss = 0.6347 | acc = 0.6429 | precision = 0.6471 | recall = 0.7333 | f1 = 0.6875 | auc = 0.7077

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6899
val 1: loss = 0.6514 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8367
train 2: loss = 0.5984
val 2: loss = 0.6277 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 3: loss = 0.5326
val 3: loss = 0.5962 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.8776
train 4: loss = 0.4794
val 4: loss = 0.5893 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.8367
train 5: loss = 0.4376
val 5: loss = 0.5948 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
train 6: loss = 0.4057
val 6: loss = 0.5888 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.8367
train 7: loss = 0.3763
val 7: loss = 0.5913 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8163
train 8: loss = 0.3649
val 8: loss = 0.5961 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7959
test: loss = 0.6459 | acc = 0.7143 | precision = 0.6364 | recall = 0.6364 | f1 = 0.6364 | auc = 0.7166

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6865
val 1: loss = 0.6768 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.6667
train 2: loss = 0.6055
val 2: loss = 0.6445 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
train 3: loss = 0.5356
val 3: loss = 0.6596 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.7917
train 4: loss = 0.4889
val 4: loss = 0.6335 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 5: loss = 0.4426
val 5: loss = 0.6601 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 6: loss = 0.4201
val 6: loss = 0.6531 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7708
train 7: loss = 0.3941
val 7: loss = 0.6598 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 8: loss = 0.3831
val 8: loss = 0.6647 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
test: loss = 0.6063 | acc = 0.7143 | precision = 0.7500 | recall = 0.6429 | f1 = 0.6923 | auc = 0.8061

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6898
val 1: loss = 0.6974 | acc = 0.3571 | precision = 0.4000 | recall = 0.2500 | f1 = 0.3077 | auc = 0.5833
train 2: loss = 0.5969
val 2: loss = 0.6734 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.6667
train 3: loss = 0.5121
val 3: loss = 0.6978 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7292
train 4: loss = 0.4559
val 4: loss = 0.7166 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.6042
train 5: loss = 0.4052
val 5: loss = 0.7112 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6458
train 6: loss = 0.3818
val 6: loss = 0.7449 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.5833
train 7: loss = 0.3438
val 7: loss = 0.7652 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.5625
train 8: loss = 0.3308
val 8: loss = 0.7655 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.5625
test: loss = 0.6141 | acc = 0.6786 | precision = 0.8000 | recall = 0.5333 | f1 = 0.6400 | auc = 0.8564

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6892
val 1: loss = 0.6684 | acc = 0.6429 | precision = 0.6364 | recall = 0.8750 | f1 = 0.7368 | auc = 0.7083
train 2: loss = 0.5918
val 2: loss = 0.6755 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6458
train 3: loss = 0.5296
val 3: loss = 0.6808 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.6458
train 4: loss = 0.4671
val 4: loss = 0.7528 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.5833
train 5: loss = 0.4260
val 5: loss = 0.7374 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.5625
train 6: loss = 0.3912
val 6: loss = 0.7662 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.5000
train 7: loss = 0.3657
val 7: loss = 0.7827 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.5208
train 8: loss = 0.3547
val 8: loss = 0.7863 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.5208
test: loss = 0.6649 | acc = 0.5556 | precision = 0.4762 | recall = 0.9091 | f1 = 0.6250 | auc = 0.7727

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7110
val 1: loss = 0.6364 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8333
train 2: loss = 0.5981
val 2: loss = 0.6054 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8958
train 3: loss = 0.5237
val 3: loss = 0.5951 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8750
train 4: loss = 0.4718
val 4: loss = 0.5853 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8750
train 5: loss = 0.4304
val 5: loss = 0.5944 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.8542
train 6: loss = 0.4070
val 6: loss = 0.5594 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8750
train 7: loss = 0.3863
val 7: loss = 0.5687 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8542
train 8: loss = 0.3739
val 8: loss = 0.5692 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8542
test: loss = 0.5835 | acc = 0.7857 | precision = 0.8462 | recall = 0.7333 | f1 = 0.7857 | auc = 0.8667

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7067
val 1: loss = 0.6234 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 2: loss = 0.5890
val 2: loss = 0.5829 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8980
train 3: loss = 0.5139
val 3: loss = 0.5554 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
train 4: loss = 0.4591
val 4: loss = 0.5431 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8980
train 5: loss = 0.4132
val 5: loss = 0.5354 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8980
train 6: loss = 0.3843
val 6: loss = 0.5283 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.9184
train 7: loss = 0.3649
val 7: loss = 0.5279 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.9184
train 8: loss = 0.3524
val 8: loss = 0.5272 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.9184
test: loss = 0.6217 | acc = 0.6071 | precision = 0.5000 | recall = 0.7273 | f1 = 0.5926 | auc = 0.7647

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7124
val 1: loss = 0.5998 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9167
train 2: loss = 0.6010
val 2: loss = 0.5615 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.9375
train 3: loss = 0.5303
val 3: loss = 0.5408 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.9167
train 4: loss = 0.4858
val 4: loss = 0.5287 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.9167
train 5: loss = 0.4494
val 5: loss = 0.5222 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 6: loss = 0.4238
val 6: loss = 0.5175 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 7: loss = 0.4077
val 7: loss = 0.5123 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 8: loss = 0.3979
val 8: loss = 0.5116 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
test: loss = 0.5505 | acc = 0.7500 | precision = 0.7333 | recall = 0.7857 | f1 = 0.7586 | auc = 0.8520

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7121
val 1: loss = 0.6394 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.8542
train 2: loss = 0.5839
val 2: loss = 0.6204 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8542
train 3: loss = 0.5095
val 3: loss = 0.6337 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8542
train 4: loss = 0.4701
val 4: loss = 0.5920 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8750
train 5: loss = 0.4251
val 5: loss = 0.5660 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8750
train 6: loss = 0.3949
val 6: loss = 0.5877 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8958
train 7: loss = 0.3775
val 7: loss = 0.5755 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8750
train 8: loss = 0.3656
val 8: loss = 0.5704 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8750
test: loss = 0.6184 | acc = 0.5714 | precision = 0.6667 | recall = 0.4000 | f1 = 0.5000 | auc = 0.8051

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7162
val 1: loss = 0.6770 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.6667
train 2: loss = 0.6036
val 2: loss = 0.6347 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 3: loss = 0.5512
val 3: loss = 0.6276 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7500
train 4: loss = 0.4810
val 4: loss = 0.6887 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7500
train 5: loss = 0.4486
val 5: loss = 0.6412 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.7708
train 6: loss = 0.4163
val 6: loss = 0.6448 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.7708
train 7: loss = 0.3955
val 7: loss = 0.6490 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.7708
train 8: loss = 0.3879
val 8: loss = 0.6505 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.7708
test: loss = 0.5721 | acc = 0.7407 | precision = 0.6250 | recall = 0.9091 | f1 = 0.7407 | auc = 0.9261

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6929
val 1: loss = 0.6857 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9792
train 2: loss = 0.6923
val 2: loss = 0.6847 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9583
train 3: loss = 0.6904
val 3: loss = 0.6840 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8958
train 4: loss = 0.6899
val 4: loss = 0.6838 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8750
train 5: loss = 0.6887
val 5: loss = 0.6832 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8750
train 6: loss = 0.6876
val 6: loss = 0.6827 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 7: loss = 0.6875
val 7: loss = 0.6827 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 8: loss = 0.6871
val 8: loss = 0.6826 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8750
test: loss = 0.6978 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6821

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6950
val 1: loss = 0.6911 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 2: loss = 0.6950
val 2: loss = 0.6906 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8367
train 3: loss = 0.6924
val 3: loss = 0.6902 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8980
train 4: loss = 0.6916
val 4: loss = 0.6898 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.9184
train 5: loss = 0.6913
val 5: loss = 0.6896 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8776
train 6: loss = 0.6900
val 6: loss = 0.6894 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8776
train 7: loss = 0.6897
val 7: loss = 0.6893 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8776
train 8: loss = 0.6893
val 8: loss = 0.6893 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8776
test: loss = 0.6890 | acc = 0.6071 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8075

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6942
val 1: loss = 0.6878 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9167
train 2: loss = 0.6927
val 2: loss = 0.6856 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9167
train 3: loss = 0.6927
val 3: loss = 0.6864 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8958
train 4: loss = 0.6905
val 4: loss = 0.6843 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9167
train 5: loss = 0.6902
val 5: loss = 0.6840 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8958
train 6: loss = 0.6899
val 6: loss = 0.6837 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8958
train 7: loss = 0.6891
val 7: loss = 0.6835 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8958
train 8: loss = 0.6888
val 8: loss = 0.6836 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8958
test: loss = 0.6916 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8265

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6935
val 1: loss = 0.6998 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 2: loss = 0.6886
val 2: loss = 0.7049 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 3: loss = 0.6889
val 3: loss = 0.7047 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 4: loss = 0.6859
val 4: loss = 0.7113 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 5: loss = 0.6845
val 5: loss = 0.7108 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 6: loss = 0.6843
val 6: loss = 0.7111 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 7: loss = 0.6835
val 7: loss = 0.7114 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 8: loss = 0.6830
val 8: loss = 0.7114 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
test: loss = 0.6976 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5846

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6938
val 1: loss = 0.6957 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
train 2: loss = 0.6924
val 2: loss = 0.6965 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 3: loss = 0.6959
val 3: loss = 0.6970 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 4: loss = 0.6921
val 4: loss = 0.6960 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 5: loss = 0.6906
val 5: loss = 0.6963 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 6: loss = 0.6894
val 6: loss = 0.6966 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 7: loss = 0.6888
val 7: loss = 0.6966 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 8: loss = 0.6884
val 8: loss = 0.6968 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
test: loss = 0.6895 | acc = 0.5926 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5909

