seed = 2024
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9612
val 1: loss = 0.5750 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9556
train 2: loss = 0.6412
val 2: loss = 0.4711 | acc = 0.7143 | precision = 1.0000 | recall = 0.2000 | f1 = 0.3333 | auc = 0.8444
train 3: loss = 0.4720
val 3: loss = 0.4401 | acc = 0.8571 | precision = 0.7143 | recall = 1.0000 | f1 = 0.8333 | auc = 0.8889
train 4: loss = 0.3260
val 4: loss = 0.6321 | acc = 0.6429 | precision = 0.5000 | recall = 0.8000 | f1 = 0.6154 | auc = 0.8667
train 5: loss = 0.1640
val 5: loss = 1.6285 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.8667
train 6: loss = 0.1232
val 6: loss = 0.4628 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.8889
train 7: loss = 0.0651
val 7: loss = 0.4622 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9333
train 8: loss = 0.0096
val 8: loss = 0.5563 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9333
train 9: loss = 0.0027
val 9: loss = 0.5762 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9333
train 10: loss = 0.0020
val 10: loss = 0.5877 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9333
test: loss = 0.6878 | acc = 0.6786 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.7385

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8929
val 1: loss = 0.4707 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9750
train 2: loss = 0.5953
val 2: loss = 0.4370 | acc = 0.7143 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.9000
train 3: loss = 0.5152
val 3: loss = 0.7136 | acc = 0.6429 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.9250
train 4: loss = 0.3251
val 4: loss = 0.2505 | acc = 0.9286 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9000
train 5: loss = 0.3239
val 5: loss = 0.3912 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.9250
train 6: loss = 0.2105
val 6: loss = 1.3127 | acc = 0.7143 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7750
train 7: loss = 0.0987
val 7: loss = 1.3159 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.9000
train 8: loss = 0.0286
val 8: loss = 1.0843 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8500
train 9: loss = 0.0275
val 9: loss = 1.0618 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8500
train 10: loss = 0.0130
val 10: loss = 1.1935 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8750
test: loss = 1.1370 | acc = 0.5357 | precision = 0.6250 | recall = 0.3333 | f1 = 0.4348 | auc = 0.6513

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8788
val 1: loss = 0.6809 | acc = 0.5714 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 0.7750
train 2: loss = 0.6768
val 2: loss = 0.5461 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8000
train 3: loss = 0.4756
val 3: loss = 0.6352 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7250
train 4: loss = 0.2940
val 4: loss = 0.8929 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.7750
train 5: loss = 0.1855
val 5: loss = 1.0413 | acc = 0.7143 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.7750
train 6: loss = 0.0716
val 6: loss = 1.3449 | acc = 0.7143 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7000
train 7: loss = 0.1064
val 7: loss = 1.3250 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7500
train 8: loss = 0.0096
val 8: loss = 1.3827 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7500
train 9: loss = 0.0045
val 9: loss = 1.4471 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7500
train 10: loss = 0.0036
val 10: loss = 1.4752 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7500
test: loss = 0.8509 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7135

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0493
val 1: loss = 0.7642 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8571
train 2: loss = 0.7087
val 2: loss = 0.6613 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8980
train 3: loss = 0.4805
val 3: loss = 0.5107 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7959
train 4: loss = 0.4285
val 4: loss = 0.8358 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8367
train 5: loss = 0.2401
val 5: loss = 0.6860 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.8163
train 6: loss = 0.2420
val 6: loss = 0.5641 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8776
train 7: loss = 0.0524
val 7: loss = 0.9562 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8163
train 8: loss = 0.0112
val 8: loss = 1.1119 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8163
train 9: loss = 0.0052
val 9: loss = 1.1555 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8163
train 10: loss = 0.0033
val 10: loss = 1.1787 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8163
test: loss = 0.5590 | acc = 0.7500 | precision = 0.6000 | recall = 0.6667 | f1 = 0.6316 | auc = 0.7485

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 1.0010
val 1: loss = 0.6248 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9167
train 2: loss = 0.6334
val 2: loss = 0.4920 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8958
train 3: loss = 0.5552
val 3: loss = 0.5160 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8958
train 4: loss = 0.3193
val 4: loss = 0.5001 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 5: loss = 0.1419
val 5: loss = 1.1707 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8958
train 6: loss = 0.0738
val 6: loss = 0.4986 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 1.0000
train 7: loss = 0.0126
val 7: loss = 0.4149 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 8: loss = 0.0007
val 8: loss = 0.4563 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 9: loss = 0.0005
val 9: loss = 0.4885 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 10: loss = 0.0004
val 10: loss = 0.4999 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
test: loss = 1.4427 | acc = 0.8148 | precision = 0.7500 | recall = 0.8182 | f1 = 0.7826 | auc = 0.8011

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9073
val 1: loss = 0.4289 | acc = 0.8571 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9556
train 2: loss = 0.6810
val 2: loss = 0.3733 | acc = 0.8571 | precision = 0.7143 | recall = 1.0000 | f1 = 0.8333 | auc = 1.0000
train 3: loss = 0.4970
val 3: loss = 0.4213 | acc = 0.7857 | precision = 0.6250 | recall = 1.0000 | f1 = 0.7692 | auc = 0.9333
train 4: loss = 0.3872
val 4: loss = 0.4045 | acc = 0.7857 | precision = 1.0000 | recall = 0.4000 | f1 = 0.5714 | auc = 0.8667
train 5: loss = 0.3006
val 5: loss = 0.3196 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.9333
train 6: loss = 0.2543
val 6: loss = 0.3602 | acc = 0.8571 | precision = 0.7143 | recall = 1.0000 | f1 = 0.8333 | auc = 0.9111
train 7: loss = 0.0702
val 7: loss = 0.4958 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9111
train 8: loss = 0.0206
val 8: loss = 0.7053 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.9556
train 9: loss = 0.0018
val 9: loss = 0.7931 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.9333
train 10: loss = 0.0012
val 10: loss = 0.8203 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.9333
test: loss = 0.6279 | acc = 0.7500 | precision = 0.9000 | recall = 0.6000 | f1 = 0.7200 | auc = 0.8359

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.9172
val 1: loss = 0.3713 | acc = 0.9286 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9750
train 2: loss = 0.6310
val 2: loss = 0.3151 | acc = 0.8571 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9750
train 3: loss = 0.5423
val 3: loss = 0.5023 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.9750
train 4: loss = 0.3616
val 4: loss = 0.2637 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9500
train 5: loss = 0.2761
val 5: loss = 0.2111 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 1.0000
train 6: loss = 0.2675
val 6: loss = 0.6329 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 1.0000
train 7: loss = 0.0914
val 7: loss = 0.3523 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9750
train 8: loss = 0.0207
val 8: loss = 0.6478 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 1.0000
train 9: loss = 0.0116
val 9: loss = 0.5554 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9750
train 10: loss = 0.0056
val 10: loss = 0.6284 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 1.0000
test: loss = 1.1539 | acc = 0.6071 | precision = 0.8333 | recall = 0.3333 | f1 = 0.4762 | auc = 0.7436

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8707
val 1: loss = 0.4390 | acc = 0.9286 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 1.0000
train 2: loss = 0.6481
val 2: loss = 0.5592 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.9000
train 3: loss = 0.5188
val 3: loss = 0.4108 | acc = 0.7857 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8250
train 4: loss = 0.3761
val 4: loss = 0.4172 | acc = 0.7857 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.8750
train 5: loss = 0.2072
val 5: loss = 0.6597 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8750
train 6: loss = 0.1933
val 6: loss = 1.1069 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.9000
train 7: loss = 0.0970
val 7: loss = 1.5101 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8250
train 8: loss = 0.0151
val 8: loss = 1.8047 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8250
train 9: loss = 0.0070
val 9: loss = 1.8043 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8500
train 10: loss = 0.0042
val 10: loss = 1.8139 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8250
test: loss = 0.8593 | acc = 0.5000 | precision = 1.0000 | recall = 0.1250 | f1 = 0.2222 | auc = 0.7031

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8768
val 1: loss = 0.5149 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9388
train 2: loss = 0.5934
val 2: loss = 0.5667 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.8980
train 3: loss = 0.4195
val 3: loss = 0.3370 | acc = 0.9286 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 0.9592
train 4: loss = 0.4091
val 4: loss = 0.6450 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.8163
train 5: loss = 0.3331
val 5: loss = 0.4898 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9184
train 6: loss = 0.1854
val 6: loss = 0.5980 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9184
train 7: loss = 0.1372
val 7: loss = 0.5843 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9184
test: loss = 0.4880 | acc = 0.7500 | precision = 0.6250 | recall = 0.5556 | f1 = 0.5882 | auc = 0.8421

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8935
val 1: loss = 0.4874 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 2: loss = 0.5646
val 2: loss = 0.5585 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8958
train 3: loss = 0.4449
val 3: loss = 0.3656 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9375
train 4: loss = 0.3731
val 4: loss = 0.4433 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9583
train 5: loss = 0.2428
val 5: loss = 1.5015 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.9167
train 6: loss = 0.2053
val 6: loss = 1.0370 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8958
train 7: loss = 0.0751
val 7: loss = 0.6157 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.8958
train 8: loss = 0.0134
val 8: loss = 0.7119 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 9: loss = 0.0041
val 9: loss = 0.7377 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
train 10: loss = 0.0032
val 10: loss = 0.7515 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9375
test: loss = 0.5490 | acc = 0.6667 | precision = 0.6000 | recall = 0.5455 | f1 = 0.5714 | auc = 0.7955

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8739
val 1: loss = 0.6745 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8444
train 2: loss = 0.7906
val 2: loss = 0.6694 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8222
train 3: loss = 0.7768
val 3: loss = 0.8518 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.8222
train 4: loss = 0.7518
val 4: loss = 0.6982 | acc = 0.4286 | precision = 0.3846 | recall = 1.0000 | f1 = 0.5556 | auc = 0.8222
train 5: loss = 0.7250
val 5: loss = 0.7136 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7778
train 6: loss = 0.7259
val 6: loss = 0.6436 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7333
train 7: loss = 0.6882
val 7: loss = 0.6309 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6889
train 8: loss = 0.6773
val 8: loss = 0.6615 | acc = 0.5714 | precision = 0.4444 | recall = 0.8000 | f1 = 0.5714 | auc = 0.7556
train 9: loss = 0.6256
val 9: loss = 0.7426 | acc = 0.5714 | precision = 0.4545 | recall = 1.0000 | f1 = 0.6250 | auc = 0.7556
train 10: loss = 0.5954
val 10: loss = 0.6295 | acc = 0.5714 | precision = 0.4444 | recall = 0.8000 | f1 = 0.5714 | auc = 0.7333
test: loss = 0.6503 | acc = 0.6071 | precision = 0.6000 | recall = 0.8000 | f1 = 0.6857 | auc = 0.7077

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8998
val 1: loss = 0.5982 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8750
train 2: loss = 0.8141
val 2: loss = 0.6051 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9250
train 3: loss = 0.7890
val 3: loss = 0.8337 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.9500
train 4: loss = 0.7412
val 4: loss = 0.6373 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9500
train 5: loss = 0.7356
val 5: loss = 0.6859 | acc = 0.6429 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.9500
train 6: loss = 0.7361
val 6: loss = 0.6973 | acc = 0.5000 | precision = 0.3636 | recall = 1.0000 | f1 = 0.5333 | auc = 0.9500
train 7: loss = 0.6949
val 7: loss = 0.6003 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8750
train 8: loss = 0.6562
val 8: loss = 0.7821 | acc = 0.4286 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 1.0000
train 9: loss = 0.6091
val 9: loss = 0.7555 | acc = 0.5714 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 1.0000
train 10: loss = 0.5604
val 10: loss = 0.6352 | acc = 0.5714 | precision = 0.4000 | recall = 1.0000 | f1 = 0.5714 | auc = 1.0000
test: loss = 0.7830 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6103

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8850
val 1: loss = 0.6295 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8500
train 2: loss = 0.8212
val 2: loss = 0.6552 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8000
train 3: loss = 0.7951
val 3: loss = 0.6318 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6500
train 4: loss = 0.7461
val 4: loss = 0.7214 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.6750
train 5: loss = 0.7413
val 5: loss = 0.6834 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6750
train 6: loss = 0.7312
val 6: loss = 0.6442 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6750
train 7: loss = 0.7098
val 7: loss = 0.6308 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6750
train 8: loss = 0.6975
val 8: loss = 0.7627 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.7000
train 9: loss = 0.6942
val 9: loss = 0.7065 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.6750
train 10: loss = 0.6886
val 10: loss = 0.6950 | acc = 0.4286 | precision = 0.3333 | recall = 1.0000 | f1 = 0.5000 | auc = 0.6750
test: loss = 0.7324 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8697
val 1: loss = 0.6941 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7959
train 2: loss = 0.7718
val 2: loss = 0.6950 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7959
train 3: loss = 0.7329
val 3: loss = 0.6924 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8367
train 4: loss = 0.7634
val 4: loss = 0.6961 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7755
train 5: loss = 0.7180
val 5: loss = 0.6868 | acc = 0.7143 | precision = 0.6364 | recall = 1.0000 | f1 = 0.7778 | auc = 0.7347
test: loss = 0.6913 | acc = 0.5000 | precision = 0.3810 | recall = 0.8889 | f1 = 0.5333 | auc = 0.7018

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.8876
val 1: loss = 0.6866 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 2: loss = 0.7285
val 2: loss = 0.6797 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 3: loss = 0.7542
val 3: loss = 0.6795 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 4: loss = 0.7331
val 4: loss = 0.7380 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 5: loss = 0.7417
val 5: loss = 0.6749 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 6: loss = 0.6908
val 6: loss = 0.6493 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 7: loss = 0.6484
val 7: loss = 0.6696 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 8: loss = 0.6528
val 8: loss = 0.6400 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.6875
train 9: loss = 0.5716
val 9: loss = 0.8737 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7292
train 10: loss = 0.5312
val 10: loss = 0.6346 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.6875
test: loss = 0.6799 | acc = 0.5926 | precision = 0.5000 | recall = 0.7273 | f1 = 0.5926 | auc = 0.6591

alibi_bias.dtype = float16
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9703
val 1: loss = 0.5877 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9556
train 2: loss = 0.6519
val 2: loss = 0.4141 | acc = 0.7857 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.9111
train 3: loss = 0.4820
val 3: loss = 0.3672 | acc = 0.8571 | precision = 1.0000 | recall = 0.6000 | f1 = 0.7500 | auc = 0.9111
train 4: loss = 0.2977
val 4: loss = 0.6638 | acc = 0.6429 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.9333
train 5: loss = 0.1875
val 5: loss = 0.7799 | acc = 0.6429 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8889
train 6: loss = 0.1253
val 6: loss = 0.4988 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.8667
train 7: loss = 0.0475
val 7: loss = 0.3562 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9333
train 8: loss = 0.0200
val 8: loss = 0.3771 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9333
test: loss = 0.9783 | acc = 0.7500 | precision = 0.7222 | recall = 0.8667 | f1 = 0.7879 | auc = 0.7897

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9052
val 1: loss = 0.4324 | acc = 0.8571 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9750
train 2: loss = 0.6000
val 2: loss = 0.4566 | acc = 0.7143 | precision = 0.5000 | recall = 0.7500 | f1 = 0.6000 | auc = 0.8750
train 3: loss = 0.5384
val 3: loss = 0.6052 | acc = 0.6429 | precision = 0.4444 | recall = 1.0000 | f1 = 0.6154 | auc = 0.9750
train 4: loss = 0.3717
val 4: loss = 0.6142 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.9250
train 5: loss = 0.1706
val 5: loss = 0.7848 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.9750
train 6: loss = 0.0470
val 6: loss = 0.3964 | acc = 0.8571 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.9500
train 7: loss = 0.0157
val 7: loss = 0.5433 | acc = 0.9286 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9500
train 8: loss = 0.0069
val 8: loss = 0.5401 | acc = 0.9286 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9500
test: loss = 1.6148 | acc = 0.6429 | precision = 0.7778 | recall = 0.4667 | f1 = 0.5833 | auc = 0.7897

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8716
val 1: loss = 0.6094 | acc = 0.7143 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8250
train 2: loss = 0.6742
val 2: loss = 0.6028 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7750
train 3: loss = 0.4708
val 3: loss = 0.5583 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8250
train 4: loss = 0.2629
val 4: loss = 0.9526 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8000
train 5: loss = 0.2178
val 5: loss = 1.0213 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8000
train 6: loss = 0.0549
val 6: loss = 1.3851 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8000
train 7: loss = 0.1216
val 7: loss = 1.5216 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8000
train 8: loss = 0.0147
val 8: loss = 1.5239 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8000
test: loss = 0.5278 | acc = 0.7500 | precision = 0.7647 | recall = 0.8125 | f1 = 0.7879 | auc = 0.7917

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0624
val 1: loss = 0.7327 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8980
train 2: loss = 0.7150
val 2: loss = 0.6685 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8980
train 3: loss = 0.5054
val 3: loss = 0.4721 | acc = 0.7857 | precision = 0.7000 | recall = 1.0000 | f1 = 0.8235 | auc = 0.8980
train 4: loss = 0.4198
val 4: loss = 0.7702 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.8776
train 5: loss = 0.2940
val 5: loss = 0.4403 | acc = 0.8571 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.9796
train 6: loss = 0.2310
val 6: loss = 0.2986 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.9796
train 7: loss = 0.0896
val 7: loss = 0.3368 | acc = 0.9286 | precision = 0.8750 | recall = 1.0000 | f1 = 0.9333 | auc = 0.9184
train 8: loss = 0.0410
val 8: loss = 0.4351 | acc = 0.8571 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.9184
test: loss = 0.3667 | acc = 0.8929 | precision = 0.8750 | recall = 0.7778 | f1 = 0.8235 | auc = 0.9181

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.1249
val 1: loss = 0.6535 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9375
train 2: loss = 0.6714
val 2: loss = 0.5178 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.9583
train 3: loss = 0.5808
val 3: loss = 0.5245 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9792
train 4: loss = 0.3353
val 4: loss = 0.3666 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9167
train 5: loss = 0.2135
val 5: loss = 0.7048 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.8958
train 6: loss = 0.1637
val 6: loss = 0.3881 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.8958
train 7: loss = 0.0801
val 7: loss = 0.4029 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
train 8: loss = 0.0531
val 8: loss = 0.4419 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.8750
test: loss = 0.4806 | acc = 0.7037 | precision = 0.6154 | recall = 0.7273 | f1 = 0.6667 | auc = 0.8409

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9012
val 1: loss = 0.4519 | acc = 0.7143 | precision = 1.0000 | recall = 0.2000 | f1 = 0.3333 | auc = 0.9556
train 2: loss = 0.6923
val 2: loss = 0.4211 | acc = 0.9286 | precision = 0.8333 | recall = 1.0000 | f1 = 0.9091 | auc = 0.9556
train 3: loss = 0.5188
val 3: loss = 0.3835 | acc = 0.7857 | precision = 0.6250 | recall = 1.0000 | f1 = 0.7692 | auc = 0.9556
train 4: loss = 0.3762
val 4: loss = 0.3525 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9111
train 5: loss = 0.3345
val 5: loss = 0.2905 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9556
train 6: loss = 0.2122
val 6: loss = 0.3229 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.9333
train 7: loss = 0.0858
val 7: loss = 0.3802 | acc = 0.8571 | precision = 0.8000 | recall = 0.8000 | f1 = 0.8000 | auc = 0.9556
train 8: loss = 0.0463
val 8: loss = 0.4308 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.9556
test: loss = 0.5603 | acc = 0.7143 | precision = 0.7692 | recall = 0.6667 | f1 = 0.7143 | auc = 0.8359

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9361
val 1: loss = 0.4180 | acc = 0.7857 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.9500
train 2: loss = 0.6197
val 2: loss = 0.3784 | acc = 0.7143 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.9250
train 3: loss = 0.5460
val 3: loss = 0.4233 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9500
train 4: loss = 0.3324
val 4: loss = 0.2992 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9500
train 5: loss = 0.2147
val 5: loss = 0.3215 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9250
train 6: loss = 0.1160
val 6: loss = 0.5482 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9750
train 7: loss = 0.0163
val 7: loss = 0.5270 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9750
train 8: loss = 0.0075
val 8: loss = 0.5990 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9500
test: loss = 1.0770 | acc = 0.6071 | precision = 0.7500 | recall = 0.4000 | f1 = 0.5217 | auc = 0.8000

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8511
val 1: loss = 0.4394 | acc = 0.9286 | precision = 0.8000 | recall = 1.0000 | f1 = 0.8889 | auc = 0.9750
train 2: loss = 0.6325
val 2: loss = 0.5347 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8750
train 3: loss = 0.5119
val 3: loss = 0.5269 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8500
train 4: loss = 0.3898
val 4: loss = 0.5339 | acc = 0.7143 | precision = 0.5000 | recall = 0.2500 | f1 = 0.3333 | auc = 0.8500
train 5: loss = 0.2421
val 5: loss = 0.6853 | acc = 0.7857 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.8250
train 6: loss = 0.1709
val 6: loss = 0.8338 | acc = 0.7857 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8500
train 7: loss = 0.0393
val 7: loss = 0.9097 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8500
train 8: loss = 0.0165
val 8: loss = 1.0248 | acc = 0.8571 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8250
test: loss = 0.6499 | acc = 0.5714 | precision = 0.8333 | recall = 0.3125 | f1 = 0.4545 | auc = 0.7344

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 7
train 1: loss = 0.8699
val 1: loss = 0.5147 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9184
train 2: loss = 0.5920
val 2: loss = 0.5327 | acc = 0.6429 | precision = 0.5833 | recall = 1.0000 | f1 = 0.7368 | auc = 0.9388
train 3: loss = 0.4328
val 3: loss = 0.4086 | acc = 0.9286 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 0.9592
train 4: loss = 0.4598
val 4: loss = 0.4366 | acc = 0.8571 | precision = 1.0000 | recall = 0.7143 | f1 = 0.8333 | auc = 0.9388
train 5: loss = 0.3046
val 5: loss = 0.3535 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9388
train 6: loss = 0.1886
val 6: loss = 0.5959 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.9388
train 7: loss = 0.0998
val 7: loss = 0.4825 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9388
test: loss = 0.4788 | acc = 0.7857 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8480

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8958
val 1: loss = 0.4688 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9167
train 2: loss = 0.5544
val 2: loss = 0.5663 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 3: loss = 0.4330
val 3: loss = 0.3490 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9167
train 4: loss = 0.3719
val 4: loss = 0.5741 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9583
train 5: loss = 0.1910
val 5: loss = 1.1202 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.9583
train 6: loss = 0.1690
val 6: loss = 0.4812 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9167
train 7: loss = 0.0418
val 7: loss = 0.5382 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9167
train 8: loss = 0.0290
val 8: loss = 0.4728 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9167
test: loss = 0.6262 | acc = 0.7407 | precision = 0.6667 | recall = 0.7273 | f1 = 0.6957 | auc = 0.7841

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8732
val 1: loss = 0.6742 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8000
train 2: loss = 0.7895
val 2: loss = 0.6692 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8222
train 3: loss = 0.7736
val 3: loss = 0.8438 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.8444
train 4: loss = 0.7476
val 4: loss = 0.6998 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.9111
train 5: loss = 0.7206
val 5: loss = 0.7228 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.9111
train 6: loss = 0.7158
val 6: loss = 0.6573 | acc = 0.6429 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9111
train 7: loss = 0.7001
val 7: loss = 0.6814 | acc = 0.7857 | precision = 0.6667 | recall = 0.8000 | f1 = 0.7273 | auc = 0.9111
train 8: loss = 0.6912
val 8: loss = 0.6801 | acc = 0.7143 | precision = 0.5714 | recall = 0.8000 | f1 = 0.6667 | auc = 0.9111
test: loss = 0.7069 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8985
val 1: loss = 0.5969 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9000
train 2: loss = 0.8134
val 2: loss = 0.6043 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8500
train 3: loss = 0.7873
val 3: loss = 0.8275 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.8500
train 4: loss = 0.7393
val 4: loss = 0.6383 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8750
train 5: loss = 0.7355
val 5: loss = 0.7342 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.9000
train 6: loss = 0.7217
val 6: loss = 0.7060 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.9000
train 7: loss = 0.7052
val 7: loss = 0.6711 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9000
train 8: loss = 0.6919
val 8: loss = 0.6968 | acc = 0.3571 | precision = 0.3077 | recall = 1.0000 | f1 = 0.4706 | auc = 0.9000
test: loss = 0.7841 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6564

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8843
val 1: loss = 0.6268 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9250
train 2: loss = 0.8199
val 2: loss = 0.6533 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9250
train 3: loss = 0.7935
val 3: loss = 0.6327 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7750
train 4: loss = 0.7419
val 4: loss = 0.7113 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.9000
train 5: loss = 0.7398
val 5: loss = 0.7159 | acc = 0.2857 | precision = 0.2857 | recall = 1.0000 | f1 = 0.4444 | auc = 0.9500
train 6: loss = 0.7156
val 6: loss = 0.6482 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9500
train 7: loss = 0.7042
val 7: loss = 0.6606 | acc = 0.7143 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.9500
train 8: loss = 0.6964
val 8: loss = 0.6919 | acc = 0.5000 | precision = 0.3636 | recall = 1.0000 | f1 = 0.5333 | auc = 0.9500
test: loss = 0.7339 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7865

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 7
train 1: loss = 0.8689
val 1: loss = 0.6923 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8571
train 2: loss = 0.7703
val 2: loss = 0.6940 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8776
train 3: loss = 0.7314
val 3: loss = 0.6898 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8776
train 4: loss = 0.7499
val 4: loss = 0.6945 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8776
train 5: loss = 0.7181
val 5: loss = 0.6960 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8776
train 6: loss = 0.7041
val 6: loss = 0.6846 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8776
train 7: loss = 0.6987
val 7: loss = 0.6841 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.8980
test: loss = 0.7212 | acc = 0.3214 | precision = 0.3214 | recall = 1.0000 | f1 = 0.4865 | auc = 0.6842

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8872
val 1: loss = 0.6865 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 2: loss = 0.7281
val 2: loss = 0.6785 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 3: loss = 0.7529
val 3: loss = 0.6791 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 4: loss = 0.7307
val 4: loss = 0.7202 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 5: loss = 0.7336
val 5: loss = 0.6752 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 6: loss = 0.6949
val 6: loss = 0.6717 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 7: loss = 0.6930
val 7: loss = 0.6677 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 8: loss = 0.6855
val 8: loss = 0.6895 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
test: loss = 0.6670 | acc = 0.5926 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7102

extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9664
val 1: loss = 0.5742 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.9375
train 2: loss = 0.6521
val 2: loss = 0.8789 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 3: loss = 0.5940
val 3: loss = 0.4891 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8750
train 4: loss = 0.4824
val 4: loss = 0.4234 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9375
train 5: loss = 0.2711
val 5: loss = 0.4531 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.9167
train 6: loss = 0.1188
val 6: loss = 0.4760 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9167
train 7: loss = 0.0354
val 7: loss = 0.4166 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9167
train 8: loss = 0.0067
val 8: loss = 0.4498 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9167
test: loss = 1.3150 | acc = 0.7500 | precision = 0.8333 | recall = 0.6667 | f1 = 0.7407 | auc = 0.7744

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9634
val 1: loss = 0.7380 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7959
train 2: loss = 0.5946
val 2: loss = 0.9382 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.7551
train 3: loss = 0.4939
val 3: loss = 0.7402 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8163
train 4: loss = 0.3484
val 4: loss = 0.4324 | acc = 0.9286 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 0.8571
train 5: loss = 0.0995
val 5: loss = 0.6499 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8776
train 6: loss = 0.0425
val 6: loss = 0.7470 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8776
train 7: loss = 0.0236
val 7: loss = 0.8129 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8776
train 8: loss = 0.0120
val 8: loss = 0.5672 | acc = 0.9286 | precision = 1.0000 | recall = 0.8571 | f1 = 0.9231 | auc = 0.8776
test: loss = 0.6141 | acc = 0.7500 | precision = 0.6429 | recall = 0.8182 | f1 = 0.7200 | auc = 0.7861

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0000
val 1: loss = 0.8050 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 2: loss = 0.5726
val 2: loss = 0.5732 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7917
train 3: loss = 0.4910
val 3: loss = 0.9379 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7500
train 4: loss = 0.4107
val 4: loss = 0.5091 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8125
train 5: loss = 0.1990
val 5: loss = 0.9704 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 6: loss = 0.0692
val 6: loss = 1.0972 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 7: loss = 0.0161
val 7: loss = 1.0186 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.8333
train 8: loss = 0.0064
val 8: loss = 1.0651 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.8333
test: loss = 0.5818 | acc = 0.8214 | precision = 0.8462 | recall = 0.7857 | f1 = 0.8148 | auc = 0.7908

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9749
val 1: loss = 0.6466 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7917
train 2: loss = 0.5306
val 2: loss = 0.6456 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7917
train 3: loss = 0.4430
val 3: loss = 0.7942 | acc = 0.7857 | precision = 0.8571 | recall = 0.7500 | f1 = 0.8000 | auc = 0.7500
train 4: loss = 0.2615
val 4: loss = 0.6665 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.9375
train 5: loss = 0.2076
val 5: loss = 0.3781 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9583
train 6: loss = 0.0517
val 6: loss = 0.7974 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
train 7: loss = 0.0273
val 7: loss = 1.0850 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
train 8: loss = 0.0084
val 8: loss = 1.1502 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
test: loss = 0.6240 | acc = 0.7500 | precision = 0.7857 | recall = 0.7333 | f1 = 0.7586 | auc = 0.8103

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9533
val 1: loss = 1.2525 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8125
train 2: loss = 0.6191
val 2: loss = 0.4979 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 3: loss = 0.5218
val 3: loss = 0.8112 | acc = 0.5714 | precision = 0.5833 | recall = 0.8750 | f1 = 0.7000 | auc = 0.7292
train 4: loss = 0.4578
val 4: loss = 0.9469 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7292
train 5: loss = 0.2465
val 5: loss = 0.5611 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8750
train 6: loss = 0.0795
val 6: loss = 1.2208 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7500
train 7: loss = 0.0275
val 7: loss = 1.2217 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8333
train 8: loss = 0.0082
val 8: loss = 1.2825 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.8333
test: loss = 0.5659 | acc = 0.6667 | precision = 0.5625 | recall = 0.8182 | f1 = 0.6667 | auc = 0.8636

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8254
val 1: loss = 0.6811 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8333
train 2: loss = 0.6390
val 2: loss = 0.5122 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8125
train 3: loss = 0.4193
val 3: loss = 0.5161 | acc = 0.7143 | precision = 0.6000 | recall = 1.0000 | f1 = 0.7500 | auc = 0.9167
train 4: loss = 0.3535
val 4: loss = 0.5775 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 5: loss = 0.1943
val 5: loss = 0.8217 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 6: loss = 0.1052
val 6: loss = 1.1771 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 7: loss = 0.0385
val 7: loss = 1.3431 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8958
train 8: loss = 0.0140
val 8: loss = 1.2779 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
test: loss = 0.5294 | acc = 0.7500 | precision = 0.9000 | recall = 0.6000 | f1 = 0.7200 | auc = 0.8410

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8940
val 1: loss = 0.5708 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8163
train 2: loss = 0.6181
val 2: loss = 0.5001 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
train 3: loss = 0.4613
val 3: loss = 0.5502 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.8367
train 4: loss = 0.3337
val 4: loss = 1.1438 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7959
train 5: loss = 0.2514
val 5: loss = 0.7630 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8776
train 6: loss = 0.0786
val 6: loss = 0.9185 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 7: loss = 0.0222
val 7: loss = 0.9070 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8367
train 8: loss = 0.0135
val 8: loss = 1.0640 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8571
test: loss = 0.6540 | acc = 0.6429 | precision = 0.5263 | recall = 0.9091 | f1 = 0.6667 | auc = 0.7701

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8286
val 1: loss = 0.7408 | acc = 0.4286 | precision = 0.4167 | recall = 0.8333 | f1 = 0.5556 | auc = 0.7917
train 2: loss = 0.6085
val 2: loss = 0.7826 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7500
train 3: loss = 0.4703
val 3: loss = 0.9622 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7708
train 4: loss = 0.3743
val 4: loss = 1.1255 | acc = 0.4286 | precision = 0.4167 | recall = 0.8333 | f1 = 0.5556 | auc = 0.7708
train 5: loss = 0.2518
val 5: loss = 1.3369 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7708
train 6: loss = 0.1269
val 6: loss = 1.4672 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7500
train 7: loss = 0.1488
val 7: loss = 1.0679 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 8: loss = 0.0457
val 8: loss = 1.2579 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.7708
test: loss = 0.6610 | acc = 0.6071 | precision = 0.5652 | recall = 0.9286 | f1 = 0.7027 | auc = 0.7959

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0261
val 1: loss = 0.5825 | acc = 0.6429 | precision = 0.6667 | recall = 0.7500 | f1 = 0.7059 | auc = 0.7917
train 2: loss = 0.5490
val 2: loss = 0.5575 | acc = 0.6429 | precision = 0.6667 | recall = 0.7500 | f1 = 0.7059 | auc = 0.7917
train 3: loss = 0.4809
val 3: loss = 1.4000 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.7083
train 4: loss = 0.3000
val 4: loss = 0.6149 | acc = 0.7143 | precision = 0.7000 | recall = 0.8750 | f1 = 0.7778 | auc = 0.8125
train 5: loss = 0.2550
val 5: loss = 0.8799 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8125
train 6: loss = 0.0626
val 6: loss = 1.4363 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8125
train 7: loss = 0.0097
val 7: loss = 1.3637 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8125
train 8: loss = 0.0041
val 8: loss = 1.3804 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8125
test: loss = 0.6984 | acc = 0.7857 | precision = 0.7368 | recall = 0.9333 | f1 = 0.8235 | auc = 0.7795

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9120
val 1: loss = 0.7254 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.5833
train 2: loss = 0.5554
val 2: loss = 0.9502 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.5625
train 3: loss = 0.5511
val 3: loss = 1.0906 | acc = 0.5000 | precision = 1.0000 | recall = 0.1250 | f1 = 0.2222 | auc = 0.6667
train 4: loss = 0.4690
val 4: loss = 0.7060 | acc = 0.6429 | precision = 0.6667 | recall = 0.7500 | f1 = 0.7059 | auc = 0.6875
train 5: loss = 0.3075
val 5: loss = 1.1555 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.6667
train 6: loss = 0.2000
val 6: loss = 1.0772 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7083
train 7: loss = 0.0853
val 7: loss = 1.7784 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7292
train 8: loss = 0.0536
val 8: loss = 1.5776 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7083
test: loss = 0.5549 | acc = 0.7037 | precision = 0.5789 | recall = 1.0000 | f1 = 0.7333 | auc = 0.9375

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8980
val 1: loss = 0.6921 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.7500
train 2: loss = 0.8089
val 2: loss = 0.6846 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 3: loss = 0.7462
val 3: loss = 0.6794 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7708
train 4: loss = 0.7846
val 4: loss = 0.6952 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7500
train 5: loss = 0.7266
val 5: loss = 0.7206 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7500
train 6: loss = 0.7258
val 6: loss = 0.6967 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7500
train 7: loss = 0.6987
val 7: loss = 0.6815 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.7083
train 8: loss = 0.6721
val 8: loss = 0.6832 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7083
test: loss = 0.7103 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6974

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9817
val 1: loss = 0.7653 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6327
train 2: loss = 0.7952
val 2: loss = 0.6981 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 3: loss = 0.7908
val 3: loss = 0.7242 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7551
train 4: loss = 0.7532
val 4: loss = 0.6927 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7755
train 5: loss = 0.7218
val 5: loss = 0.7005 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7755
train 6: loss = 0.7260
val 6: loss = 0.6908 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7143
train 7: loss = 0.6979
val 7: loss = 0.6896 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 8: loss = 0.6904
val 8: loss = 0.6894 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6939
test: loss = 0.6967 | acc = 0.3929 | precision = 0.3929 | recall = 1.0000 | f1 = 0.5641 | auc = 0.6791

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9745
val 1: loss = 0.8669 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.5417
train 2: loss = 0.7853
val 2: loss = 0.6998 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.5625
train 3: loss = 0.7751
val 3: loss = 0.7003 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 4: loss = 0.7291
val 4: loss = 0.7703 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.4583
train 5: loss = 0.7372
val 5: loss = 0.6937 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
train 6: loss = 0.7013
val 6: loss = 0.7514 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.4375
train 7: loss = 0.6758
val 7: loss = 0.7150 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.4583
train 8: loss = 0.6328
val 8: loss = 0.7481 | acc = 0.5000 | precision = 0.4545 | recall = 0.8333 | f1 = 0.5882 | auc = 0.4583
test: loss = 0.7109 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0962
val 1: loss = 0.6893 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.5625
train 2: loss = 0.7487
val 2: loss = 0.6849 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6042
train 3: loss = 0.7560
val 3: loss = 0.8983 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5833
train 4: loss = 0.7118
val 4: loss = 0.6821 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.5833
train 5: loss = 0.7017
val 5: loss = 0.7729 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5625
train 6: loss = 0.6951
val 6: loss = 0.6773 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.5833
train 7: loss = 0.6844
val 7: loss = 0.6743 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6042
train 8: loss = 0.6721
val 8: loss = 0.6801 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6458
test: loss = 0.6803 | acc = 0.5357 | precision = 0.5357 | recall = 1.0000 | f1 = 0.6977 | auc = 0.6154

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9754
val 1: loss = 0.8076 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.2917
train 2: loss = 0.7903
val 2: loss = 0.7709 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.3750
train 3: loss = 0.7532
val 3: loss = 0.6836 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.5208
train 4: loss = 0.7232
val 4: loss = 0.7561 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 5: loss = 0.7151
val 5: loss = 0.6839 | acc = 0.5000 | precision = 0.5385 | recall = 0.8750 | f1 = 0.6667 | auc = 0.6458
train 6: loss = 0.7074
val 6: loss = 0.6790 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6458
train 7: loss = 0.6781
val 7: loss = 0.7557 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 8: loss = 0.6723
val 8: loss = 0.6984 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.6042
test: loss = 0.7361 | acc = 0.4074 | precision = 0.4074 | recall = 1.0000 | f1 = 0.5789 | auc = 0.7614

use_alibi = False, use_rope = True
extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9599
val 1: loss = 0.6157 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.7500
train 2: loss = 0.6401
val 2: loss = 0.9848 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 3: loss = 0.6138
val 3: loss = 0.5622 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7500
train 4: loss = 0.4703
val 4: loss = 0.4674 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.8750
train 5: loss = 0.3079
val 5: loss = 0.7222 | acc = 0.6429 | precision = 0.5455 | recall = 1.0000 | f1 = 0.7059 | auc = 0.9167
train 6: loss = 0.2356
val 6: loss = 0.5216 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8750
train 7: loss = 0.1132
val 7: loss = 0.4537 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.9167
train 8: loss = 0.0817
val 8: loss = 0.5413 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8958
test: loss = 0.9707 | acc = 0.7500 | precision = 0.9000 | recall = 0.6000 | f1 = 0.7200 | auc = 0.7949

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9696
val 1: loss = 0.7412 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7347
train 2: loss = 0.5965
val 2: loss = 1.0381 | acc = 0.6429 | precision = 1.0000 | recall = 0.2857 | f1 = 0.4444 | auc = 0.7959
train 3: loss = 0.5139
val 3: loss = 0.6601 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.8163
train 4: loss = 0.3856
val 4: loss = 0.4018 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9184
train 5: loss = 0.1925
val 5: loss = 0.4838 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 6: loss = 0.1132
val 6: loss = 0.5246 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8980
train 7: loss = 0.0372
val 7: loss = 0.6832 | acc = 0.7857 | precision = 1.0000 | recall = 0.5714 | f1 = 0.7273 | auc = 0.8776
train 8: loss = 0.0268
val 8: loss = 0.6323 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8980
test: loss = 0.5829 | acc = 0.7143 | precision = 0.6154 | recall = 0.7273 | f1 = 0.6667 | auc = 0.8075

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0102
val 1: loss = 0.7866 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8542
train 2: loss = 0.6199
val 2: loss = 0.4759 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.8750
train 3: loss = 0.5130
val 3: loss = 0.5772 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 4: loss = 0.3220
val 4: loss = 0.4165 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.8958
train 5: loss = 0.2842
val 5: loss = 0.7030 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8750
train 6: loss = 0.1344
val 6: loss = 0.7188 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
train 7: loss = 0.0441
val 7: loss = 0.7758 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9167
train 8: loss = 0.0180
val 8: loss = 0.8096 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8958
test: loss = 0.8822 | acc = 0.5357 | precision = 0.5714 | recall = 0.2857 | f1 = 0.3810 | auc = 0.7296

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9857
val 1: loss = 0.6342 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.8333
train 2: loss = 0.5539
val 2: loss = 0.5417 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.7917
train 3: loss = 0.4507
val 3: loss = 0.5961 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8125
train 4: loss = 0.3162
val 4: loss = 0.5071 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.8542
train 5: loss = 0.3081
val 5: loss = 0.4464 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.8958
train 6: loss = 0.1357
val 6: loss = 0.3690 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9167
train 7: loss = 0.0735
val 7: loss = 0.6136 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9167
train 8: loss = 0.0466
val 8: loss = 0.8556 | acc = 0.8571 | precision = 1.0000 | recall = 0.7500 | f1 = 0.8571 | auc = 0.9167
test: loss = 0.5303 | acc = 0.8571 | precision = 0.8235 | recall = 0.9333 | f1 = 0.8750 | auc = 0.8462

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9362
val 1: loss = 1.3885 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8542
train 2: loss = 0.6398
val 2: loss = 0.4489 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8958
train 3: loss = 0.5848
val 3: loss = 0.7106 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.7917
train 4: loss = 0.4964
val 4: loss = 0.6927 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8333
train 5: loss = 0.3518
val 5: loss = 0.5869 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.8750
train 6: loss = 0.2269
val 6: loss = 0.5787 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 7: loss = 0.1592
val 7: loss = 0.6953 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
train 8: loss = 0.1050
val 8: loss = 0.6815 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.8750
test: loss = 0.5303 | acc = 0.7778 | precision = 0.6923 | recall = 0.8182 | f1 = 0.7500 | auc = 0.8636

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8093
val 1: loss = 0.7232 | acc = 0.5714 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.7708
train 2: loss = 0.6119
val 2: loss = 0.5034 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7917
train 3: loss = 0.4249
val 3: loss = 0.5372 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8125
train 4: loss = 0.3596
val 4: loss = 0.7423 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.7708
train 5: loss = 0.2118
val 5: loss = 1.3024 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 6: loss = 0.2339
val 6: loss = 0.7951 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 7: loss = 0.1104
val 7: loss = 1.0534 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
train 8: loss = 0.0663
val 8: loss = 1.0961 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.8333
test: loss = 0.4975 | acc = 0.7857 | precision = 0.9091 | recall = 0.6667 | f1 = 0.7692 | auc = 0.8462

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8232
val 1: loss = 0.6628 | acc = 0.5714 | precision = 0.5455 | recall = 0.8571 | f1 = 0.6667 | auc = 0.8367
train 2: loss = 0.6437
val 2: loss = 0.6115 | acc = 0.5714 | precision = 0.5455 | recall = 0.8571 | f1 = 0.6667 | auc = 0.8367
train 3: loss = 0.4842
val 3: loss = 0.6258 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8776
train 4: loss = 0.3661
val 4: loss = 1.0520 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.7959
train 5: loss = 0.3316
val 5: loss = 0.7046 | acc = 0.6429 | precision = 0.6000 | recall = 0.8571 | f1 = 0.7059 | auc = 0.8776
train 6: loss = 0.1746
val 6: loss = 0.8196 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8571
train 7: loss = 0.1121
val 7: loss = 0.9546 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
train 8: loss = 0.0595
val 8: loss = 1.0045 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.8571
test: loss = 0.7932 | acc = 0.5714 | precision = 0.4783 | recall = 1.0000 | f1 = 0.6471 | auc = 0.6898

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8501
val 1: loss = 0.6960 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.7917
train 2: loss = 0.6283
val 2: loss = 0.6954 | acc = 0.6429 | precision = 0.5556 | recall = 0.8333 | f1 = 0.6667 | auc = 0.7917
train 3: loss = 0.5256
val 3: loss = 0.6341 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.8750
train 4: loss = 0.3827
val 4: loss = 1.1666 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.8542
train 5: loss = 0.2984
val 5: loss = 0.7637 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 6: loss = 0.1816
val 6: loss = 1.1099 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7708
train 7: loss = 0.1868
val 7: loss = 0.9581 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.7917
train 8: loss = 0.0755
val 8: loss = 1.1131 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.7917
test: loss = 0.9406 | acc = 0.6786 | precision = 0.6667 | recall = 0.7143 | f1 = 0.6897 | auc = 0.7806

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.0359
val 1: loss = 0.5684 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8333
train 2: loss = 0.5443
val 2: loss = 0.5948 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8125
train 3: loss = 0.5158
val 3: loss = 1.3170 | acc = 0.7143 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7083
train 4: loss = 0.3201
val 4: loss = 0.5832 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.8125
train 5: loss = 0.2735
val 5: loss = 0.7681 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 6: loss = 0.1336
val 6: loss = 1.0467 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 7: loss = 0.0465
val 7: loss = 1.1755 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
train 8: loss = 0.0262
val 8: loss = 1.2096 | acc = 0.7857 | precision = 1.0000 | recall = 0.6250 | f1 = 0.7692 | auc = 0.8333
test: loss = 0.6017 | acc = 0.7143 | precision = 0.6842 | recall = 0.8667 | f1 = 0.7647 | auc = 0.7128

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8949
val 1: loss = 0.6531 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.6875
train 2: loss = 0.5627
val 2: loss = 0.9206 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.6875
train 3: loss = 0.5543
val 3: loss = 1.0357 | acc = 0.5714 | precision = 1.0000 | recall = 0.2500 | f1 = 0.4000 | auc = 0.7083
train 4: loss = 0.5109
val 4: loss = 0.5941 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7292
train 5: loss = 0.3890
val 5: loss = 0.7321 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
train 6: loss = 0.2612
val 6: loss = 0.7169 | acc = 0.7143 | precision = 0.7500 | recall = 0.7500 | f1 = 0.7500 | auc = 0.7708
train 7: loss = 0.1263
val 7: loss = 1.8346 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.7917
train 8: loss = 0.0998
val 8: loss = 1.3291 | acc = 0.6429 | precision = 0.8000 | recall = 0.5000 | f1 = 0.6154 | auc = 0.7708
test: loss = 0.5263 | acc = 0.7037 | precision = 0.5789 | recall = 1.0000 | f1 = 0.7333 | auc = 0.9659

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.8968
val 1: loss = 0.6955 | acc = 0.5000 | precision = 0.4615 | recall = 1.0000 | f1 = 0.6316 | auc = 0.4792
train 2: loss = 0.8094
val 2: loss = 0.6861 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 3: loss = 0.7472
val 3: loss = 0.6817 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 4: loss = 0.7854
val 4: loss = 0.6978 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6042
train 5: loss = 0.7284
val 5: loss = 0.7244 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6042
train 6: loss = 0.7295
val 6: loss = 0.6991 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6042
train 7: loss = 0.7048
val 7: loss = 0.6860 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 8: loss = 0.6842
val 8: loss = 0.6878 | acc = 0.5714 | precision = 0.5000 | recall = 0.1667 | f1 = 0.2500 | auc = 0.6250
test: loss = 0.7108 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7538

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9763
val 1: loss = 0.7591 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.5510
train 2: loss = 0.7969
val 2: loss = 0.6984 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6122
train 3: loss = 0.7920
val 3: loss = 0.7254 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 4: loss = 0.7540
val 4: loss = 0.6928 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6735
train 5: loss = 0.7224
val 5: loss = 0.7001 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6735
train 6: loss = 0.7266
val 6: loss = 0.6908 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6735
train 7: loss = 0.6989
val 7: loss = 0.6895 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 8: loss = 0.6918
val 8: loss = 0.6892 | acc = 0.5000 | precision = 0.5000 | recall = 1.0000 | f1 = 0.6667 | auc = 0.6531
test: loss = 0.6993 | acc = 0.3929 | precision = 0.3929 | recall = 1.0000 | f1 = 0.5641 | auc = 0.6417

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9784
val 1: loss = 0.8676 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.6042
train 2: loss = 0.7867
val 2: loss = 0.6973 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.7708
train 3: loss = 0.7771
val 3: loss = 0.6983 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7917
train 4: loss = 0.7337
val 4: loss = 0.7595 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8333
train 5: loss = 0.7443
val 5: loss = 0.6834 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.8333
train 6: loss = 0.7263
val 6: loss = 0.7023 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8333
train 7: loss = 0.7013
val 7: loss = 0.6969 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8125
train 8: loss = 0.6968
val 8: loss = 0.6945 | acc = 0.4286 | precision = 0.4286 | recall = 1.0000 | f1 = 0.6000 | auc = 0.8333
test: loss = 0.7151 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7755

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 1.1008
val 1: loss = 0.6892 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6875
train 2: loss = 0.7495
val 2: loss = 0.6851 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7083
train 3: loss = 0.7569
val 3: loss = 0.8973 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 4: loss = 0.7136
val 4: loss = 0.6815 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6458
train 5: loss = 0.7060
val 5: loss = 0.7703 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 6: loss = 0.7061
val 6: loss = 0.6805 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6458
train 7: loss = 0.7015
val 7: loss = 0.6803 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.6667
train 8: loss = 0.7031
val 8: loss = 0.6878 | acc = 0.6429 | precision = 0.6154 | recall = 1.0000 | f1 = 0.7619 | auc = 0.6667
test: loss = 0.6892 | acc = 0.5357 | precision = 0.5357 | recall = 1.0000 | f1 = 0.6977 | auc = 0.6718

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.9766
val 1: loss = 0.8048 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.3750
train 2: loss = 0.7908
val 2: loss = 0.7723 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.3958
train 3: loss = 0.7549
val 3: loss = 0.6826 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.5625
train 4: loss = 0.7259
val 4: loss = 0.7615 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 5: loss = 0.7194
val 5: loss = 0.6838 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7292
train 6: loss = 0.7160
val 6: loss = 0.6806 | acc = 0.5714 | precision = 0.5714 | recall = 1.0000 | f1 = 0.7273 | auc = 0.7292
train 7: loss = 0.6962
val 7: loss = 0.7427 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 8: loss = 0.6954
val 8: loss = 0.7035 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
test: loss = 0.7359 | acc = 0.4074 | precision = 0.4074 | recall = 1.0000 | f1 = 0.5789 | auc = 0.8466

