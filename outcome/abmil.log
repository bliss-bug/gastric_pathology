seed = 2024
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7034
val 1: loss = 0.6946 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.5510
train 2: loss = 0.6163
val 2: loss = 0.6558 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.6531
train 3: loss = 0.5339
val 3: loss = 0.6222 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7143
train 4: loss = 0.4744
val 4: loss = 0.6027 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7143
train 5: loss = 0.4031
val 5: loss = 0.6233 | acc = 0.7143 | precision = 0.6667 | recall = 0.8571 | f1 = 0.7500 | auc = 0.7347
train 6: loss = 0.3622
val 6: loss = 0.6142 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7143
train 7: loss = 0.3186
val 7: loss = 0.6203 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.6939
train 8: loss = 0.2890
val 8: loss = 0.6236 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
train 9: loss = 0.2717
val 9: loss = 0.6295 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
train 10: loss = 0.2626
val 10: loss = 0.6333 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7143
test: loss = 0.6452 | acc = 0.5714 | precision = 0.5333 | recall = 0.6154 | f1 = 0.5714 | auc = 0.6667

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6991
val 1: loss = 0.6955 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.5510
train 2: loss = 0.6248
val 2: loss = 0.6454 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.6735
train 3: loss = 0.5627
val 3: loss = 0.6369 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.6939
train 4: loss = 0.5108
val 4: loss = 0.6058 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7347
train 5: loss = 0.4387
val 5: loss = 0.5327 | acc = 0.8571 | precision = 0.7778 | recall = 1.0000 | f1 = 0.8750 | auc = 0.8367
train 6: loss = 0.3787
val 6: loss = 0.5219 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8776
train 7: loss = 0.3300
val 7: loss = 0.5322 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 8: loss = 0.2981
val 8: loss = 0.4890 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.9184
train 9: loss = 0.2710
val 9: loss = 0.4846 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8980
train 10: loss = 0.2596
val 10: loss = 0.4823 | acc = 0.8571 | precision = 0.8571 | recall = 0.8571 | f1 = 0.8571 | auc = 0.8980
test: loss = 0.6671 | acc = 0.6071 | precision = 0.5714 | recall = 0.6154 | f1 = 0.5926 | auc = 0.6821

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.7054
val 1: loss = 0.6820 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.5918
train 2: loss = 0.6235
val 2: loss = 0.6275 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.7143
train 3: loss = 0.5445
val 3: loss = 0.5804 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7755
train 4: loss = 0.5052
val 4: loss = 0.5411 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8571
train 5: loss = 0.4161
val 5: loss = 0.5164 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.8163
train 6: loss = 0.3622
val 6: loss = 0.5515 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.8163
train 7: loss = 0.3228
val 7: loss = 0.5232 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7959
train 8: loss = 0.2805
val 8: loss = 0.5165 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7959
train 9: loss = 0.2604
val 9: loss = 0.5238 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7551
train 10: loss = 0.2478
val 10: loss = 0.5268 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7551
test: loss = 0.5878 | acc = 0.6429 | precision = 0.6471 | recall = 0.7333 | f1 = 0.6875 | auc = 0.7538

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6848
val 1: loss = 0.6648 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6531
train 2: loss = 0.6049
val 2: loss = 0.6182 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7347
train 3: loss = 0.5310
val 3: loss = 0.5810 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8163
train 4: loss = 0.4684
val 4: loss = 0.5321 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 5: loss = 0.3920
val 5: loss = 0.5082 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8571
train 6: loss = 0.3438
val 6: loss = 0.4881 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8367
train 7: loss = 0.3041
val 7: loss = 0.4837 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8980
train 8: loss = 0.2723
val 8: loss = 0.4598 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.8776
train 9: loss = 0.2554
val 9: loss = 0.4591 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
train 10: loss = 0.2430
val 10: loss = 0.4578 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.8776
test: loss = 0.7492 | acc = 0.6429 | precision = 0.6000 | recall = 0.6923 | f1 = 0.6429 | auc = 0.6872

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6970
val 1: loss = 0.7167 | acc = 0.5000 | precision = 0.7500 | recall = 0.3333 | f1 = 0.4615 | auc = 0.5556
train 2: loss = 0.6220
val 2: loss = 0.7314 | acc = 0.3571 | precision = 0.5000 | recall = 0.1111 | f1 = 0.1818 | auc = 0.6889
train 3: loss = 0.5604
val 3: loss = 0.6880 | acc = 0.7143 | precision = 0.8571 | recall = 0.6667 | f1 = 0.7500 | auc = 0.6667
train 4: loss = 0.4784
val 4: loss = 0.7000 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.6444
train 5: loss = 0.4051
val 5: loss = 0.7616 | acc = 0.6429 | precision = 0.8333 | recall = 0.5556 | f1 = 0.6667 | auc = 0.6222
train 6: loss = 0.3379
val 6: loss = 0.7883 | acc = 0.5714 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.6000
train 7: loss = 0.2969
val 7: loss = 0.8317 | acc = 0.5714 | precision = 0.7143 | recall = 0.5556 | f1 = 0.6250 | auc = 0.5778
train 8: loss = 0.2574
val 8: loss = 0.8542 | acc = 0.5714 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.5556
train 9: loss = 0.2324
val 9: loss = 0.8712 | acc = 0.5714 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.5556
train 10: loss = 0.2205
val 10: loss = 0.8796 | acc = 0.5714 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.5556
test: loss = 0.6169 | acc = 0.5926 | precision = 0.5556 | recall = 0.4167 | f1 = 0.4762 | auc = 0.6778

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6834
val 1: loss = 0.6497 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.7551
train 2: loss = 0.5992
val 2: loss = 0.6264 | acc = 0.7143 | precision = 1.0000 | recall = 0.4286 | f1 = 0.6000 | auc = 0.7755
train 3: loss = 0.5140
val 3: loss = 0.6364 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7347
train 4: loss = 0.4376
val 4: loss = 0.6133 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
train 5: loss = 0.3678
val 5: loss = 0.6143 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7143
train 6: loss = 0.3148
val 6: loss = 0.6173 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7143
train 7: loss = 0.2741
val 7: loss = 0.6455 | acc = 0.5714 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.7143
train 8: loss = 0.2494
val 8: loss = 0.6432 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7143
train 9: loss = 0.2328
val 9: loss = 0.6518 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7347
train 10: loss = 0.2218
val 10: loss = 0.6495 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7347
test: loss = 0.5555 | acc = 0.7143 | precision = 0.7273 | recall = 0.6154 | f1 = 0.6667 | auc = 0.7795

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6723
val 1: loss = 0.6478 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7551
train 2: loss = 0.6065
val 2: loss = 0.6454 | acc = 0.5000 | precision = 0.5000 | recall = 0.1429 | f1 = 0.2222 | auc = 0.7755
train 3: loss = 0.5360
val 3: loss = 0.5900 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7755
train 4: loss = 0.4802
val 4: loss = 0.5896 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7959
train 5: loss = 0.4221
val 5: loss = 0.5919 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7755
train 6: loss = 0.3723
val 6: loss = 0.5987 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7551
train 7: loss = 0.3282
val 7: loss = 0.5953 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
train 8: loss = 0.3016
val 8: loss = 0.6462 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.6939
train 9: loss = 0.2796
val 9: loss = 0.6680 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.6735
train 10: loss = 0.2671
val 10: loss = 0.6745 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.6735
test: loss = 0.5794 | acc = 0.6786 | precision = 0.6667 | recall = 0.6154 | f1 = 0.6400 | auc = 0.7744

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6650
val 1: loss = 0.6674 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.6939
train 2: loss = 0.5917
val 2: loss = 0.6626 | acc = 0.5714 | precision = 1.0000 | recall = 0.1429 | f1 = 0.2500 | auc = 0.8163
train 3: loss = 0.5343
val 3: loss = 0.6348 | acc = 0.7857 | precision = 0.8333 | recall = 0.7143 | f1 = 0.7692 | auc = 0.7347
train 4: loss = 0.4697
val 4: loss = 0.6489 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.7143
train 5: loss = 0.4179
val 5: loss = 0.5960 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7755
train 6: loss = 0.3704
val 6: loss = 0.6576 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7143
train 7: loss = 0.3231
val 7: loss = 0.6229 | acc = 0.7857 | precision = 0.7500 | recall = 0.8571 | f1 = 0.8000 | auc = 0.7347
train 8: loss = 0.2991
val 8: loss = 0.6466 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
train 9: loss = 0.2737
val 9: loss = 0.6689 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7143
train 10: loss = 0.2641
val 10: loss = 0.6641 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7143
test: loss = 0.5278 | acc = 0.8571 | precision = 0.9231 | recall = 0.8000 | f1 = 0.8571 | auc = 0.8564

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6684
val 1: loss = 0.6352 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7551
train 2: loss = 0.5655
val 2: loss = 0.6109 | acc = 0.6429 | precision = 0.7500 | recall = 0.4286 | f1 = 0.5455 | auc = 0.7551
train 3: loss = 0.4896
val 3: loss = 0.5876 | acc = 0.5714 | precision = 0.6000 | recall = 0.4286 | f1 = 0.5000 | auc = 0.7755
train 4: loss = 0.4168
val 4: loss = 0.5923 | acc = 0.5714 | precision = 0.6667 | recall = 0.2857 | f1 = 0.4000 | auc = 0.7347
train 5: loss = 0.3413
val 5: loss = 0.5467 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.7347
train 6: loss = 0.2898
val 6: loss = 0.5382 | acc = 0.5714 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.7551
train 7: loss = 0.2467
val 7: loss = 0.5406 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7755
train 8: loss = 0.2220
val 8: loss = 0.5543 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7551
train 9: loss = 0.2038
val 9: loss = 0.5744 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7347
train 10: loss = 0.1930
val 10: loss = 0.5823 | acc = 0.6429 | precision = 0.6250 | recall = 0.7143 | f1 = 0.6667 | auc = 0.7347
test: loss = 0.6881 | acc = 0.7500 | precision = 0.7143 | recall = 0.7692 | f1 = 0.7407 | auc = 0.7077

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6856
val 1: loss = 0.6684 | acc = 0.6429 | precision = 1.0000 | recall = 0.4444 | f1 = 0.6154 | auc = 0.7111
train 2: loss = 0.5935
val 2: loss = 0.6538 | acc = 0.6429 | precision = 0.7000 | recall = 0.7778 | f1 = 0.7368 | auc = 0.6222
train 3: loss = 0.5113
val 3: loss = 0.6197 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.5778
train 4: loss = 0.4358
val 4: loss = 0.5745 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.6667
train 5: loss = 0.3911
val 5: loss = 0.6037 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.6444
train 6: loss = 0.3368
val 6: loss = 0.6276 | acc = 0.5000 | precision = 0.6250 | recall = 0.5556 | f1 = 0.5882 | auc = 0.6444
train 7: loss = 0.2962
val 7: loss = 0.6235 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.6889
train 8: loss = 0.2682
val 8: loss = 0.6283 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.6444
train 9: loss = 0.2502
val 9: loss = 0.6255 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.6444
train 10: loss = 0.2413
val 10: loss = 0.6294 | acc = 0.5714 | precision = 0.6364 | recall = 0.7778 | f1 = 0.7000 | auc = 0.6444
test: loss = 0.5602 | acc = 0.7407 | precision = 0.6667 | recall = 0.8333 | f1 = 0.7407 | auc = 0.8111

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6956
val 1: loss = 0.6928 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 2: loss = 0.6927
val 2: loss = 0.6934 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 3: loss = 0.6938
val 3: loss = 0.6934 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 4: loss = 0.6923
val 4: loss = 0.6928 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 5: loss = 0.6918
val 5: loss = 0.6927 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 6: loss = 0.6913
val 6: loss = 0.6928 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 7: loss = 0.6908
val 7: loss = 0.6927 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 8: loss = 0.6907
val 8: loss = 0.6924 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 9: loss = 0.6903
val 9: loss = 0.6924 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 10: loss = 0.6901
val 10: loss = 0.6924 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
test: loss = 0.6904 | acc = 0.5357 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5692

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6943
val 1: loss = 0.6929 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 2: loss = 0.6933
val 2: loss = 0.6935 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 3: loss = 0.6925
val 3: loss = 0.6940 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 4: loss = 0.6926
val 4: loss = 0.6931 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 5: loss = 0.6914
val 5: loss = 0.6935 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 6: loss = 0.6917
val 6: loss = 0.6938 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 7: loss = 0.6910
val 7: loss = 0.6936 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 8: loss = 0.6909
val 8: loss = 0.6933 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 9: loss = 0.6905
val 9: loss = 0.6934 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 10: loss = 0.6904
val 10: loss = 0.6933 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
test: loss = 0.6925 | acc = 0.5357 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.3795

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6941
val 1: loss = 0.6931 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 2: loss = 0.6914
val 2: loss = 0.6941 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 3: loss = 0.6896
val 3: loss = 0.6955 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 4: loss = 0.6903
val 4: loss = 0.6953 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 5: loss = 0.6888
val 5: loss = 0.6961 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 6: loss = 0.6890
val 6: loss = 0.6968 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 7: loss = 0.6884
val 7: loss = 0.6959 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 8: loss = 0.6880
val 8: loss = 0.6959 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 9: loss = 0.6876
val 9: loss = 0.6960 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 10: loss = 0.6875
val 10: loss = 0.6960 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
test: loss = 0.6955 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5385

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6939
val 1: loss = 0.6931 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 2: loss = 0.6930
val 2: loss = 0.6932 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 3: loss = 0.6930
val 3: loss = 0.6930 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6735
train 4: loss = 0.6931
val 4: loss = 0.6932 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6939
train 5: loss = 0.6919
val 5: loss = 0.6927 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 6: loss = 0.6911
val 6: loss = 0.6928 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 7: loss = 0.6910
val 7: loss = 0.6925 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 8: loss = 0.6906
val 8: loss = 0.6925 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 9: loss = 0.6903
val 9: loss = 0.6925 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
train 10: loss = 0.6901
val 10: loss = 0.6924 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7143
test: loss = 0.6904 | acc = 0.5357 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5487

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6938
val 1: loss = 0.7072 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4222
train 2: loss = 0.6925
val 2: loss = 0.7080 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4222
train 3: loss = 0.6916
val 3: loss = 0.7144 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4222
train 4: loss = 0.6908
val 4: loss = 0.7156 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4667
train 5: loss = 0.6904
val 5: loss = 0.7142 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6222
train 6: loss = 0.6898
val 6: loss = 0.7171 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 7: loss = 0.6895
val 7: loss = 0.7164 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 8: loss = 0.6889
val 8: loss = 0.7167 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 9: loss = 0.6889
val 9: loss = 0.7166 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
train 10: loss = 0.6888
val 10: loss = 0.7174 | acc = 0.3571 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6444
test: loss = 0.6889 | acc = 0.5556 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5278

seed = 2048
extraction = gigapath, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6795
val 1: loss = 0.6010 | acc = 0.8571 | precision = 0.7500 | recall = 1.0000 | f1 = 0.8571 | auc = 0.9167
train 2: loss = 0.5773
val 2: loss = 0.5599 | acc = 0.7857 | precision = 0.6667 | recall = 1.0000 | f1 = 0.8000 | auc = 0.8958
train 3: loss = 0.4984
val 3: loss = 0.5318 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 4: loss = 0.4126
val 4: loss = 0.5148 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8542
train 5: loss = 0.3559
val 5: loss = 0.5191 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.8125
train 6: loss = 0.2911
val 6: loss = 0.5142 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7917
train 7: loss = 0.2508
val 7: loss = 0.5640 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7292
train 8: loss = 0.2259
val 8: loss = 0.5787 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7292
train 9: loss = 0.2061
val 9: loss = 0.5899 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7292
train 10: loss = 0.1960
val 10: loss = 0.5945 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7292
test: loss = 0.6511 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.7292

extraction = gigapath, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6818
val 1: loss = 0.6512 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.7500
train 2: loss = 0.5951
val 2: loss = 0.6157 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7500
train 3: loss = 0.5028
val 3: loss = 0.5940 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.6875
train 4: loss = 0.4107
val 4: loss = 0.5599 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7917
train 5: loss = 0.3284
val 5: loss = 0.5532 | acc = 0.6429 | precision = 0.6000 | recall = 0.5000 | f1 = 0.5455 | auc = 0.7917
train 6: loss = 0.2730
val 6: loss = 0.5432 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7708
train 7: loss = 0.2290
val 7: loss = 0.5677 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7708
train 8: loss = 0.2058
val 8: loss = 0.5761 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7708
train 9: loss = 0.1883
val 9: loss = 0.5800 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7708
train 10: loss = 0.1767
val 10: loss = 0.5834 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7708
test: loss = 0.4871 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.8410

extraction = gigapath, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6674
val 1: loss = 0.6899 | acc = 0.4286 | precision = 0.4000 | recall = 0.6667 | f1 = 0.5000 | auc = 0.6875
train 2: loss = 0.5717
val 2: loss = 0.6881 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.6667
train 3: loss = 0.4910
val 3: loss = 0.6299 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7083
train 4: loss = 0.4121
val 4: loss = 0.6568 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.6875
train 5: loss = 0.3533
val 5: loss = 0.6901 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.6458
train 6: loss = 0.2883
val 6: loss = 0.7083 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.6875
train 7: loss = 0.2411
val 7: loss = 0.6667 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.7083
train 8: loss = 0.2163
val 8: loss = 0.6804 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.7083
train 9: loss = 0.1942
val 9: loss = 0.7049 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.6875
train 10: loss = 0.1839
val 10: loss = 0.7079 | acc = 0.7143 | precision = 0.6667 | recall = 0.6667 | f1 = 0.6667 | auc = 0.6875
test: loss = 0.5626 | acc = 0.6786 | precision = 0.6154 | recall = 0.6667 | f1 = 0.6400 | auc = 0.7865

extraction = gigapath, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6668
val 1: loss = 0.7458 | acc = 0.2857 | precision = 0.2727 | recall = 0.6000 | f1 = 0.3750 | auc = 0.5556
train 2: loss = 0.5794
val 2: loss = 0.6705 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.6222
train 3: loss = 0.4879
val 3: loss = 0.7158 | acc = 0.5000 | precision = 0.3750 | recall = 0.6000 | f1 = 0.4615 | auc = 0.5778
train 4: loss = 0.4048
val 4: loss = 0.6829 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
train 5: loss = 0.3541
val 5: loss = 0.7432 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
train 6: loss = 0.3048
val 6: loss = 0.7862 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6222
train 7: loss = 0.2684
val 7: loss = 0.7324 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
train 8: loss = 0.2409
val 8: loss = 0.7258 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
train 9: loss = 0.2254
val 9: loss = 0.7436 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
train 10: loss = 0.2168
val 10: loss = 0.7453 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
test: loss = 0.6173 | acc = 0.6786 | precision = 0.5625 | recall = 0.8182 | f1 = 0.6667 | auc = 0.8556

extraction = gigapath, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6557
val 1: loss = 0.7298 | acc = 0.3571 | precision = 0.3000 | recall = 0.6000 | f1 = 0.4000 | auc = 0.5333
train 2: loss = 0.5717
val 2: loss = 0.6843 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.5778
train 3: loss = 0.4707
val 3: loss = 0.6682 | acc = 0.7143 | precision = 0.6000 | recall = 0.6000 | f1 = 0.6000 | auc = 0.6222
train 4: loss = 0.3733
val 4: loss = 0.6637 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6222
train 5: loss = 0.3122
val 5: loss = 0.7358 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6222
train 6: loss = 0.2491
val 6: loss = 0.8365 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.5778
train 7: loss = 0.2165
val 7: loss = 0.8123 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.5778
train 8: loss = 0.1890
val 8: loss = 0.8060 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.5778
train 9: loss = 0.1737
val 9: loss = 0.8130 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.5778
train 10: loss = 0.1660
val 10: loss = 0.8183 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.5556
test: loss = 0.6533 | acc = 0.6296 | precision = 0.6250 | recall = 0.4167 | f1 = 0.5000 | auc = 0.6556

extraction = uni, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6740
val 1: loss = 0.5855 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.8750
train 2: loss = 0.5454
val 2: loss = 0.5004 | acc = 0.9286 | precision = 1.0000 | recall = 0.8333 | f1 = 0.9091 | auc = 1.0000
train 3: loss = 0.4518
val 3: loss = 0.4451 | acc = 0.9286 | precision = 0.8571 | recall = 1.0000 | f1 = 0.9231 | auc = 0.9792
train 4: loss = 0.3722
val 4: loss = 0.3930 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9792
train 5: loss = 0.3020
val 5: loss = 0.3663 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9375
train 6: loss = 0.2456
val 6: loss = 0.3660 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9167
train 7: loss = 0.2088
val 7: loss = 0.3635 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.9167
train 8: loss = 0.1837
val 8: loss = 0.3573 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9167
train 9: loss = 0.1689
val 9: loss = 0.3557 | acc = 0.8571 | precision = 0.8333 | recall = 0.8333 | f1 = 0.8333 | auc = 0.9167
train 10: loss = 0.1593
val 10: loss = 0.3549 | acc = 0.7857 | precision = 0.7143 | recall = 0.8333 | f1 = 0.7692 | auc = 0.9167
test: loss = 0.8352 | acc = 0.6071 | precision = 0.6667 | recall = 0.6250 | f1 = 0.6452 | auc = 0.6510

extraction = uni, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6879
val 1: loss = 0.6581 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.6667
train 2: loss = 0.5627
val 2: loss = 0.6219 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.7292
train 3: loss = 0.4913
val 3: loss = 0.6145 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.6667
train 4: loss = 0.4315
val 4: loss = 0.5869 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7500
train 5: loss = 0.3751
val 5: loss = 0.5810 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7292
train 6: loss = 0.3364
val 6: loss = 0.5699 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7708
train 7: loss = 0.3058
val 7: loss = 0.5690 | acc = 0.7143 | precision = 0.7500 | recall = 0.5000 | f1 = 0.6000 | auc = 0.7708
train 8: loss = 0.2817
val 8: loss = 0.5657 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7500
train 9: loss = 0.2655
val 9: loss = 0.5682 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7500
train 10: loss = 0.2559
val 10: loss = 0.5660 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.7500
test: loss = 0.4664 | acc = 0.7143 | precision = 0.7059 | recall = 0.8000 | f1 = 0.7500 | auc = 0.8359

extraction = uni, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6812
val 1: loss = 0.6471 | acc = 0.7143 | precision = 1.0000 | recall = 0.3333 | f1 = 0.5000 | auc = 0.6250
train 2: loss = 0.5513
val 2: loss = 0.6020 | acc = 0.7857 | precision = 1.0000 | recall = 0.5000 | f1 = 0.6667 | auc = 0.6875
train 3: loss = 0.4702
val 3: loss = 0.5751 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7083
train 4: loss = 0.3969
val 4: loss = 0.5842 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7083
train 5: loss = 0.3386
val 5: loss = 0.5605 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7292
train 6: loss = 0.2872
val 6: loss = 0.5576 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7292
train 7: loss = 0.2506
val 7: loss = 0.5954 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7083
train 8: loss = 0.2199
val 8: loss = 0.5674 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7292
train 9: loss = 0.2023
val 9: loss = 0.5715 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7292
train 10: loss = 0.1932
val 10: loss = 0.5749 | acc = 0.8571 | precision = 1.0000 | recall = 0.6667 | f1 = 0.8000 | auc = 0.7292
test: loss = 0.5367 | acc = 0.7857 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.7708

extraction = uni, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6803
val 1: loss = 0.7385 | acc = 0.3571 | precision = 0.2500 | recall = 0.4000 | f1 = 0.3077 | auc = 0.5111
train 2: loss = 0.5516
val 2: loss = 0.6718 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.5333
train 3: loss = 0.4617
val 3: loss = 0.6261 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.5556
train 4: loss = 0.4031
val 4: loss = 0.7579 | acc = 0.5714 | precision = 0.4286 | recall = 0.6000 | f1 = 0.5000 | auc = 0.5556
train 5: loss = 0.3394
val 5: loss = 0.6757 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6000
train 6: loss = 0.3032
val 6: loss = 0.6816 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6000
train 7: loss = 0.2607
val 7: loss = 0.7209 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.5778
train 8: loss = 0.2337
val 8: loss = 0.7226 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6222
train 9: loss = 0.2120
val 9: loss = 0.7067 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6444
train 10: loss = 0.2020
val 10: loss = 0.7100 | acc = 0.6429 | precision = 0.5000 | recall = 0.6000 | f1 = 0.5455 | auc = 0.6444
test: loss = 0.5551 | acc = 0.6786 | precision = 0.6000 | recall = 0.5455 | f1 = 0.5714 | auc = 0.7914

extraction = uni, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6887
val 1: loss = 0.7608 | acc = 0.3571 | precision = 0.1667 | recall = 0.2000 | f1 = 0.1818 | auc = 0.2889
train 2: loss = 0.5663
val 2: loss = 0.7391 | acc = 0.5000 | precision = 0.3333 | recall = 0.4000 | f1 = 0.3636 | auc = 0.4444
train 3: loss = 0.4808
val 3: loss = 0.7900 | acc = 0.3571 | precision = 0.2500 | recall = 0.4000 | f1 = 0.3077 | auc = 0.4444
train 4: loss = 0.4164
val 4: loss = 0.7503 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.5333
train 5: loss = 0.3312
val 5: loss = 0.7344 | acc = 0.6429 | precision = 0.5000 | recall = 0.4000 | f1 = 0.4444 | auc = 0.6222
train 6: loss = 0.2806
val 6: loss = 0.7889 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.5556
train 7: loss = 0.2421
val 7: loss = 0.7935 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.6222
train 8: loss = 0.2196
val 8: loss = 0.8392 | acc = 0.5000 | precision = 0.3333 | recall = 0.4000 | f1 = 0.3636 | auc = 0.5778
train 9: loss = 0.1977
val 9: loss = 0.8390 | acc = 0.5714 | precision = 0.4000 | recall = 0.4000 | f1 = 0.4000 | auc = 0.5778
train 10: loss = 0.1881
val 10: loss = 0.8540 | acc = 0.5000 | precision = 0.3333 | recall = 0.4000 | f1 = 0.3636 | auc = 0.5778
test: loss = 0.4800 | acc = 0.7778 | precision = 0.8000 | recall = 0.6667 | f1 = 0.7273 | auc = 0.8556

extraction = resnet50, fold = 1, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6949
val 1: loss = 0.6899 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5000
train 2: loss = 0.6909
val 2: loss = 0.6868 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
train 3: loss = 0.6899
val 3: loss = 0.6847 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6042
train 4: loss = 0.6893
val 4: loss = 0.6844 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 5: loss = 0.6888
val 5: loss = 0.6846 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 6: loss = 0.6886
val 6: loss = 0.6835 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 7: loss = 0.6878
val 7: loss = 0.6829 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 8: loss = 0.6871
val 8: loss = 0.6829 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 9: loss = 0.6869
val 9: loss = 0.6829 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 10: loss = 0.6867
val 10: loss = 0.6828 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
test: loss = 0.7084 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5990

extraction = resnet50, fold = 2, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6955
val 1: loss = 0.6907 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4167
train 2: loss = 0.6924
val 2: loss = 0.6883 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4375
train 3: loss = 0.6919
val 3: loss = 0.6873 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4583
train 4: loss = 0.6904
val 4: loss = 0.6865 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5000
train 5: loss = 0.6908
val 5: loss = 0.6872 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5000
train 6: loss = 0.6900
val 6: loss = 0.6862 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5208
train 7: loss = 0.6899
val 7: loss = 0.6854 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5208
train 8: loss = 0.6889
val 8: loss = 0.6856 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5208
train 9: loss = 0.6888
val 9: loss = 0.6855 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
train 10: loss = 0.6886
val 10: loss = 0.6855 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
test: loss = 0.6984 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7385

extraction = resnet50, fold = 3, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6946
val 1: loss = 0.6924 | acc = 0.5000 | precision = 0.3333 | recall = 0.1667 | f1 = 0.2222 | auc = 0.4792
train 2: loss = 0.6942
val 2: loss = 0.6917 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5208
train 3: loss = 0.6933
val 3: loss = 0.6922 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.5625
train 4: loss = 0.6926
val 4: loss = 0.6908 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5625
train 5: loss = 0.6926
val 5: loss = 0.6921 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.5625
train 6: loss = 0.6921
val 6: loss = 0.6914 | acc = 0.3571 | precision = 0.2000 | recall = 0.1667 | f1 = 0.1818 | auc = 0.5625
train 7: loss = 0.6918
val 7: loss = 0.6904 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5625
train 8: loss = 0.6909
val 8: loss = 0.6905 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.5625
train 9: loss = 0.6907
val 9: loss = 0.6906 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.5625
train 10: loss = 0.6907
val 10: loss = 0.6905 | acc = 0.6429 | precision = 1.0000 | recall = 0.1667 | f1 = 0.2857 | auc = 0.5625
test: loss = 0.6914 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5365

extraction = resnet50, fold = 4, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6950
val 1: loss = 0.6958 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6000
train 2: loss = 0.6944
val 2: loss = 0.6967 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.5778
train 3: loss = 0.6937
val 3: loss = 0.7009 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.5778
train 4: loss = 0.6927
val 4: loss = 0.7005 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.5778
train 5: loss = 0.6921
val 5: loss = 0.7024 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 6: loss = 0.6929
val 6: loss = 0.7020 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 7: loss = 0.6912
val 7: loss = 0.7011 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 8: loss = 0.6910
val 8: loss = 0.7019 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 9: loss = 0.6909
val 9: loss = 0.7019 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 10: loss = 0.6908
val 10: loss = 0.7020 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
test: loss = 0.6955 | acc = 0.3929 | precision = 0.3929 | recall = 1.0000 | f1 = 0.5641 | auc = 0.5348

extraction = resnet50, fold = 5, lr = 0.0001, weight_decay = 0.0002, epochs = 10
train 1: loss = 0.6949
val 1: loss = 0.6933 | acc = 0.5000 | precision = 0.4000 | recall = 0.8000 | f1 = 0.5333 | auc = 0.6000
train 2: loss = 0.6951
val 2: loss = 0.6945 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6222
train 3: loss = 0.6957
val 3: loss = 0.6941 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.6444
train 4: loss = 0.6939
val 4: loss = 0.6946 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7111
train 5: loss = 0.6936
val 5: loss = 0.6958 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7111
train 6: loss = 0.6923
val 6: loss = 0.6939 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.7111
train 7: loss = 0.6924
val 7: loss = 0.6947 | acc = 0.3571 | precision = 0.3571 | recall = 1.0000 | f1 = 0.5263 | auc = 0.7111
train 8: loss = 0.6918
val 8: loss = 0.6938 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.7111
train 9: loss = 0.6915
val 9: loss = 0.6936 | acc = 0.4286 | precision = 0.3636 | recall = 0.8000 | f1 = 0.5000 | auc = 0.7111
train 10: loss = 0.6916
val 10: loss = 0.6938 | acc = 0.5000 | precision = 0.4167 | recall = 1.0000 | f1 = 0.5882 | auc = 0.7111
test: loss = 0.6932 | acc = 0.5926 | precision = 0.5238 | recall = 0.9167 | f1 = 0.6667 | auc = 0.5722

extraction = gigapath, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7169
val 1: loss = 0.6863 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6042
train 2: loss = 0.6387
val 2: loss = 0.6670 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.6667
train 3: loss = 0.5687
val 3: loss = 0.6512 | acc = 0.5000 | precision = 0.4444 | recall = 0.6667 | f1 = 0.5333 | auc = 0.6458
train 4: loss = 0.5064
val 4: loss = 0.6395 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6250
train 5: loss = 0.4433
val 5: loss = 0.6599 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6667
train 6: loss = 0.3987
val 6: loss = 0.6612 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.6667
train 7: loss = 0.3679
val 7: loss = 0.6836 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6458
train 8: loss = 0.3499
val 8: loss = 0.6888 | acc = 0.5000 | precision = 0.4286 | recall = 0.5000 | f1 = 0.4615 | auc = 0.6458
test: loss = 0.5990 | acc = 0.6786 | precision = 0.7143 | recall = 0.6667 | f1 = 0.6897 | auc = 0.7282

extraction = gigapath, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7306
val 1: loss = 0.6869 | acc = 0.5714 | precision = 0.5556 | recall = 0.7143 | f1 = 0.6250 | auc = 0.5510
train 2: loss = 0.6304
val 2: loss = 0.6430 | acc = 0.5000 | precision = 0.5000 | recall = 0.7143 | f1 = 0.5882 | auc = 0.7551
train 3: loss = 0.5651
val 3: loss = 0.6206 | acc = 0.5000 | precision = 0.5000 | recall = 0.7143 | f1 = 0.5882 | auc = 0.7347
train 4: loss = 0.5097
val 4: loss = 0.6041 | acc = 0.5714 | precision = 0.5556 | recall = 0.7143 | f1 = 0.6250 | auc = 0.7755
train 5: loss = 0.4507
val 5: loss = 0.5856 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7755
train 6: loss = 0.4070
val 6: loss = 0.5783 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7551
train 7: loss = 0.3741
val 7: loss = 0.5754 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7551
train 8: loss = 0.3572
val 8: loss = 0.5762 | acc = 0.7143 | precision = 0.7143 | recall = 0.7143 | f1 = 0.7143 | auc = 0.7551
test: loss = 0.6137 | acc = 0.6786 | precision = 0.5833 | recall = 0.6364 | f1 = 0.6087 | auc = 0.7219

extraction = gigapath, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7299
val 1: loss = 0.6645 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.6250
train 2: loss = 0.6398
val 2: loss = 0.6041 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.7708
train 3: loss = 0.5781
val 3: loss = 0.5807 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8542
train 4: loss = 0.4955
val 4: loss = 0.5707 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.8750
train 5: loss = 0.4176
val 5: loss = 0.5545 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 6: loss = 0.3446
val 6: loss = 0.5503 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8333
train 7: loss = 0.3066
val 7: loss = 0.5532 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
train 8: loss = 0.2873
val 8: loss = 0.5504 | acc = 0.7143 | precision = 0.6250 | recall = 0.8333 | f1 = 0.7143 | auc = 0.8542
test: loss = 0.6318 | acc = 0.6786 | precision = 0.6923 | recall = 0.6429 | f1 = 0.6667 | auc = 0.6888

extraction = gigapath, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7163
val 1: loss = 0.7130 | acc = 0.5000 | precision = 0.6667 | recall = 0.2500 | f1 = 0.3636 | auc = 0.6042
train 2: loss = 0.6135
val 2: loss = 0.7973 | acc = 0.5000 | precision = 0.6667 | recall = 0.2500 | f1 = 0.3636 | auc = 0.4792
train 3: loss = 0.5284
val 3: loss = 0.8330 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.4375
train 4: loss = 0.4646
val 4: loss = 0.8185 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.4792
train 5: loss = 0.4092
val 5: loss = 0.7748 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.5625
train 6: loss = 0.3711
val 6: loss = 0.8863 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.5000
train 7: loss = 0.3417
val 7: loss = 0.8964 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.5000
train 8: loss = 0.3288
val 8: loss = 0.9012 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.5000
test: loss = 0.7234 | acc = 0.5357 | precision = 0.6667 | recall = 0.2667 | f1 = 0.3810 | auc = 0.5949

extraction = gigapath, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6933
val 1: loss = 0.6698 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.6667
train 2: loss = 0.6179
val 2: loss = 0.7009 | acc = 0.6429 | precision = 1.0000 | recall = 0.3750 | f1 = 0.5455 | auc = 0.5417
train 3: loss = 0.5188
val 3: loss = 0.7048 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6042
train 4: loss = 0.4372
val 4: loss = 0.7521 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.5625
train 5: loss = 0.3675
val 5: loss = 0.7258 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6042
train 6: loss = 0.3093
val 6: loss = 0.7127 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6875
train 7: loss = 0.2798
val 7: loss = 0.7071 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.6875
train 8: loss = 0.2635
val 8: loss = 0.7125 | acc = 0.7143 | precision = 0.8333 | recall = 0.6250 | f1 = 0.7143 | auc = 0.6875
test: loss = 0.7166 | acc = 0.5556 | precision = 0.4545 | recall = 0.4545 | f1 = 0.4545 | auc = 0.4205

extraction = uni, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7293
val 1: loss = 0.7211 | acc = 0.4286 | precision = 0.4000 | recall = 0.6667 | f1 = 0.5000 | auc = 0.5208
train 2: loss = 0.5941
val 2: loss = 0.7005 | acc = 0.5714 | precision = 0.5000 | recall = 0.8333 | f1 = 0.6250 | auc = 0.6250
train 3: loss = 0.5044
val 3: loss = 0.6447 | acc = 0.6429 | precision = 0.5714 | recall = 0.6667 | f1 = 0.6154 | auc = 0.6875
train 4: loss = 0.4205
val 4: loss = 0.6455 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7500
train 5: loss = 0.3581
val 5: loss = 0.6261 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7292
train 6: loss = 0.3180
val 6: loss = 0.6426 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7292
train 7: loss = 0.2847
val 7: loss = 0.6714 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7500
train 8: loss = 0.2741
val 8: loss = 0.6599 | acc = 0.5714 | precision = 0.5000 | recall = 0.6667 | f1 = 0.5714 | auc = 0.7500
test: loss = 0.6374 | acc = 0.6429 | precision = 0.7273 | recall = 0.5333 | f1 = 0.6154 | auc = 0.7077

extraction = uni, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7361
val 1: loss = 0.7393 | acc = 0.4286 | precision = 0.4444 | recall = 0.5714 | f1 = 0.5000 | auc = 0.4898
train 2: loss = 0.5879
val 2: loss = 0.7034 | acc = 0.5714 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.6327
train 3: loss = 0.5143
val 3: loss = 0.6648 | acc = 0.5714 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.6735
train 4: loss = 0.4444
val 4: loss = 0.6526 | acc = 0.5714 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.6939
train 5: loss = 0.3968
val 5: loss = 0.6586 | acc = 0.5000 | precision = 0.5000 | recall = 0.5714 | f1 = 0.5333 | auc = 0.6735
train 6: loss = 0.3590
val 6: loss = 0.6407 | acc = 0.7143 | precision = 0.8000 | recall = 0.5714 | f1 = 0.6667 | auc = 0.6735
train 7: loss = 0.3357
val 7: loss = 0.6504 | acc = 0.5714 | precision = 0.5714 | recall = 0.5714 | f1 = 0.5714 | auc = 0.6735
train 8: loss = 0.3252
val 8: loss = 0.6479 | acc = 0.6429 | precision = 0.6667 | recall = 0.5714 | f1 = 0.6154 | auc = 0.6735
test: loss = 0.5403 | acc = 0.7143 | precision = 0.6154 | recall = 0.7273 | f1 = 0.6667 | auc = 0.7968

extraction = uni, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7452
val 1: loss = 0.8080 | acc = 0.2143 | precision = 0.2222 | recall = 0.3333 | f1 = 0.2667 | auc = 0.2708
train 2: loss = 0.6243
val 2: loss = 0.7620 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.3750
train 3: loss = 0.5564
val 3: loss = 0.7325 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.4792
train 4: loss = 0.4960
val 4: loss = 0.7321 | acc = 0.4286 | precision = 0.3333 | recall = 0.3333 | f1 = 0.3333 | auc = 0.5417
train 5: loss = 0.4561
val 5: loss = 0.7305 | acc = 0.4286 | precision = 0.3333 | recall = 0.3333 | f1 = 0.3333 | auc = 0.5417
train 6: loss = 0.4104
val 6: loss = 0.7173 | acc = 0.5000 | precision = 0.4000 | recall = 0.3333 | f1 = 0.3636 | auc = 0.5625
train 7: loss = 0.3860
val 7: loss = 0.7254 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5625
train 8: loss = 0.3737
val 8: loss = 0.7236 | acc = 0.5714 | precision = 0.5000 | recall = 0.5000 | f1 = 0.5000 | auc = 0.5625
test: loss = 0.4788 | acc = 0.7500 | precision = 0.7059 | recall = 0.8571 | f1 = 0.7742 | auc = 0.8622

extraction = uni, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7279
val 1: loss = 0.7733 | acc = 0.3571 | precision = 0.4286 | recall = 0.3750 | f1 = 0.4000 | auc = 0.3333
train 2: loss = 0.5917
val 2: loss = 0.7638 | acc = 0.5000 | precision = 0.6667 | recall = 0.2500 | f1 = 0.3636 | auc = 0.5000
train 3: loss = 0.4898
val 3: loss = 0.7049 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.6042
train 4: loss = 0.4068
val 4: loss = 0.7166 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.6458
train 5: loss = 0.3646
val 5: loss = 0.7177 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6875
train 6: loss = 0.3123
val 6: loss = 0.7011 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6875
train 7: loss = 0.2881
val 7: loss = 0.6961 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.6667
train 8: loss = 0.2729
val 8: loss = 0.7092 | acc = 0.6429 | precision = 0.7143 | recall = 0.6250 | f1 = 0.6667 | auc = 0.7083
test: loss = 0.5913 | acc = 0.6786 | precision = 0.7500 | recall = 0.6000 | f1 = 0.6667 | auc = 0.7692

extraction = uni, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.7477
val 1: loss = 0.7849 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 2: loss = 0.6159
val 2: loss = 0.6746 | acc = 0.5714 | precision = 0.6000 | recall = 0.7500 | f1 = 0.6667 | auc = 0.5625
train 3: loss = 0.5585
val 3: loss = 0.6849 | acc = 0.5714 | precision = 0.7500 | recall = 0.3750 | f1 = 0.5000 | auc = 0.5833
train 4: loss = 0.4961
val 4: loss = 0.6551 | acc = 0.5000 | precision = 0.6000 | recall = 0.3750 | f1 = 0.4615 | auc = 0.6042
train 5: loss = 0.4299
val 5: loss = 0.6444 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6042
train 6: loss = 0.3888
val 6: loss = 0.6600 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6250
train 7: loss = 0.3614
val 7: loss = 0.6747 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6458
train 8: loss = 0.3475
val 8: loss = 0.6782 | acc = 0.5714 | precision = 0.6667 | recall = 0.5000 | f1 = 0.5714 | auc = 0.6458
test: loss = 0.5001 | acc = 0.7407 | precision = 0.6667 | recall = 0.7273 | f1 = 0.6957 | auc = 0.8295

extraction = resnet50, seed = 123, fold = 1, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6940
val 1: loss = 0.6871 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 2: loss = 0.6920
val 2: loss = 0.6867 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 3: loss = 0.6916
val 3: loss = 0.6857 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 4: loss = 0.6912
val 4: loss = 0.6854 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 5: loss = 0.6910
val 5: loss = 0.6852 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 6: loss = 0.6904
val 6: loss = 0.6849 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 7: loss = 0.6896
val 7: loss = 0.6848 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
train 8: loss = 0.6892
val 8: loss = 0.6847 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7083
test: loss = 0.6994 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5897

extraction = resnet50, seed = 123, fold = 2, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6958
val 1: loss = 0.6934 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4490
train 2: loss = 0.6935
val 2: loss = 0.6930 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5510
train 3: loss = 0.6946
val 3: loss = 0.6928 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5918
train 4: loss = 0.6933
val 4: loss = 0.6926 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6122
train 5: loss = 0.6932
val 5: loss = 0.6924 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6327
train 6: loss = 0.6925
val 6: loss = 0.6923 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 7: loss = 0.6915
val 7: loss = 0.6922 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
train 8: loss = 0.6914
val 8: loss = 0.6922 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6531
test: loss = 0.6910 | acc = 0.6071 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4332

extraction = resnet50, seed = 123, fold = 3, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6960
val 1: loss = 0.6885 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4375
train 2: loss = 0.6931
val 2: loss = 0.6887 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 3: loss = 0.6935
val 3: loss = 0.6871 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5833
train 4: loss = 0.6929
val 4: loss = 0.6868 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 5: loss = 0.6934
val 5: loss = 0.6868 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6250
train 6: loss = 0.6920
val 6: loss = 0.6864 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 7: loss = 0.6914
val 7: loss = 0.6866 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 8: loss = 0.6914
val 8: loss = 0.6865 | acc = 0.5714 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
test: loss = 0.6930 | acc = 0.5000 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6990

extraction = resnet50, seed = 123, fold = 4, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6934
val 1: loss = 0.7003 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
train 2: loss = 0.6899
val 2: loss = 0.7041 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6875
train 3: loss = 0.6886
val 3: loss = 0.7086 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 4: loss = 0.6878
val 4: loss = 0.7096 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 5: loss = 0.6876
val 5: loss = 0.7103 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7292
train 6: loss = 0.6866
val 6: loss = 0.7116 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 7: loss = 0.6862
val 7: loss = 0.7113 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
train 8: loss = 0.6860
val 8: loss = 0.7113 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.7500
test: loss = 0.6971 | acc = 0.4643 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4667

extraction = resnet50, seed = 123, fold = 5, lr = 0.0001, weight_decay = 0.0005, epochs = 8
train 1: loss = 0.6963
val 1: loss = 0.6950 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.4792
train 2: loss = 0.6961
val 2: loss = 0.6951 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5417
train 3: loss = 0.6932
val 3: loss = 0.6948 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 4: loss = 0.6936
val 4: loss = 0.6970 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6667
train 5: loss = 0.6923
val 5: loss = 0.6954 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 6: loss = 0.6919
val 6: loss = 0.6954 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 7: loss = 0.6918
val 7: loss = 0.6959 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
train 8: loss = 0.6916
val 8: loss = 0.6960 | acc = 0.4286 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.6458
test: loss = 0.6897 | acc = 0.5926 | precision = 0.0000 | recall = 0.0000 | f1 = 0.0000 | auc = 0.5170

